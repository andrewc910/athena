crystal_doc_search_index_callback({"repository_name":"athena","body":"# Athena\n\n[![CI](https://github.com/athena-framework/athena/workflows/CI/badge.svg)](https://github.com/athena-framework/athena/actions?query=workflow%3ACI)\n[![Latest release](https://img.shields.io/github/release/athena-framework/athena.svg)](https://github.com/athena-framework/athena/releases)\n\nA web framework comprised of reusable, independent components.\n\n## Documentation\n\n* [External Docs](https://athenaframework.org)\n* [API Docs](https://athena-framework.github.io/athena/Athena/Routing.html)\n\n## Contributing\n\n1. Fork it (https://github.com/athena-framework/athena/fork)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [George Dietrich](https://github.com/blacksmoke16) - creator and maintainer\n","program":{"html_id":"athena/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/ACF","path":"ACF.html","kind":"alias","full_name":"ACF","name":"ACF","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-config/src/athena-config.cr","line_number":8,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-config/src/athena-config.cr#L8"}],"repository_name":"athena","program":false,"enum":false,"alias":true,"aliased":"Athena::Config","const":false,"constants":[{"id":"CONFIG_PATH_NAME","name":"CONFIG_PATH_NAME","value":"\"ATHENA_CONFIG_PATH\"","doc":"The name of the environment variable that stores the path to the configuration file.","summary":"<p>The name of the environment variable that stores the path to the configuration file.</p>"},{"id":"DEFAULT_CONFIG_PATH","name":"DEFAULT_CONFIG_PATH","value":"\"./athena.yml\"","doc":"The default path to the configuration file.","summary":"<p>The default path to the configuration file.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Convenience alias to make referencing `Athena::Config` types easier.","summary":"<p>Convenience alias to make referencing <code><a href=\"Athena/Config.html\">Athena::Config</a></code> types easier.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/ADI","path":"ADI.html","kind":"alias","full_name":"ADI","name":"ADI","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-dependency_injection/src/athena-dependency_injection.cr","line_number":10,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-dependency_injection/src/athena-dependency_injection.cr#L10"}],"repository_name":"athena","program":false,"enum":false,"alias":true,"aliased":"Athena::DependencyInjection","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Convenience alias to make referencing `Athena::DependencyInjection` types easier.","summary":"<p>Convenience alias to make referencing <code><a href=\"Athena/DependencyInjection.html\">Athena::DependencyInjection</a></code> types easier.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/AED","path":"AED.html","kind":"alias","full_name":"AED","name":"AED","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-event_dispatcher/src/athena-event_dispatcher.cr","line_number":4,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/athena-event_dispatcher.cr#L4"}],"repository_name":"athena","program":false,"enum":false,"alias":true,"aliased":"Athena::EventDispatcher","const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Convenience alias to make referencing `Athena::EventDispatcher` types easier.","summary":"<p>Convenience alias to make referencing <code><a href=\"Athena/EventDispatcher.html\">Athena::EventDispatcher</a></code> types easier.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/ART","path":"ART.html","kind":"alias","full_name":"ART","name":"ART","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/athena.cr","line_number":41,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/athena.cr#L41"}],"repository_name":"athena","program":false,"enum":false,"alias":true,"aliased":"Athena::Routing","const":false,"constants":[{"id":"LOGGER","name":"LOGGER","value":"Log.for(\"athena.routing\")","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Convenience alias to make referencing `Athena::Routing` types easier.","summary":"<p>Convenience alias to make referencing <code><a href=\"Athena/Routing.html\">Athena::Routing</a></code> types easier.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/ARTA","path":"ARTA.html","kind":"alias","full_name":"ARTA","name":"ARTA","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/athena.cr","line_number":44,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/athena.cr#L44"}],"repository_name":"athena","program":false,"enum":false,"alias":true,"aliased":"Athena::Routing::Annotations","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Convenience alias to make referencing `Athena::Routing::Annotations` types easier.","summary":"<p>Convenience alias to make referencing <code><a href=\"Athena/Routing/Annotations.html\">Athena::Routing::Annotations</a></code> types easier.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/ASPEC","path":"ASPEC.html","kind":"alias","full_name":"ASPEC","name":"ASPEC","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-spec/src/athena-spec.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-spec/src/athena-spec.cr#L2"}],"repository_name":"athena","program":false,"enum":false,"alias":true,"aliased":"Athena::Spec","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Convenience alias to make referencing `Athena::Spec` types easier.","summary":"<p>Convenience alias to make referencing <code><a href=\"Athena/Spec.html\">Athena::Spec</a></code> types easier.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/ASR","path":"ASR.html","kind":"alias","full_name":"ASR","name":"ASR","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/athena-serializer.cr","line_number":25,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/athena-serializer.cr#L25"}],"repository_name":"athena","program":false,"enum":false,"alias":true,"aliased":"Athena::Serializer","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Convenience alias to make referencing `Athena::Serializer` types easier.","summary":"<p>Convenience alias to make referencing <code><a href=\"Athena/Serializer.html\">Athena::Serializer</a></code> types easier.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/ASRA","path":"ASRA.html","kind":"alias","full_name":"ASRA","name":"ASRA","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/athena-serializer.cr","line_number":28,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/athena-serializer.cr#L28"}],"repository_name":"athena","program":false,"enum":false,"alias":true,"aliased":"Athena::Serializer::Annotations","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Convenience alias to make referencing `Athena::Serializer::Annotations` types easier.","summary":"<p>Convenience alias to make referencing <code><a href=\"Athena/Serializer/Annotations.html\">Athena::Serializer::Annotations</a></code> types easier.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Assert","path":"Assert.html","kind":"alias","full_name":"Assert","name":"Assert","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-validator/src/athena-validator.cr","line_number":31,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/athena-validator.cr#L31"}],"repository_name":"athena","program":false,"enum":false,"alias":true,"aliased":"Athena::Validator::Annotations","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Used to apply constraints to instance variables and types via annotations.\n\n```\n@[Assert::NotBlank]\nproperty name : String\n```\nNOTE: Constraints, including custom ones, are automatically added to this namespace.","summary":"<p>Used to apply constraints to instance variables and types via annotations.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena","path":"Athena.html","kind":"module","full_name":"Athena","name":"Athena","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-config/src/athena-config.cr","line_number":13,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-config/src/athena-config.cr#L13"},{"filename":"lib/athena-spec/src/methods.cr","line_number":9,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-spec/src/methods.cr#L9"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"ENV_NAME","name":"ENV_NAME","value":"\"ATHENA_ENV\"","doc":"The name of the environment variable used to determine Athena's current environment.","summary":"<p>The name of the environment variable used to determine Athena's current environment.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A web framework comprised of reusable, independent components.\n\nSee [Athena Framework](https://github.com/athena-framework) on Github.","summary":"<p>A web framework comprised of reusable, independent components.</p>","class_methods":[{"id":"environment:String-class-method","html_id":"environment:String-class-method","name":"environment","doc":"Returns the current environment Athena is in based on `ENV_NAME`.  Defaults to `development` if not defined.","summary":"<p>Returns the current environment Athena is in based on <code><a href=\"Athena.html#ENV_NAME\">ENV_NAME</a></code>.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-config/src/athena-config.cr#L18","def":{"name":"environment","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"ENV[ENV_NAME]? || \"development\""}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Config","path":"Athena/Config.html","kind":"module","full_name":"Athena::Config","name":"Config","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-config/src/annotation_configurations.cr","line_number":1,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-config/src/annotation_configurations.cr#L1"},{"filename":"lib/athena-config/src/athena-config.cr","line_number":32,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-config/src/athena-config.cr#L32"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"CONFIG_PATH_NAME","name":"CONFIG_PATH_NAME","value":"\"ATHENA_CONFIG_PATH\"","doc":"The name of the environment variable that stores the path to the configuration file.","summary":"<p>The name of the environment variable that stores the path to the configuration file.</p>"},{"id":"DEFAULT_CONFIG_PATH","name":"DEFAULT_CONFIG_PATH","value":"\"./athena.yml\"","doc":"The default path to the configuration file.","summary":"<p>The default path to the configuration file.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena","kind":"module","full_name":"Athena","name":"Athena"},"doc":"Athena's Config component contains common types for configuring a component.\n\nThe main types include:\n\n* `ACF::Base` represents the structure of Athena's YAML configuration file.\n* `ACF::ConfigurationResolver` allows resolving the configuration for a given component within a service.\n* `ACF::AnnotationConfigurations` stores annotation configurations registered via `Athena::Config.configuration_annotation`.\nAnnotations must be read/supplied to `.new` by owning shard.\n\nSee each specific type for more detailed information.","summary":"<p>Athena's Config component contains common types for configuring a component.</p>","class_methods":[{"id":"config-class-method","html_id":"config-class-method","name":"config","doc":"Returns the `ACF::Base` object instantiated from the configuration file located at `.config_path`.\n\nThe contents of the configuration file are included into the binary at compile time so that the file itself\ndoes not need to be present for the binary to run.  The configuration string is not processed until `.config` is called for the first time\nso that in the future it will respect ENV vars for the environment the binary is in.\n\nTODO: Handle resolving ENV vars and DI parameters within the configuration file.","summary":"<p>Returns the <code><a href=\"../Athena/Config/Base.html\">ACF::Base</a></code> object instantiated from the configuration file located at <code><a href=\"../Athena/Config.html#config_path:String-class-method\">.config_path</a></code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-config/src/athena-config.cr#L85","def":{"name":"config","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @@config).nil?\n  @@config = (ACF.load)\nelse\n  value\nend"}},{"id":"config_path:String-class-method","html_id":"config_path:String-class-method","name":"config_path","doc":"Returns the current path that the configuration file is located at.\n\nFalls back on `DEFAULT_CONFIG_PATH` if a `ATHENA_CONFIG_PATH` ENV variable is not defined.","summary":"<p>Returns the current path that the configuration file is located at.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-config/src/athena-config.cr#L90","def":{"name":"config_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"ENV[CONFIG_PATH_NAME]? || DEFAULT_CONFIG_PATH"}}],"constructors":[],"instance_methods":[],"macros":[{"id":"configuration_annotation(name,*args,&)-macro","html_id":"configuration_annotation(name,*args,&amp;)-macro","name":"configuration_annotation","doc":"Registers a configuration annotation with the provided *name*.\nDefines a configuration record with the provided *args*, if any, that represents the possible arguments that the annotation accepts.\nMay also be used with a block to add custom methods to the configuration record.\n\n### Example\n\n```\n# Defines an annotation without any arguments.\nACF.configuration_annotation Secure\n\n# Defines annotation with a required and optional argument.\n# The default value will be used if that key isn't supplied in the annotation.\nACF.configuration_annotation SomeAnn, id : Int32, debug : Bool = true\n\n# A block can be used to define custom methods on the configuration object.\nACF.configuration_annotation CustomAnn, first_name : String, last_name : String do\n  def name : String\n    \"#{@first_name} #{@last_name}\"\n  end\nend\n```\n\nNOTE: The logic to actually do the resolution of the annotations must be handled in the owning shard.\n`Athena::Config` only defines the common logic that each implementation can use.\nSee `ACF::AnnotationConfigurations` for more information.","summary":"<p>Registers a configuration annotation with the provided <em>name</em>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(name, *args, &)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-config/src/athena-config.cr#L61","def":{"name":"configuration_annotation","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},"visibility":"Public","body":"      annotation \n{{ name.id }}\n; \nend\n\n      \n# :nodoc:\n\n      record \n{{ name.id }}\nConfiguration < ACF::AnnotationConfigurations::ConfigurationBase\n{% if args.empty? %}{% else %}, {{ *args }}{% end %}\n do\n        \n{{ yield }}\n\n      \nend\n\n      \n{% CUSTOM_ANNOTATIONS << name %}\n\n    \n"}}],"types":[{"html_id":"athena/Athena/Config/AnnotationConfigurations","path":"Athena/Config/AnnotationConfigurations.html","kind":"struct","full_name":"Athena::Config::AnnotationConfigurations","name":"AnnotationConfigurations","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-config/src/annotation_configurations.cr","line_number":37,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-config/src/annotation_configurations.cr#L37"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Config","kind":"module","full_name":"Athena::Config","name":"Config"},"doc":"Wraps a hash of configuration annotations applied to a given type, method, or instance variable.\nProvides the logic to access each annotation's configuration in a type safe manner.\n\nImplementations using this type must define the logic to provide the annotation hash manually;\nthis would most likely just be something like:\n\n```\n# Define a hash to store the configurations.\n{% custom_configurations = {} of Nil => Nil %}\n\n# Iterate over the stored annotation classes.\n{% for ann_class in ACF::CUSTOM_ANNOTATIONS %}\n   {% ann_class = ann_class.resolve %}\n\n   # Define an array to store the annotation configurations of this type.\n   {% annotations = [] of Nil %}\n\n   # Iterate over each annotation of this type on the given type, method, or instance variable.\n   {% for ann in type_method_instance_variable.annotations ann_class %}\n     # Add a new instance of the annotations configuration to the array.\n     # Add the annotation's positional arguments first, if any, then named arguments.\n     {% annotations << \"#{ann_class}Configuration.new(#{ann.args.empty? ? \"\".id : \"#{ann.args.splat},\".id}#{ann.named_args.double_splat})\".id %}\n   {% end %}\n\n   # Update the configuration hash with the annotation class and configuration objects, but only if there was at least one.\n   {% custom_configurations[ann_class] = \"(#{annotations} of ACF::AnnotationConfigurations::ConfigurationBase)\".id unless annotations.empty? %}\n {% end %}\n\n# ...\n\n# Use the built hash to instantiate a new `ACF::AnnotationConfigurations` instance.\nACF::AnnotationConfigurations.new({{custom_configurations}} of ACF::AnnotationConfigurations::Classes => Array(ACF::AnnotationConfigurations::ConfigurationBase)),\n```\n\nTODO: Centralize the hash resolution logic once [this issue](https://github.com/crystal-lang/crystal/issues/8835) is resolved.","summary":"<p>Wraps a hash of configuration annotations applied to a given type, method, or instance variable.</p>","class_methods":[],"constructors":[{"id":"new(annotation_hash:AnnotationHash=AnnotationHash.new)-class-method","html_id":"new(annotation_hash:AnnotationHash=AnnotationHash.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"annotation_hash","doc":null,"default_value":"AnnotationHash.new","external_name":"annotation_hash","restriction":"AnnotationHash"}],"args_string":"(annotation_hash : AnnotationHash = <span class=\"t\">AnnotationHash</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-config/src/annotation_configurations.cr#L46","def":{"name":"new","args":[{"name":"annotation_hash","doc":null,"default_value":"AnnotationHash.new","external_name":"annotation_hash","restriction":"AnnotationHash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(annotation_hash)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"has?(ann_class:ACF::AnnotationConfigurations::Classes):Bool-instance-method","html_id":"has?(ann_class:ACF::AnnotationConfigurations::Classes):Bool-instance-method","name":"has?","doc":"Returns `true` if there are annotations of the provided *ann_class*, otherwise `false`.","summary":"<p>Returns <code>true</code> if there are annotations of the provided <em>ann_class</em>, otherwise <code>false</code>.</p>","abstract":false,"args":[{"name":"ann_class","doc":null,"default_value":"","external_name":"ann_class","restriction":"ACF::AnnotationConfigurations::Classes"}],"args_string":"(ann_class : ACF::AnnotationConfigurations::Classes) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-config/src/annotation_configurations.cr#L46","def":{"name":"has?","args":[{"name":"ann_class","doc":null,"default_value":"","external_name":"ann_class","restriction":"ACF::AnnotationConfigurations::Classes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@annotation_hash.has_key?(ann_class)"}}],"macros":[],"types":[{"html_id":"athena/Athena/Config/AnnotationConfigurations/AnnotationHash","path":"Athena/Config/AnnotationConfigurations/AnnotationHash.html","kind":"alias","full_name":"Athena::Config::AnnotationConfigurations::AnnotationHash","name":"AnnotationHash","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-config/src/annotation_configurations.cr","line_number":46,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-config/src/annotation_configurations.cr#L46"}],"repository_name":"athena","program":false,"enum":false,"alias":true,"aliased":"Hash(Athena::Config::AnnotationConfigurations::Placeholder.class, Array(Athena::Config::AnnotationConfigurations::ConfigurationBase))","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Config/AnnotationConfigurations","kind":"struct","full_name":"Athena::Config::AnnotationConfigurations","name":"AnnotationConfigurations"},"doc":"The Hash type that will store the annotation configurations.","summary":"<p>The Hash type that will store the annotation configurations.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Config/AnnotationConfigurations/Classes","path":"Athena/Config/AnnotationConfigurations/Classes.html","kind":"alias","full_name":"Athena::Config::AnnotationConfigurations::Classes","name":"Classes","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-config/src/annotation_configurations.cr","line_number":46,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-config/src/annotation_configurations.cr#L46"}],"repository_name":"athena","program":false,"enum":false,"alias":true,"aliased":"Athena::Config::AnnotationConfigurations::Placeholder.class","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Config/AnnotationConfigurations","kind":"struct","full_name":"Athena::Config::AnnotationConfigurations","name":"AnnotationConfigurations"},"doc":"A union representing the possible annotation classes that could be applied to a type, method, or instance variable.","summary":"<p>A union representing the possible annotation classes that could be applied to a type, method, or instance variable.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Config/AnnotationConfigurations/ConfigurationBase","path":"Athena/Config/AnnotationConfigurations/ConfigurationBase.html","kind":"struct","full_name":"Athena::Config::AnnotationConfigurations::ConfigurationBase","name":"ConfigurationBase","abstract":true,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-config/src/annotation_configurations.cr","line_number":39,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-config/src/annotation_configurations.cr#L39"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Config/AnnotationConfigurations","kind":"struct","full_name":"Athena::Config::AnnotationConfigurations","name":"AnnotationConfigurations"},"doc":"Base type of annotation configuration objects registered via `Athena::Config.configuration_annotation`.","summary":"<p>Base type of annotation configuration objects registered via <code><a href=\"../../../Athena/Config.html#configuration_annotation(name,*args,&)-macro\">Athena::Config.configuration_annotation</a></code>.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-config/src/annotation_configurations.cr#L39","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Config/Base","path":"Athena/Config/Base.html","kind":"struct","full_name":"Athena::Config::Base","name":"Base","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"},{"html_id":"athena/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"athena/Athena/Config/Configuration","kind":"module","full_name":"Athena::Config::Configuration","name":"Configuration"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-config/src/base.cr","line_number":30,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-config/src/base.cr#L30"},{"filename":"src/config/routing_config.cr","line_number":15,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/config/routing_config.cr#L15"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Config/Configuration","kind":"module","full_name":"Athena::Config::Configuration","name":"Configuration"},{"html_id":"athena/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"athena/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Config","kind":"module","full_name":"Athena::Config","name":"Config"},"doc":"Base config type that wraps the `Athena` configuration file.\n\nComponents may add their own `ACF::Configuration` types to `self` to allow configuring that specific component.\n\n```\n# Define a custom configuration type.\n# Additional configuration types may be nested.\nstruct SomeConfig\n  include ACF::Configuration\n\n  # Defines a required configuration property.\n  # Optional properties can be made nilable or given a default value.\n  getter api_key : String\nend\n\n# Reopen the base type to add our custom configuration type.\nstruct Athena::Config::Base\n  getter some_config : SomeConfig\nend\n```\n\n`ACF::Base`'s YAML representation now looks like:\n```yaml\n---\nsome_config:\n  api_key: API_KEY\n```","summary":"<p>Base config type that wraps the <code><a href=\"../../Athena.html\">Athena</a></code> configuration file.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new_from_yaml_node(ctx, node)"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-config/src/base.cr#L31","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"routing:Athena::Routing::Config-instance-method","html_id":"routing:Athena::Routing::Config-instance-method","name":"routing","doc":"All configuration related to the `ART` component.","summary":"<p>All configuration related to the <code><a href=\"../../ART.html\">ART</a></code> component.</p>","abstract":false,"args":[],"args_string":" : Athena::Routing::Config","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/config/routing_config.cr#L17","def":{"name":"routing","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Athena::Routing::Config","visibility":"Public","body":"@routing"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Config/Configuration","path":"Athena/Config/Configuration.html","kind":"module","full_name":"Athena::Config::Configuration","name":"Configuration","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-config/src/configuration.cr","line_number":6,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-config/src/configuration.cr#L6"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Config/Base","kind":"struct","full_name":"Athena::Config::Base","name":"Base"},{"html_id":"athena/Athena/Routing/Config","kind":"struct","full_name":"Athena::Routing::Config","name":"Config"},{"html_id":"athena/Athena/Routing/Config/CORS","kind":"struct","full_name":"Athena::Routing::Config::CORS","name":"CORS"}],"namespace":{"html_id":"athena/Athena/Config","kind":"module","full_name":"Athena::Config","name":"Config"},"doc":"Helper mixin that includes the modules and defines the methods required for a configuration.\n\nIncludes `YAML::Serializable` for handling deserializing the configuration file into a `ACF::Base` and `YAML::Serializable::Strict` to prevent unused/undefined configurations within the file.\n\nSee `ACF::Base` for more information on defining custom configuration types.","summary":"<p>Helper mixin that includes the modules and defines the methods required for a configuration.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Config/ConfigurationResolver","path":"Athena/Config/ConfigurationResolver.html","kind":"struct","full_name":"Athena::Config::ConfigurationResolver","name":"ConfigurationResolver","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Config/ConfigurationResolverInterface","kind":"module","full_name":"Athena::Config::ConfigurationResolverInterface","name":"ConfigurationResolverInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-config/src/configuration_resolver.cr","line_number":50,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-config/src/configuration_resolver.cr#L50"},{"filename":"src/config/cors_config.cr","line_number":47,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/config/cors_config.cr#L47"},{"filename":"src/ext/configuration_resolver.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/ext/configuration_resolver.cr#L2"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Config/ConfigurationResolverInterface","kind":"module","full_name":"Athena::Config::ConfigurationResolverInterface","name":"ConfigurationResolverInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Config","kind":"module","full_name":"Athena::Config","name":"Config"},"doc":"See `Athena::Config::ConfigurationResolverInterface`.","summary":"<p>See <code><a href=\"../../Athena/Config/ConfigurationResolverInterface.html\">Athena::Config::ConfigurationResolverInterface</a></code>.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-config/src/configuration_resolver.cr#L50","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"resolve(_type:Athena::Routing::Config::CORS.class):ART::Config::CORS?-instance-method","html_id":"resolve(_type:Athena::Routing::Config::CORS.class):ART::Config::CORS?-instance-method","name":"resolve","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Athena::Routing::Config::CORS.class"}],"args_string":"(_type : <span class=\"t\">Athena</span><span class=\"t\">::</span><span class=\"t\">Routing</span><span class=\"t\">::</span><span class=\"t\">Config</span><span class=\"t\">::</span><span class=\"t\">CORS</span>.<span class=\"k\">class</span>) : ART::Config::CORS?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/config/cors_config.cr#L49","def":{"name":"resolve","args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Athena::Routing::Config::CORS.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ART::Config::CORS | ::Nil","visibility":"Public","body":"base.routing.cors"}},{"id":"resolve(_type:_)-instance-method","html_id":"resolve(_type:_)-instance-method","name":"resolve","doc":"Resolves the configuration object for the given *_type*.\n\nRaises a `NotImplementedError` if no `#resolve` method exists for the given *_type*.","summary":"<p>Resolves the configuration object for the given <em>_type</em>.</p>","abstract":false,"args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"_"}],"args_string":"(_type : _)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-config/src/configuration_resolver.cr#L53","def":{"name":"resolve","args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\"Unable to resolve configuration for type '#{_type}'\"))"}},{"id":"resolve:ACF::Base-instance-method","html_id":"resolve:ACF::Base-instance-method","name":"resolve","doc":"Returns the `ACF::Base` configuration object.","summary":"<p>Returns the <code><a href=\"../../Athena/Config/Base.html\">ACF::Base</a></code> configuration object.</p>","abstract":false,"args":[],"args_string":" : ACF::Base","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-config/src/configuration_resolver.cr#L58","def":{"name":"resolve","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ACF::Base","visibility":"Public","body":"base"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Config/ConfigurationResolverInterface","path":"Athena/Config/ConfigurationResolverInterface.html","kind":"module","full_name":"Athena::Config::ConfigurationResolverInterface","name":"ConfigurationResolverInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-config/src/configuration_resolver.cr","line_number":39,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-config/src/configuration_resolver.cr#L39"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Config/ConfigurationResolver","kind":"struct","full_name":"Athena::Config::ConfigurationResolver","name":"ConfigurationResolver"}],"namespace":{"html_id":"athena/Athena/Config","kind":"module","full_name":"Athena::Config","name":"Config"},"doc":"A type that allows resolving a specific configuration object by type.  Can be reopened to be made into a service to allow resolving configurations within other services.\n\nComponent configurations that should be resolvable must reopen `self`\nand add a `#resolve` method with a type restriction thats returns the desired configuration.\n\n```\n# Define a custom configuration type.\n# Additional configuration types may be nested.\nstruct SomeConfig\n  include ACF::Configuration\n\n  # Defines a required configuration property.\n  # Optional properties can be made nilable or given a default value.\n  getter api_key : String\nend\n\n# Reopen ACF::Base to add our custom configuration type.\nstruct Athena::Config::Base\n  getter some_config : SomeConfig\nend\n\n# Reopen ConfigurationResolver to add a method that allows resolving the `SomeConfig` object.\n#\n# Attempting to resolve a configuration type that has not been added will result in a `NotImplementedError`.\nstruct Athena::Config::ConfigurationResolver\n  # :inherit:\n  def resolve(_type : SomeConfig.class) : SomeConfig\n    # A private `#base` helper method is defined which returns the `ACF::Base` instance.\n    base.some_config\n  end\nend\n\n# Assuming the YAML configuration file looks like:\n# ---\n# some_config:\n#  api_key: API_KEY\nACF::ConfigurationResolver.new.resolve(SomeConfig).api_key # => API_KEY\n```","summary":"<p>A type that allows resolving a specific configuration object by type.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"resolve(_type:_)-instance-method","html_id":"resolve(_type:_)-instance-method","name":"resolve","doc":"Resolves the configuration object for the given *_type*.\n\nRaises a `NotImplementedError` if no `#resolve` method exists for the given *_type*.","summary":"<p>Resolves the configuration object for the given <em>_type</em>.</p>","abstract":true,"args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"_"}],"args_string":"(_type : _)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-config/src/configuration_resolver.cr#L46","def":{"name":"resolve","args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"resolve:ACF::Base-instance-method","html_id":"resolve:ACF::Base-instance-method","name":"resolve","doc":"Returns the `ACF::Base` configuration object.","summary":"<p>Returns the <code><a href=\"../../Athena/Config/Base.html\">ACF::Base</a></code> configuration object.</p>","abstract":true,"args":[],"args_string":" : ACF::Base","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-config/src/configuration_resolver.cr#L41","def":{"name":"resolve","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ACF::Base","visibility":"Public","body":""}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/DependencyInjection","path":"Athena/DependencyInjection.html","kind":"module","full_name":"Athena::DependencyInjection","name":"DependencyInjection","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-dependency_injection/src/athena-dependency_injection.cr","line_number":23,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-dependency_injection/src/athena-dependency_injection.cr#L23"},{"filename":"lib/athena-dependency_injection/src/service_container.cr","line_number":6,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-dependency_injection/src/service_container.cr#L6"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena","kind":"module","full_name":"Athena","name":"Athena"},"doc":"Athena's Dependency Injection (DI) component, `ADI` for short, adds a service container layer to your project.  This allows useful objects, aka services, to be shared throughout the project.\nThese objects live in a special class called the `ADI::ServiceContainer` (SC).\n\nThe SC is lazily initialized on fibers; this allows the SC to be accessed anywhere within the project.  The `Athena::DependencyInjection.container` method will return the SC for the current fiber.\nSince the SC is defined on fibers, it allows for each fiber to have its own SC instance.  This can be useful for web frameworks as each request would have its own SC scoped to that request.\n\n* See `ADI::Register` for documentation on registering services.\n\nNOTE: It is highly recommended to use interfaces as opposed to concrete types when defining the initializers for both services and non-services.\nUsing interfaces allows changing the functionality of a type by just changing what service gets injected into it, such as via an alias.\nSee this [blog post](https://dev.to/blacksmoke16/dependency-injection-in-crystal-2d66#plug-and-play) for an example of this.","summary":"<p>Athena's Dependency Injection (DI) component, <code><a href=\"../ADI.html\">ADI</a></code> for short, adds a service container layer to your project.</p>","class_methods":[{"id":"container:ADI::ServiceContainer-class-method","html_id":"container:ADI::ServiceContainer-class-method","name":"container","doc":"Returns the `ADI::ServiceContainer` for the current fiber.","summary":"<p>Returns the <code><a href=\"../Athena/DependencyInjection/ServiceContainer.html\">ADI::ServiceContainer</a></code> for the current fiber.</p>","abstract":false,"args":[],"args_string":" : ADI::ServiceContainer","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-dependency_injection/src/athena-dependency_injection.cr#L500","def":{"name":"container","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ADI::ServiceContainer","visibility":"Public","body":"Fiber.current.container"}}],"constructors":[],"instance_methods":[],"macros":[{"id":"auto_configure(type,options)-macro","html_id":"auto_configure(type,options)-macro","name":"auto_configure","doc":"Applies the provided *options* to any registered service of the provided *type*.\n\nA common use case of this would be to apply a specific tag to all instances of an interface; thus preventing the need to manually apply the tag for each implementation.\nThis can be paired with `Athena::DependencyInjection.bind` to make working with tags easier.\n\nIt can also be used to set the `public` and `lazy` options.\n\n### Example\n\n```\nmodule ConfigInterface; end\n\n# Automatically apply the `\"config\"` tag to all instances of `ConfigInterface`.\nADI.auto_configure ConfigInterface, {tags: [\"config\"]}\n\n@[ADI::Register]\nrecord ConfigOne do\n  include ConfigInterface\nend\n\n@[ADI::Register]\nrecord ConfigTwo do\n  include ConfigInterface\nend\n\n# Options supplied on the annotation itself override the auto configured options.\n@[ADI::Register(tags: [] of String)]\nrecord ConfigThree do\n  include ConfigInterface\nend\n\n@[ADI::Register(_configs: \"!config\", public: true)]\nrecord ConfigClient, configs : Array(ConfigInterface)\n\nADI.container.config_client.configs # => [ConfigOne(), ConfigTwo()]\n```","summary":"<p>Applies the provided <em>options</em> to any registered service of the provided <em>type</em>.</p>","abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""}],"args_string":"(type, options)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-dependency_injection/src/athena-dependency_injection.cr#L63","def":{"name":"auto_configure","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% AUTO_CONFIGURATIONS[type.resolve] = options %}\n\n  \n"}},{"id":"bind(key,value)-macro","html_id":"bind(key,value)-macro","name":"bind","doc":"Allows binding a *value* to a *key* in order to enable auto registration of that value.\n\nBindings allow scalar values, or those that could not otherwise be handled via [service aliases](./DependencyInjection/Register.html#aliasing-services), to be auto registered.\nThis allows those arguments to be defined once and reused, as opposed to using named arguments to manually specify them for each service.\n\nBindings can also be declared with a type restriction to allow taking the type restriction of the argument into account.\nTyped bindings are always checked first as the most specific type is always preferred.\nIf no typed bindings match the argument's type, then the last defined untyped bindings is used.\n\n### Example\n\n```\nmodule ValueInterface; end\n\n@[ADI::Register(_value: 1, name: \"value_one\")]\n@[ADI::Register(_value: 2, name: \"value_two\")]\n@[ADI::Register(_value: 3, name: \"value_three\")]\nrecord ValueService, value : Int32 do\n  include ValueInterface\nend\n\n# Untyped bindings\nADI.bind api_key, ENV[\"API_KEY\"]\nADI.bind config, {id: 12_i64, active: true}\nADI.bind static_value, 123\nADI.bind odd_values, [\"@value_one\", \"@value_three\"]\nADI.bind value_arr, [true, true, false]\n\n# Typed bindings\nADI.bind value_arr : Array(Int32), [1, 2, 3]\nADI.bind value_arr : Array(Float64), [1.0, 2.0, 3.0]\n\n@[ADI::Register(public: true)]\nrecord BindingClient,\n  api_key : String,\n  config : NamedTuple(id: Int64, active: Bool),\n  static_value : Int32,\n  odd_values : Array(ValueInterface)\n\n@[ADI::Register(public: true)]\nrecord IntArr, value_arr : Array(Int32)\n\n@[ADI::Register(public: true)]\nrecord FloatArr, value_arr : Array(Float64)\n\n@[ADI::Register(public: true)]\nrecord BoolArr, value_arr : Array(Bool)\n\nADI.container.binding_client # =>\n# BindingClient(\n#  @api_key=\"123ABC\",\n#  @config={id: 12, active: true},\n#  @static_value=123,\n#  @odd_values=[ValueService(@value=1), ValueService(@value=3)])\n\nADI.container.int_arr   # => IntArr(@value_arr=[1, 2, 3])\nADI.container.float_arr # => FloatArr(@value_arr=[1.0, 2.0, 3.0])\nADI.container.bool_arr  # => BoolArr(@value_arr=[true, true, false])\n```","summary":"<p>Allows binding a <em>value</em> to a <em>key</em> in order to enable auto registration of that value.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(key, value)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-dependency_injection/src/athena-dependency_injection.cr#L126","def":{"name":"bind","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if key.is_a?(TypeDeclaration) %}\n      {% name = key.var.id.stringify %}\n      {% type = key.type.resolve %}\n    {% else %}\n      {% name = key.id.stringify %}\n      {% type = Crystal::Macros::Nop %}\n    {% end %}\n\n\n    \n# TODO: Refactor this to ||= once https://github.com/crystal-lang/crystal/pull/9409 is released\n\n    \n{% if BINDINGS[name] == nil\n  BINDINGS[name] = {typed: [] of Nil, untyped: [] of Nil}\nend %}\n\n\n    \n{% if type == Crystal::Macros::Nop %}\n      {% BINDINGS[name][:untyped].unshift({value: value, type: type}) %}\n    {% else %}\n      {% BINDINGS[name][:typed].unshift({value: value, type: type}) %}\n    {% end %}\n\n  \n"}}],"types":[{"html_id":"athena/Athena/DependencyInjection/Inject","path":"Athena/DependencyInjection/Inject.html","kind":"annotation","full_name":"Athena::DependencyInjection::Inject","name":"Inject","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-dependency_injection/src/athena-dependency_injection.cr","line_number":497,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-dependency_injection/src/athena-dependency_injection.cr#L497"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/DependencyInjection","kind":"module","full_name":"Athena::DependencyInjection","name":"DependencyInjection"},"doc":"Specifies which constructor should be used for injection.\n\n```\n@[ADI::Register(_value: 2, public: true)]\nclass SomeService\n  @active : Bool = false\n\n  def initialize(value : String, @active : Bool)\n    @value = value.to_i\n  end\n\n  @[ADI::Inject]\n  def initialize(@value : Int32); end\nend\n\nADI.container.some_service # => #<SomeService:0x7f51a77b1eb0 @active=false, @value=2>\nSomeService.new \"1\", true  # => #<SomeService:0x7f51a77b1e90 @active=true, @value=1>\n```\n\nWithout the `ADI::Inject` annotation, the first initializer would be used, which would fail since we are not providing a value for the `active` argument.\n`ADI::Inject` allows telling the service container that it should use the second constructor when registering this service.  This allows a constructor overload\nspecific to DI to be used while still allowing the type to be used outside of DI via other constructors.","summary":"<p>Specifies which constructor should be used for injection.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/DependencyInjection/Register","path":"Athena/DependencyInjection/Register.html","kind":"annotation","full_name":"Athena::DependencyInjection::Register","name":"Register","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-dependency_injection/src/athena-dependency_injection.cr","line_number":473,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-dependency_injection/src/athena-dependency_injection.cr#L473"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/DependencyInjection","kind":"module","full_name":"Athena::DependencyInjection","name":"DependencyInjection"},"doc":"Registers a service based on the type the annotation is applied to.\n\nThe type of the service affects how it behaves within the container.  When a `struct` service is retrieved or injected into a type, it will be a copy of the one in the SC (passed by value).\nThis means that changes made to it in one type, will _NOT_ be reflected in other types.  A `class` service on the other hand will be a reference to the one in the SC.  This allows it\nto share state between services.\n\n## Optional Arguments\n\nIn most cases, the annotation can be applied without additional arguments.  However, the annotation accepts a handful of optional arguments to fine tune how the service is registered.\n\n* `name : String`- The name of the service.  Should be unique.  Defaults to the type's FQN snake cased.\n* `public : Bool` - If the service should be directly accessible from the container.  Defaults to `false`.\n* `public_alias : Bool` - If a service should be directly accessible from the container via an alias.  Defaults to `false`.\n* `lazy : Bool` - If the service should be lazily instantiated.  I.e. only instantiated when it is first accessed; either directly or as a dependency of another service.  Defaults to `true`.\n* `alias : T` - Injects `self` when this type is used as a type restriction.  See the Aliasing Services example for more information.\n* `tags : Array(String | NamedTuple(name: String, priority: Int32?))` - Tags that should be assigned to the service.  Defaults to an empty array.  See the [Tagging Services](./Register.html#tagging-services) example for more information.\n* `type : T` - The type of the service within the container.  Defaults to service's types.  See the [Customizing Service's Type](#customizing-services-type) section.\n* `factory : String | Tuple(T, String)` - Use a factory type/method to create the service.  See the [Factories](#factories) section.\n\n## Examples\n\n### Basic Usage\n\nThe simplest usage involves only applying the `ADI::Register` annotation to a type.  If the type does not have any arguments, then it is simply registered as a service as is.  If the type _does_ have arguments, then an attempt is made to register the service by automatically resolving dependencies based on type restrictions.\n\n```\n@[ADI::Register]\n# Register a service without any dependencies.\nstruct ShoutTransformer\n  def transform(value : String) : String\n    value.upcase\n  end\nend\n\n@[ADI::Register(public: true)]\n# The ShoutTransformer is injected based on the type restriction of the `transformer` argument.\nstruct SomeAPIClient\n  def initialize(@transformer : ShoutTransformer); end\n\n  def send(message : String)\n    message = @transformer.transform message\n\n    # ...\n  end\nend\n\nADI.container.some_api_client.send \"foo\" # => FOO\n```\n\n### Aliasing Services\n\nAn important part of DI is building against interfaces as opposed to concrete types.  This allows a type to depend upon abstractions rather than a specific implementation of the interface.\nOr in other words, prevents a singular implementation from being tightly coupled with another type.\n\nWe can use the `alias` argument when registering a service to tell the container that it should inject this service when a type restriction for the aliased service is found.\n\n```\n# Define an interface for our services to use.\nmodule TransformerInterface\n  abstract def transform(value : String) : String\nend\n\n@[ADI::Register(alias: TransformerInterface)]\n# Alias the `TransformerInterface` to this service.\nstruct ShoutTransformer\n  include TransformerInterface\n\n  def transform(value : String) : String\n    value.upcase\n  end\nend\n\n@[ADI::Register]\n# Define another transformer type.\nstruct ReverseTransformer\n  include TransformerInterface\n\n  def transform(value : String) : String\n    value.reverse\n  end\nend\n\n@[ADI::Register(public: true)]\n# The `ShoutTransformer` is injected because the `TransformerInterface` is aliased to the `ShoutTransformer`.\nstruct SomeAPIClient\n  def initialize(@transformer : TransformerInterface); end\n\n  def send(message : String)\n    message = @transformer.transform message\n\n    # ...\n  end\nend\n\nADI.container.some_api_client.send \"foo\" # => FOO\n```\n\nAny service that uses `TransformerInterface` as a dependency type restriction will get the `ShoutTransformer`.\nHowever, it is also possible to use a specific implementation while still building against the interface.  The name of the constructor argument is used in part to resolve the dependency.\n\n```\n@[ADI::Register(public: true)]\n# The `ReverseTransformer` is injected because the constructor argument's name matches the service name of `ReverseTransformer`.\nstruct SomeAPIClient\n  def initialize(reverse_transformer : TransformerInterface)\n    @transformer = reverse_transformer\n  end\n\n  def send(message : String)\n    message = @transformer.transform message\n\n    # ...\n  end\nend\n\nADI.container.some_api_client.send \"foo\" # => oof\n```\n\n### Scalar Arguments\n\nThe auto registration logic as shown in previous examples only works on service dependencies.  Scalar arguments, such as Arrays, Strings, NamedTuples, etc, must be defined manually.\nThis is achieved by using the argument's name prefixed with a `_` symbol as named arguments within the annotation.\n\n```\n@[ADI::Register(_shell: ENV[\"SHELL\"], _config: {id: 12_i64, active: true}, public: true)]\nstruct ScalarClient\n  def initialize(@shell : String, @config : NamedTuple(id: Int64, active: Bool)); end\nend\n\nADI.container.scalar_client # => ScalarClient(@config={id: 12, active: true}, @shell=\"/bin/bash\")\n```\nArrays can also include references to services by prefixing the name of the service with an `@` symbol.\n\n```\nmodule Interface; end\n\n@[ADI::Register]\nstruct One\n  include Interface\nend\n\n@[ADI::Register]\nstruct Two\n  include Interface\nend\n\n@[ADI::Register]\nstruct Three\n  include Interface\nend\n\n@[ADI::Register(_services: [\"@one\", \"@three\"], public: true)]\nstruct ArrayClient\n  def initialize(@services : Array(Interface)); end\nend\n\nADI.container.array_client # => ArrayClient(@services=[One(), Three()])\n```\n\nWhile scalar arguments cannot be auto registered by default, the `Athena::DependencyInjection.bind` macro can be used to support it.  For example: `ADI.bind shell, \"bash\"`.\nThis would now inject the string `\"bash\"` whenever an argument named `shell` is encountered.\n\n### Tagging Services\n\nServices can also be tagged.  Service tags allows another service to have all services with a specific tag injected as a dependency.\nA tag consists of a name, and additional metadata related to the tag.\nCurrently the only supported metadata value is `priority`, which controls the order in which the services are injected; the higher the priority\nthe sooner in the array it would be.  In the future support for custom tag metadata will be implemented.\n\nThe `Athena::DependencyInjection.auto_configure` macro may also be used to make working with tags easier.\n\n```\nPARTNER_TAG = \"partner\"\n\n@[ADI::Register(_id: 1, name: \"google\", tags: [{name: PARTNER_TAG, priority: 5}])]\n@[ADI::Register(_id: 2, name: \"facebook\", tags: [PARTNER_TAG])]\n@[ADI::Register(_id: 3, name: \"yahoo\", tags: [{name: \"partner\", priority: 10}])]\n@[ADI::Register(_id: 4, name: \"microsoft\", tags: [PARTNER_TAG])]\n# Register multiple services based on the same type.  Each service must give define a unique name.\nrecord FeedPartner, id : Int32\n\n@[ADI::Register(_services: \"!partner\", public: true)]\n# Inject all services with the `\"partner\"` tag into `self`.\nclass PartnerClient\n  def initialize(@services : Array(FeedPartner)); end\nend\n\nADI.container.partner_client # =>\n# #<PartnerClient:0x7f43c0a1ae60\n#  @services=\n#   [FeedPartner(@id=3, @name=\"Yahoo\"),\n#    FeedPartner(@id=1, @name=\"Google\"),\n#    FeedPartner(@id=2, @name=\"Facebook\"),\n#    FeedPartner(@id=4, @name=\"Microsoft\")]>\n```\n\nWhile tagged services cannot be injected automatically by default, the `Athena::DependencyInjection.bind` macro can be used to support it.  For example: `ADI.bind partners, \"!partner\"`.\nThis would now inject all services with the `partner` tagged when an argument named `partners` is encountered.\nA type restriction can also be added to the binding to allow reusing the name.  See the documentation for `Athena::DependencyInjection.bind` for an example.\n\n### Optional Services\n\nServices defined with a nillable type restriction are considered to be optional.  If no service could be resolved from the type, then `nil` is injected instead.\nSimilarly, if the argument has a default value, that value would be used instead.\n\n```\nstruct OptionalMissingService\nend\n\n@[ADI::Register]\nstruct OptionalExistingService\nend\n\n@[ADI::Register(public: true)]\nclass OptionalClient\n  getter service_missing, service_existing, service_default\n\n  def initialize(\n    @service_missing : OptionalMissingService?,\n    @service_existing : OptionalExistingService?,\n    @service_default : OptionalMissingService | Int32 | Nil = 12\n  ); end\nend\n\nADI.container.optional_client\n# #<OptionalClient:0x7fe7de7cdf40\n#  @service_default=12,\n#  @service_existing=OptionalExistingService(),\n#  @service_missing=nil>\n```\n\n### Generic Services\n\nGeneric arguments can be provided as positional arguments within the `ADI::Register` annotation.\n\nNOTE: Services based on generic types _MUST_ explicitly provide a name via the `name` field within the `ADI::Register` annotation\nsince there wouldn't be a way to tell them apart from the class name alone.\n\n```\n@[ADI::Register(Int32, Bool, name: \"int_service\", public: true)]\n@[ADI::Register(Float64, Bool, name: \"float_service\", public: true)]\nstruct GenericService(T, B)\n  def type\n    {T, B}\n  end\nend\n\nADI.container.int_service.type   # => {Int32, Bool}\nADI.container.float_service.type # => {Float64, Bool}\n```\n\n### Factories\n\nIn some cases it may be necessary to use the [factory design pattern](https://en.wikipedia.org/wiki/Factory_%28object-oriented_programming%29)\nto handle creating an object as opposed to creating the object directly.  In this case the `factory` argument can be used.\n\nFactory methods are class methods defined on some type; either the service itself or a different type.\nArguments to the factory method are provided as they would if the service was being created directly.\nThis includes auto resolved service dependencies, and scalar underscore based arguments included within the `ADI::Register` annotation.\n\n#### Same Type\n\nA `String` `factory` value denotes the method name that should be called on the service itself to create the service.\n\n```\n# Calls `StringFactoryService.double` to create the service.\n@[ADI::Register(_value: 10, public: true, factory: \"double\")]\nclass StringFactoryService\n  getter value : Int32\n\n  def self.double(value : Int32) : self\n    new value * 2\n  end\n\n  def initialize(@value : Int32); end\nend\n\nADI.container.string_factory_service.value # => 20\n```\n\n#### Different Type\n\nA `Tuple` can also be provided as the `factory` value to allow using an external type's factory method to create the service.\nThe first item represents the factory type to use, and the second item represents the method that should be called.\n\n```\nclass TestFactory\n  def self.create_tuple_service(value : Int32) : TupleFactoryService\n    TupleFactoryService.new value * 3\n  end\nend\n\n# Calls `TestFactory.create_tuple_service` to create the service.\n@[ADI::Register(_value: 10, public: true, factory: {TestFactory, \"create_tuple_service\"})]\nclass TupleFactoryService\n  getter value : Int32\n\n  def initialize(@value : Int32); end\nend\n\nADI.container.tuple_factory_service.value # => 30\n```\n\n### Customizing Service's Type\n\nBy default when a service is registered, it is typed the same as the service, for example:\n\n```\n@[ADI::Register]\nclass MyService; end\n```\n\nThis service is essentially represented in the service container as `@my_service : MyService`.\nThis is usually fine for most services, however there are some cases where the service's type should not be the concrete implementation.\nAn example of this is if that service should be mockable in a test setting.  Mockable services should be typed to an interface that they implement\nin order to allow mock implementations to be used if needed.\n\n```\nmodule SomeInterface; end\n\n@[ADI::Register(type: SomeInterface)]\nclass MyService\n  include SomeInterface\nend\n```\n\nBy specifying the `type` as `SomeInterface`, this changes the services representation in the service container to `@my_service : SomeInterface`,\nthus allowing the exact implementation to be changed.  See `ADI::Spec::MockableServiceContainer` for more details.","summary":"<p>Registers a service based on the type the annotation is applied to.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/DependencyInjection/ServiceContainer","path":"Athena/DependencyInjection/ServiceContainer.html","kind":"class","full_name":"Athena::DependencyInjection::ServiceContainer","name":"ServiceContainer","abstract":false,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-dependency_injection/src/service_container.cr","line_number":6,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-dependency_injection/src/service_container.cr#L6"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/DependencyInjection/Spec/MockableServiceContainer","kind":"class","full_name":"Athena::DependencyInjection::Spec::MockableServiceContainer","name":"MockableServiceContainer"}],"including_types":[],"namespace":{"html_id":"athena/Athena/DependencyInjection","kind":"module","full_name":"Athena::DependencyInjection","name":"DependencyInjection"},"doc":"Where the instantiated services live.\n\nIf a service is public, a getter based on the service's name as well as its type is defined.  Otherwise, services are only available via constructor DI.\n\nTODO: Reduce the amount of duplication when [this issue](https://github.com/crystal-lang/crystal/pull/9091) is resolved.","summary":"<p>Where the instantiated services live.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Initializes the container.  Auto registering annotated services.","summary":"<p>Initializes the container.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-dependency_injection/src/service_container.cr#L7","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"athena_routing_route_handler-instance-method","html_id":"athena_routing_route_handler-instance-method","name":"athena_routing_route_handler","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"athena_routing_route_handler","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @athena_routing_route_handler).nil?\n  @athena_routing_route_handler = (Athena::Routing::RouteHandler.new(event_dispatcher, request_store, athena_routing_arguments_argument_resolver))\nelse\n  value\nend"}},{"id":"get(service:Athena::Routing::RequestStore.class):Athena::Routing::RequestStore-instance-method","html_id":"get(service:Athena::Routing::RequestStore.class):Athena::Routing::RequestStore-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"service","doc":null,"default_value":"","external_name":"service","restriction":"Athena::Routing::RequestStore.class"}],"args_string":"(service : <span class=\"t\">Athena</span><span class=\"t\">::</span><span class=\"t\">Routing</span><span class=\"t\">::</span><span class=\"t\">RequestStore</span>.<span class=\"k\">class</span>) : Athena::Routing::RequestStore","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-dependency_injection/src/service_container.cr#L7","def":{"name":"get","args":[{"name":"service","doc":null,"default_value":"","external_name":"service","restriction":"Athena::Routing::RequestStore.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Athena::Routing::RequestStore","visibility":"Public","body":"request_store"}},{"id":"get(service:Athena::Routing::Router.class):Athena::Routing::Router-instance-method","html_id":"get(service:Athena::Routing::Router.class):Athena::Routing::Router-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"service","doc":null,"default_value":"","external_name":"service","restriction":"Athena::Routing::Router.class"}],"args_string":"(service : <span class=\"t\">Athena</span><span class=\"t\">::</span><span class=\"t\">Routing</span><span class=\"t\">::</span><span class=\"t\">Router</span>.<span class=\"k\">class</span>) : Athena::Routing::Router","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-dependency_injection/src/service_container.cr#L7","def":{"name":"get","args":[{"name":"service","doc":null,"default_value":"","external_name":"service","restriction":"Athena::Routing::Router.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Athena::Routing::Router","visibility":"Public","body":"router"}},{"id":"get(service:Athena::Routing::RouteHandler.class):Athena::Routing::RouteHandler-instance-method","html_id":"get(service:Athena::Routing::RouteHandler.class):Athena::Routing::RouteHandler-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"service","doc":null,"default_value":"","external_name":"service","restriction":"Athena::Routing::RouteHandler.class"}],"args_string":"(service : <span class=\"t\">Athena</span><span class=\"t\">::</span><span class=\"t\">Routing</span><span class=\"t\">::</span><span class=\"t\">RouteHandler</span>.<span class=\"k\">class</span>) : Athena::Routing::RouteHandler","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-dependency_injection/src/service_container.cr#L7","def":{"name":"get","args":[{"name":"service","doc":null,"default_value":"","external_name":"service","restriction":"Athena::Routing::RouteHandler.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Athena::Routing::RouteHandler","visibility":"Public","body":"athena_routing_route_handler"}},{"id":"request_store-instance-method","html_id":"request_store-instance-method","name":"request_store","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"request_store","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @request_store).nil?\n  @request_store = (Athena::Routing::RequestStore.new)\nelse\n  value\nend"}},{"id":"router-instance-method","html_id":"router-instance-method","name":"router","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"router","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @router).nil?\n  @router = (Athena::Routing::Router.new(request_store))\nelse\n  value\nend"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/DependencyInjection/Spec","path":"Athena/DependencyInjection/Spec.html","kind":"module","full_name":"Athena::DependencyInjection::Spec","name":"Spec","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-dependency_injection/src/spec.cr","line_number":11,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-dependency_injection/src/spec.cr#L11"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/DependencyInjection","kind":"module","full_name":"Athena::DependencyInjection","name":"DependencyInjection"},"doc":"A set of testing utilities/types to aid in testing `Athena::DependencyInjection` related types.\n\n### Getting Started\n\nRequire this module in your `spec_helper.cr` file.\n\n```\n# This also requires \"spec\".\nrequire \"athena-dependency_injection/spec\"\n```","summary":"<p>A set of testing utilities/types to aid in testing <code><a href=\"../../Athena/DependencyInjection.html\">Athena::DependencyInjection</a></code> related types.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/DependencyInjection/Spec/MockableServiceContainer","path":"Athena/DependencyInjection/Spec/MockableServiceContainer.html","kind":"class","full_name":"Athena::DependencyInjection::Spec::MockableServiceContainer","name":"MockableServiceContainer","abstract":false,"superclass":{"html_id":"athena/Athena/DependencyInjection/ServiceContainer","kind":"class","full_name":"Athena::DependencyInjection::ServiceContainer","name":"ServiceContainer"},"ancestors":[{"html_id":"athena/Athena/DependencyInjection/ServiceContainer","kind":"class","full_name":"Athena::DependencyInjection::ServiceContainer","name":"ServiceContainer"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-dependency_injection/src/spec.cr","line_number":110,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-dependency_injection/src/spec.cr#L110"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/DependencyInjection/Spec","kind":"module","full_name":"Athena::DependencyInjection::Spec","name":"Spec"},"doc":"A mock implementation of `ADI::ServiceContainer` that be used within a testing context to allow for mocking out services without affecting the actual container outside of tests.\n\nAn example of this is when integration testing service based [ART::Controller](https://athena-framework.github.io/athena/Athena/Routing/Controller.html)s.\nService dependencies that interact with an external source, like a third party API or a database, should most likely be mocked out.\nHowever your other services should be left as is in order to get the most benefit from the test.\n\n## Mocking\n\nThe `ADI::ServiceContainer` is nothing more than a normal Crystal class with some instance variables and methods.\nAs such, mocking services is as easy as monkey patching `self` with the mocked versions, assuming of course they are of a compatible type.\n\nGiven Crystal's lack of a robust mocking shard, it isn't as straightforward as other languages.\nThe best way at the moment is either using inheritance or interfaces (modules) to manually create a concrete test class/struct;\nwith the latter option being preferred as it would work for both structs and classes.\n\nFor example, we can create a mock implementation of a type by extending it:\n```\nclass MockMyService < MyService\n  def get_value\n    # Can now just return a static expected value.\n    # Test properties/constructor(s) can also be added to make it a bit more generic.\n    1234\n  end\nend\n```\n\nBecause our mock extends `MyService`, it is a compatible type for anything typed as `MyService`.\n\nAnother way to handle mocking is via interfaces (modules).\n\n```\nmodule SomeInterface; end\n\nstruct MockMyService\n  include SomeInterface\nend\n```\n\nBecause our mock implements `SomeInterface`, it is a compatible type for anything typed as `SomeInterface`.\n\nNOTE: Service mocks do not need to registered as services themselves since they will need to be configured manually.\nNOTE: The `type` argument as part of the `ADI::Register` annotation can be used to set the type of a service within the container.\nSee `ADI::Register@customizing-services-type` for more details.\n\n### Dynamic Mocks\n\nA dynamic mock consists of adding a `setter` to `self` that allows setting the mocked service dynamically at runtime,\nwhile keeping the original up until if/when it is replaced.\n\n```\nclass ADI::Spec::MockableServiceContainer\n  # The setter should be nilable as they're lazily initialized within the container.\n  setter my_service : MyServiceInterface?\nend\n\n# ...\n\n# Now the `my_service` service can be replaced at runtime.\nmock_container.my_service = MockMyService.new\n\n# ...\n```\n\n### Global Mocks\n\nGlobal mocks totally replace the original service, i.e. always return the mocked service.\n\n```\nclass ADI::Spec::MockableServiceContainer\n  # Global mocks should use the block based `getter` macro.\n  getter my_service : MyServiceInterface { MockMyService.new }\nend\n\n# `MockMyService` will now be injected across the board when using `self`.\n\n# ...\n```\n\n### Hybrid Mocks\n\nDynamic and Global mocking can also be combined to allow having a default mock, but allow overriding if/when needed.\nThis can be accomplished by adding both a getter and setter to `self.`\n\n```\nclass ADI::Spec::MockableServiceContainer\n  # Hybrid mocks should use the block based `property` macro.\n  property my_service : MyServiceInterface { DefaultMockService.new }\nend\n\n# ...\n\n# `DefaultMockService` will now be injected across the board by when using `self`.\n\n# But can still be replaced at runtime.\nmock_container.my_service = CustomMockService.new\n\n# ...\n```","summary":"<p>A mock implementation of <code><a href=\"../../../Athena/DependencyInjection/ServiceContainer.html\">ADI::ServiceContainer</a></code> that be used within a testing context to allow for mocking out services without affecting the actual container outside of tests.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}]},{"html_id":"athena/Athena/EventDispatcher","path":"Athena/EventDispatcher.html","kind":"module","full_name":"Athena::EventDispatcher","name":"EventDispatcher","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-event_dispatcher/src/athena-event_dispatcher.cr","line_number":83,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/athena-event_dispatcher.cr#L83"},{"filename":"lib/athena-event_dispatcher/src/event_dispatcher_interface.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/event_dispatcher_interface.cr#L2"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena","kind":"module","full_name":"Athena","name":"Athena"},"doc":"A [Mediator](https://en.wikipedia.org/wiki/Mediator_pattern) and [Observer](https://en.wikipedia.org/wiki/Observer_pattern)\npattern event library.\n\n`Athena::EventDispatcher` or, `AED` for short, allows defining instance methods on `EventListenerInterface` types (observers) that will be executed\nwhen an `Event` is dispatched via the `EventDispatcher` (mediator).\n\nAll events are registered with an `EventDispatcher` at compile time.  While the recommended usage involves using\nlistener structs, it is also possible to add/remove event handlers dynamically at runtime.  The `EventDispatcher` has two constructors;\none that supports manual or DI initialization, while the other auto registers listeners at compile time via macros.\n\nAn event is nothing more than a `class` that, optionally, contains stateful information about the event.  For example a `HttpOnRequest` event would\ncontain a reference to the `HTTP::Request` object so that the listeners have access to request data.  Similarly, a `HttpOnResponse` event\nwould contain a reference to the `HTTP::Server::Response` object so that the response body/headers/status can be mutated by the listeners.\n\nSince events and listeners are registered at compile time (via macros or DI), listeners can be added to a project seamlessly without updating any configuration, or having\nto instantiate a `HTTP::Handler` object and add it to an array for example.  The main benefit of this is that an external shard that defines a listener could\nbe installed and would inherently be picked up and used by `Athena::EventDispatcher`; thus making an application easily extendable.\n\n### Example\n```\n# Create a custom event.\nclass ExceptionEvent < AED::Event\n  property? handled : Bool = false\n\n  getter exception : Exception\n\n  # Events can contain stateful information related to the event.\n  def initialize(@exception : Exception); end\nend\n\n# Create a listener.\nstruct ExceptionListener\n  include AED::EventListenerInterface\n\n  # Define what events `self` is listening on as well as their priorities.\n  #\n  # The higher the priority the sooner that specific listener is executed.\n  def self.subscribed_events : AED::SubscribedEvents\n    AED::SubscribedEvents{\n      ExceptionEvent => 0,\n    }\n  end\n\n  # Listener handler's are `#call` instance methods restricted to the type of event it should handle.\n  #\n  # Multiple methods can be defined to handle multiple events within the same listener.\n  #\n  # Event handler's also have access to the dispatcher instance itself.\n  def call(event : ExceptionEvent, dispatcher : AED::EventDispatcherInterface) : Nil\n    # Do something with the `ExceptionEvent` and/or dispatcher\n    event.handled = true\n  end\nend\n\n# New up an `AED::EventDispatcher`, using `AED::EventDispatcher#new`.\n# This overload automatically registers listeners using macros.\n#\n# See also `AED::EventDispatcher#new(listeners : Array(EventListenerInterface))` for a more manual/DI friendly initializer.\ndispatcher = AED::EventDispatcher.new\n\n# Instantiate our custom event.\nevent = ExceptionEvent.new ArgumentError.new(\"Test exception\")\n\n# All events are dispatched via an `AED::EventDispatcher` instance.\n#\n# Similarly, all listeners are registered with it.\ndispatcher.dispatch event\n\nevent.handled # => true\n\n# Additional methods also exist on the dispatcher, such as:\n# * Adding/removing listeners at runtime\n# * Checking the priority of a listener\n# * Getting an array of listeners for a given event\n# * Checking if there is a listener(s) listening on a given `AED::Event`\ndispatcher.has_listeners? ExceptionEvent # => true\n```","summary":"<p>A <a href=\"https://en.wikipedia.org/wiki/Mediator_pattern\" target=\"_blank\">Mediator</a> and <a href=\"https://en.wikipedia.org/wiki/Observer_pattern\" target=\"_blank\">Observer</a> pattern event library.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"create_listener(event,&)-macro","html_id":"create_listener(event,&amp;)-macro","name":"create_listener","doc":"Creates a listener for the provided *event*.  The macro's block is used as the listener.\n\nThe macro *block* implicitly yields `event` and `dispatcher`.\n\n```\nlistener = AED.create_listener(SampleEvent) do\n  # Do something with the event.\n  event.some_method\n\n  # A reference to the `AED::EventDispatcherInterface` is also provided.\n  dispatcher.dispatch FakeEvent.new\nend\n```","summary":"<p>Creates a listener for the provided <em>event</em>.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":""}],"args_string":"(event, &)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/athena-event_dispatcher.cr#L124","def":{"name":"create_listener","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},"visibility":"Public","body":"    Proc(AED::Event, AED::EventDispatcherInterface, Nil).new do |event, dispatcher|\n      Proc(\n{{ event.id }}\n, AED::EventDispatcherInterface, Nil).new do |event, dispatcher|\n        \n{{ yield }}\n\n      \nend.call \nevent.as(\n{{ event }}\n), dispatcher\n    \nend\n  \n"}}],"types":[{"html_id":"athena/Athena/EventDispatcher/Event","path":"Athena/EventDispatcher/Event.html","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event","abstract":false,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Athena/EventDispatcher/StoppableEvent","kind":"module","full_name":"Athena::EventDispatcher::StoppableEvent","name":"StoppableEvent"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-event_dispatcher/src/event.cr","line_number":28,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/event.cr#L28"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/EventDispatcher/StoppableEvent","kind":"module","full_name":"Athena::EventDispatcher::StoppableEvent","name":"StoppableEvent"}],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Routing/Events/Action","kind":"class","full_name":"Athena::Routing::Events::Action","name":"Action"},{"html_id":"athena/Athena/Routing/Events/Exception","kind":"class","full_name":"Athena::Routing::Events::Exception","name":"Exception"},{"html_id":"athena/Athena/Routing/Events/Request","kind":"class","full_name":"Athena::Routing::Events::Request","name":"Request"},{"html_id":"athena/Athena/Routing/Events/Response","kind":"class","full_name":"Athena::Routing::Events::Response","name":"Response"},{"html_id":"athena/Athena/Routing/Events/Terminate","kind":"class","full_name":"Athena::Routing::Events::Terminate","name":"Terminate"},{"html_id":"athena/Athena/Routing/Events/View","kind":"class","full_name":"Athena::Routing::Events::View","name":"View"}],"including_types":[],"namespace":{"html_id":"athena/Athena/EventDispatcher","kind":"module","full_name":"Athena::EventDispatcher","name":"EventDispatcher"},"doc":"Base `class` for all event objects.\n\nThis event does not contain any event data and\ncan be used by events that do not require any state.\n\nCan be inherited from to include information about the event.\n\nNOTE: If one event inherits from another, and both are being used within a listener; the child event's handler would be executed twice since its type is compatible with the parent.\nEither use composition versus inheritance for sharing common logic between events, or add an explicit type check in the listener.\n\n```\n# Define a custom event\nclass ExceptionEvent < AED::Event\n  getter exception : Exception\n\n  def initialize(@exception : Exception); end\nend\n\n# Using Event on its own\ndispatcher.dispatch AED::Event.new\n\n# Dispatch a custom event\nexception = ArgumentError.new \"Value cannot be negative\"\ndispatcher.dispatch ExceptionEvent.new exception\n```","summary":"<p>Base <code>class</code> for all event objects.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/EventDispatcher/EventDispatcher","path":"Athena/EventDispatcher/EventDispatcher.html","kind":"class","full_name":"Athena::EventDispatcher::EventDispatcher","name":"EventDispatcher","abstract":false,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Athena/EventDispatcher/EventDispatcherInterface","kind":"module","full_name":"Athena::EventDispatcher::EventDispatcherInterface","name":"EventDispatcherInterface"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-event_dispatcher/src/event_dispatcher.cr","line_number":5,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/event_dispatcher.cr#L5"},{"filename":"src/ext/event_dispatcher.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/ext/event_dispatcher.cr#L2"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/EventDispatcher/EventDispatcherInterface","kind":"module","full_name":"Athena::EventDispatcher::EventDispatcherInterface","name":"EventDispatcherInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/EventDispatcher","kind":"module","full_name":"Athena::EventDispatcher","name":"EventDispatcher"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(listeners:Array(AED::EventListenerInterface))-class-method","html_id":"new(listeners:Array(AED::EventListenerInterface))-class-method","name":"new","doc":"Initializes `self` with the provided *listeners*.\n\nThis overload is mainly intended for DI or to manually\nconfigure the listeners that should be listened on.","summary":"<p>Initializes <code>self</code> with the provided <em>listeners</em>.</p>","abstract":false,"args":[{"name":"listeners","doc":null,"default_value":"","external_name":"listeners","restriction":"Array(AED::EventListenerInterface)"}],"args_string":"(listeners : Array(AED::EventListenerInterface))","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/event_dispatcher.cr#L18","def":{"name":"new","args":[{"name":"listeners","doc":null,"default_value":"","external_name":"listeners","restriction":"Array(AED::EventListenerInterface)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(listeners)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Initializes `self` automatically via macros.  This overload is mainly intended for\nuse cases where the listener types don't have any dependencies, and/or all listeners should listen.","summary":"<p>Initializes <code>self</code> automatically via macros.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/event_dispatcher.cr#L40","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new({{ AED::EventListenerInterface.includers.map do |listener|\n  \"#{listener.id}.new\".id\nend }})"}}],"instance_methods":[{"id":"add_listener(event:AED::Event.class,listener:AED::EventListenerType,priority:Int32=0):Nil-instance-method","html_id":"add_listener(event:AED::Event.class,listener:AED::EventListenerType,priority:Int32=0):Nil-instance-method","name":"add_listener","doc":"Adds the provided *listener* as a listener for *event*, optionally with the provided *priority*.","summary":"<p>Adds the provided <em>listener</em> as a listener for <em>event</em>, optionally with the provided <em>priority</em>.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerType"},{"name":"priority","doc":null,"default_value":"0","external_name":"priority","restriction":"Int32"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>, listener : AED::EventListenerType, priority : Int32 = <span class=\"n\">0</span>) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/event_dispatcher.cr#L45","def":{"name":"add_listener","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerType"},{"name":"priority","doc":null,"default_value":"0","external_name":"priority","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@events[event] << (AED::EventListener.new(listener, priority))\n@sorted.delete(event)\n"}},{"id":"dispatch(event:AED::Event):Nil-instance-method","html_id":"dispatch(event:AED::Event):Nil-instance-method","name":"dispatch","doc":"Dispatches *event* to all listeners registered on `self` that are listening on that event.\n\n`AED::EventListenerInterface`'s are executed based on the listener's priority; the higher the value the sooner it gets executed.","summary":"<p>Dispatches <em>event</em> to all listeners registered on <code>self</code> that are listening on that event.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event"}],"args_string":"(event : AED::Event) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/event_dispatcher.cr#L51","def":{"name":"dispatch","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"(listeners(event.class)).each do |listener|\n  if event.is_a?(AED::StoppableEvent) && (!event.propagate?)\n    return\n  end\n  listener.call(event, self)\nend"}},{"id":"has_listeners?(event:AED::Event.class?=nil):Bool-instance-method","html_id":"has_listeners?(event:AED::Event.class?=nil):Bool-instance-method","name":"has_listeners?","doc":"Returns `true` if there are any listeners listening on the provided *event*.\nIf no *event* is provided, returns `true` if there are *ANY* listeners registered on `self`.","summary":"<p>Returns <code>true</code> if there are any listeners listening on the provided <em>event</em>.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"nil","external_name":"event","restriction":"AED::Event.class | Nil"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>? = <span class=\"n\">nil</span>) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/event_dispatcher.cr#L82","def":{"name":"has_listeners?","args":[{"name":"event","doc":null,"default_value":"nil","external_name":"event","restriction":"AED::Event.class | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"if event\n  return !@events[event].empty?\nend\n@events.values.any? do |listener_arr|\n  !listener_arr.empty?\nend\n"}},{"id":"listener_priority(event:AED::Event.class,listener:AED::EventListenerInterface.class):Int32?-instance-method","html_id":"listener_priority(event:AED::Event.class,listener:AED::EventListenerInterface.class):Int32?-instance-method","name":"listener_priority","doc":"Returns the *listener* priority for the provided *event*.  Returns `nil` if no listeners are listening on the provided *event* or\nif *listener* isn't listening on *event*.","summary":"<p>Returns the <em>listener</em> priority for the provided <em>event</em>.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerInterface.class"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>, listener : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">EventListenerInterface</span>.<span class=\"k\">class</span>) : Int32?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/event_dispatcher.cr#L75","def":{"name":"listener_priority","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerInterface.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32 | ::Nil","visibility":"Public","body":"if has_listeners?(event)\nelse\n  return nil\nend\n@events[event].find do |__arg0|\n  __arg0.listener.class == listener\nend.try(&.priority)\n"}},{"id":"listeners(event:AED::Event.class?=nil):Array(AED::EventListener)-instance-method","html_id":"listeners(event:AED::Event.class?=nil):Array(AED::EventListener)-instance-method","name":"listeners","doc":"Returns the listeners listening on the provided *event*.\nIf no *event* is provided, returns all listeners.","summary":"<p>Returns the listeners listening on the provided <em>event</em>.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"nil","external_name":"event","restriction":"AED::Event.class | Nil"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>? = <span class=\"n\">nil</span>) : Array(AED::EventListener)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/event_dispatcher.cr#L60","def":{"name":"listeners","args":[{"name":"event","doc":null,"default_value":"nil","external_name":"event","restriction":"AED::Event.class | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(AED::EventListener)","visibility":"Public","body":"if event\n  if @sorted.includes?(event)\n  else\n    sort(event)\n  end\n  return @events[event]\nend\n@events.each do |ev, _listeners|\n  if @sorted.includes?(event)\n  else\n    sort(ev)\n  end\nend\n@events.values.flatten\n"}},{"id":"remove_listener(event:AED::Event.class,listener:AED::EventListenerInterface.class):Nil-instance-method","html_id":"remove_listener(event:AED::Event.class,listener:AED::EventListenerInterface.class):Nil-instance-method","name":"remove_listener","doc":"Removes the provided *event* from the provided *listener*.","summary":"<p>Removes the provided <em>event</em> from the provided <em>listener</em>.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerInterface.class"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>, listener : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">EventListenerInterface</span>.<span class=\"k\">class</span>) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/event_dispatcher.cr#L89","def":{"name":"remove_listener","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerInterface.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@events[event].reject! do |__arg2|\n  __arg2.listener.class == listener\nend"}},{"id":"remove_listener(event:AED::Event.class,listener:AED::EventListenerType):Nil-instance-method","html_id":"remove_listener(event:AED::Event.class,listener:AED::EventListenerType):Nil-instance-method","name":"remove_listener","doc":"Removes the provided *event* from the provided *listener*.","summary":"<p>Removes the provided <em>event</em> from the provided <em>listener</em>.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerType"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>, listener : AED::EventListenerType) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/event_dispatcher.cr#L94","def":{"name":"remove_listener","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@events[event].reject!(&.==(listener))"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/EventDispatcher/EventDispatcherInterface","path":"Athena/EventDispatcher/EventDispatcherInterface.html","kind":"module","full_name":"Athena::EventDispatcher::EventDispatcherInterface","name":"EventDispatcherInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-event_dispatcher/src/event_dispatcher_interface.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/event_dispatcher_interface.cr#L2"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/EventDispatcher/EventDispatcher","kind":"class","full_name":"Athena::EventDispatcher::EventDispatcher","name":"EventDispatcher"}],"namespace":{"html_id":"athena/Athena/EventDispatcher","kind":"module","full_name":"Athena::EventDispatcher","name":"EventDispatcher"},"doc":"Base type of an event dispatcher.  Defines how dispatchers should be implemented.","summary":"<p>Base type of an event dispatcher.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"add_listener(event:AED::Event.class,listener:AED::EventListenerType,priority:Int32):Nil-instance-method","html_id":"add_listener(event:AED::Event.class,listener:AED::EventListenerType,priority:Int32):Nil-instance-method","name":"add_listener","doc":"Adds the provided *listener* as a listener for *event*, optionally with the provided *priority*.","summary":"<p>Adds the provided <em>listener</em> as a listener for <em>event</em>, optionally with the provided <em>priority</em>.</p>","abstract":true,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerType"},{"name":"priority","doc":null,"default_value":"","external_name":"priority","restriction":"Int32"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>, listener : AED::EventListenerType, priority : Int32) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/event_dispatcher_interface.cr#L4","def":{"name":"add_listener","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerType"},{"name":"priority","doc":null,"default_value":"","external_name":"priority","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"dispatch(event:AED::Event):Nil-instance-method","html_id":"dispatch(event:AED::Event):Nil-instance-method","name":"dispatch","doc":"Dispatches *event* to all listeners registered on `self` that are listening on that event.\n\n`AED::EventListenerInterface`'s are executed based on the listener's priority; the higher the value the sooner it gets executed.","summary":"<p>Dispatches <em>event</em> to all listeners registered on <code>self</code> that are listening on that event.</p>","abstract":true,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event"}],"args_string":"(event : AED::Event) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/event_dispatcher_interface.cr#L9","def":{"name":"dispatch","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"has_listeners?(event:AED::Event.class?):Bool-instance-method","html_id":"has_listeners?(event:AED::Event.class?):Bool-instance-method","name":"has_listeners?","doc":"Returns `true` if there are any listeners listening on the provided *event*.\nIf no *event* is provided, returns `true` if there are *ANY* listeners registered on `self`.","summary":"<p>Returns <code>true</code> if there are any listeners listening on the provided <em>event</em>.</p>","abstract":true,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class | Nil"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>?) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/event_dispatcher_interface.cr#L21","def":{"name":"has_listeners?","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":""}},{"id":"listener_priority(event:AED::Event.class,listener:AED::EventListenerInterface.class):Int32?-instance-method","html_id":"listener_priority(event:AED::Event.class,listener:AED::EventListenerInterface.class):Int32?-instance-method","name":"listener_priority","doc":"Returns the *listener* priority for the provided *event*.  Returns `nil` if no listeners are listening on the provided *event* or\nif *listener* isn't listening on *event*.","summary":"<p>Returns the <em>listener</em> priority for the provided <em>event</em>.</p>","abstract":true,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerInterface.class"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>, listener : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">EventListenerInterface</span>.<span class=\"k\">class</span>) : Int32?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/event_dispatcher_interface.cr#L17","def":{"name":"listener_priority","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerInterface.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32 | ::Nil","visibility":"Public","body":""}},{"id":"listeners(event:AED::Event.class?):Array(AED::EventListener)-instance-method","html_id":"listeners(event:AED::Event.class?):Array(AED::EventListener)-instance-method","name":"listeners","doc":"Returns the listeners listening on the provided *event*.\nIf no *event* is provided, returns all listeners.","summary":"<p>Returns the listeners listening on the provided <em>event</em>.</p>","abstract":true,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class | Nil"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>?) : Array(AED::EventListener)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/event_dispatcher_interface.cr#L13","def":{"name":"listeners","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(AED::EventListener)","visibility":"Public","body":""}},{"id":"remove_listener(event:AED::Event.class,listener:AED::EventListenerInterface.class):Nil-instance-method","html_id":"remove_listener(event:AED::Event.class,listener:AED::EventListenerInterface.class):Nil-instance-method","name":"remove_listener","doc":"Removes the provided *event* from the provided *listener*.","summary":"<p>Removes the provided <em>event</em> from the provided <em>listener</em>.</p>","abstract":true,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerInterface.class"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>, listener : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">EventListenerInterface</span>.<span class=\"k\">class</span>) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/event_dispatcher_interface.cr#L24","def":{"name":"remove_listener","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerInterface.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"remove_listener(event:AED::Event.class,listener:AED::EventListenerType):Nil-instance-method","html_id":"remove_listener(event:AED::Event.class,listener:AED::EventListenerType):Nil-instance-method","name":"remove_listener","doc":"Removes the provided *event* from the provided *listener*.","summary":"<p>Removes the provided <em>event</em> from the provided <em>listener</em>.</p>","abstract":true,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerType"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>, listener : AED::EventListenerType) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/event_dispatcher_interface.cr#L27","def":{"name":"remove_listener","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/EventDispatcher/EventListener","path":"Athena/EventDispatcher/EventListener.html","kind":"struct","full_name":"Athena::EventDispatcher::EventListener","name":"EventListener","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-event_dispatcher/src/athena-event_dispatcher.cr","line_number":96,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/athena-event_dispatcher.cr#L96"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/EventDispatcher","kind":"module","full_name":"Athena::EventDispatcher","name":"EventDispatcher"},"doc":"Wraps an `EventListenerType` in order to keep track of its `priority`.","summary":"<p>Wraps an <code><a href=\"../../Athena/EventDispatcher/EventListenerType.html\">EventListenerType</a></code> in order to keep track of its <code><a href=\"../../Athena/EventDispatcher/EventListener.html#priority:Int32-instance-method\">#priority</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(listener:EventListenerType,priority:Int32=0)-class-method","html_id":"new(listener:EventListenerType,priority:Int32=0)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"EventListenerType"},{"name":"priority","doc":null,"default_value":"0","external_name":"priority","restriction":"Int32"}],"args_string":"(listener : EventListenerType, priority : Int32 = <span class=\"n\">0</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/athena-event_dispatcher.cr#L108","def":{"name":"new","args":[{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"EventListenerType"},{"name":"priority","doc":null,"default_value":"0","external_name":"priority","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(listener, priority)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"listener:EventListenerType-instance-method","html_id":"listener:EventListenerType-instance-method","name":"listener","doc":"The wrapped `EventListenerType` instance.","summary":"<p>The wrapped <code><a href=\"../../Athena/EventDispatcher/EventListenerType.html\">EventListenerType</a></code> instance.</p>","abstract":false,"args":[],"args_string":" : EventListenerType","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/athena-event_dispatcher.cr#L101","def":{"name":"listener","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"EventListenerType","visibility":"Public","body":"@listener"}},{"id":"priority:Int32-instance-method","html_id":"priority:Int32-instance-method","name":"priority","doc":"The priority of the `EventListenerType` instance.\n\nThe higher the `priority` the sooner `listener` will be executed.","summary":"<p>The priority of the <code><a href=\"../../Athena/EventDispatcher/EventListenerType.html\">EventListenerType</a></code> instance.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/athena-event_dispatcher.cr#L106","def":{"name":"priority","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@priority"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/EventDispatcher/EventListenerInterface","path":"Athena/EventDispatcher/EventListenerInterface.html","kind":"module","full_name":"Athena::EventDispatcher::EventListenerInterface","name":"EventListenerInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-event_dispatcher/src/event_listener_interface.cr","line_number":35,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/event_listener_interface.cr#L35"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Routing/Listeners/CORS","kind":"struct","full_name":"Athena::Routing::Listeners::CORS","name":"CORS"},{"html_id":"athena/Athena/Routing/Listeners/Error","kind":"struct","full_name":"Athena::Routing::Listeners::Error","name":"Error"},{"html_id":"athena/Athena/Routing/Listeners/ParamConverter","kind":"struct","full_name":"Athena::Routing::Listeners::ParamConverter","name":"ParamConverter"},{"html_id":"athena/Athena/Routing/Listeners/ParamFetcher","kind":"struct","full_name":"Athena::Routing::Listeners::ParamFetcher","name":"ParamFetcher"},{"html_id":"athena/Athena/Routing/Listeners/Routing","kind":"struct","full_name":"Athena::Routing::Listeners::Routing","name":"Routing"},{"html_id":"athena/Athena/Routing/Listeners/View","kind":"struct","full_name":"Athena::Routing::Listeners::View","name":"View"}],"namespace":{"html_id":"athena/Athena/EventDispatcher","kind":"module","full_name":"Athena::EventDispatcher","name":"EventDispatcher"},"doc":"Interface for event listeners.\n\nListeners are defined by including this module.\n\nAn event can be listened for by defining `#call(event : AED::Event, dispatcher : AED::EventDispatcherInterface) : Nil`.\nThe first argument should be typed to the specific `AED::Event` instance that the method should listen on.  Multiple methods can be defined to handle\nmultiple events within the same listener.\n\nImplementors must also define `self.subscribed_events : AED::SubscribedEvents` that represents the events that `self`'s methods\nare listening on.  The value of the hash is the priority of the listener.  The higher the value the sooner that listener method gets executed.\n\nImplementors can also define initializers if external dependencies are required for handling the event.  However, `AED::EventDispatcher#new(listeners : Array(EventListenerInterface))`\nmust be used to register `self`, either with DI, or provided manually.\n\n```\nstruct TestListener\n  include AED::EventListenerInterface\n\n  def self.subscribed_events : AED::SubscribedEvents\n    AED::SubscribedEvents{\n      HttpRequestEvent => 0,\n      ExceptionEvent   => 4,\n    }\n  end\n\n  def call(event : HttpRequestEvent, dispatcher : AED::EventDispatcherInterface) : Nil\n    # Do something with the `HttpRequestEvent` and/or dispatcher\n  end\n\n  def call(event : ExceptionEvent, dispatcher : AED::EventDispatcherInterface) : Nil\n    # Do something with the `ExceptionEvent` and/or dispatcher\n  end\nend\n```","summary":"<p>Interface for event listeners.</p>","class_methods":[{"id":"subscribed_events:AED::SubscribedEvents-class-method","html_id":"subscribed_events:AED::SubscribedEvents-class-method","name":"subscribed_events","doc":"Returns the `AED::Event`s that `self` is listening on, along with\nthe listener priority of each event.\n\nImplementors should overide this with the events it should listen on.","summary":"<p>Returns the <code><a href=\"../../Athena/EventDispatcher/Event.html\">AED::Event</a></code>s that <code>self</code> is listening on, along with the listener priority of each event.</p>","abstract":false,"args":[],"args_string":" : AED::SubscribedEvents","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/event_listener_interface.cr#L40","def":{"name":"subscribed_events","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AED::SubscribedEvents","visibility":"Public","body":"AED::SubscribedEvents.new"}}],"constructors":[],"instance_methods":[{"id":"call(event:AED::Event,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","html_id":"call(event:AED::Event,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","name":"call","doc":"Example method for listening on a specific *event*.  Implementors can define multiple of these,\nassuming each one listens on a different `AED::Event` type.\n\nInternally this method is used to make the compiler happy, in practice it should never get called.","summary":"<p>Example method for listening on a specific <em>event</em>.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"args_string":"(event : AED::Event, dispatcher : AED::EventDispatcherInterface) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/event_listener_interface.cr#L48","def":{"name":"call","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/EventDispatcher/EventListenerType","path":"Athena/EventDispatcher/EventListenerType.html","kind":"alias","full_name":"Athena::EventDispatcher::EventListenerType","name":"EventListenerType","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-event_dispatcher/src/athena-event_dispatcher.cr","line_number":88,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/athena-event_dispatcher.cr#L88"}],"repository_name":"athena","program":false,"enum":false,"alias":true,"aliased":"(Athena::EventDispatcher::EventListenerInterface | Proc(Athena::EventDispatcher::Event, Athena::EventDispatcher::EventDispatcherInterface, Nil))","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/EventDispatcher","kind":"module","full_name":"Athena::EventDispatcher","name":"EventDispatcher"},"doc":"The possible types an event listener can be.  `AED::EventListenerInterface` instances use `#call`\nin order to keep a common interface with the `Proc` based listeners.","summary":"<p>The possible types an event listener can be.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/EventDispatcher/StoppableEvent","path":"Athena/EventDispatcher/StoppableEvent.html","kind":"module","full_name":"Athena::EventDispatcher::StoppableEvent","name":"StoppableEvent","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-event_dispatcher/src/stoppable_event.cr","line_number":6,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/stoppable_event.cr#L6"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"}],"namespace":{"html_id":"athena/Athena/EventDispatcher","kind":"module","full_name":"Athena::EventDispatcher","name":"EventDispatcher"},"doc":"An `AED::Event` whose processing may be interrupted when the event has been handled.\n\n`AED::EventDispatcherInterface` implementations *MUST* check to determine if an `AED::Event`\nis marked as stopped after each listener is called.  If it is, then the `AED::EventListenerType` should\nreturn immediately without calling any further `AED::EventListenerType`.","summary":"<p>An <code><a href=\"../../Athena/EventDispatcher/Event.html\">AED::Event</a></code> whose processing may be interrupted when the event has been handled.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"propagate?:Bool-instance-method","html_id":"propagate?:Bool-instance-method","name":"propagate?","doc":"If future `AED::EventListenerType` should be executed.","summary":"<p>If future <code><a href=\"../../Athena/EventDispatcher/EventListenerType.html\">AED::EventListenerType</a></code> should be executed.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/stoppable_event.cr#L10","def":{"name":"propagate?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"!@propatation_stopped"}},{"id":"stop_propagation:Nil-instance-method","html_id":"stop_propagation:Nil-instance-method","name":"stop_propagation","doc":"Prevent future `AED::EventListenerType` from executing once\nany listener calls `#stop_propagation` on `self`.","summary":"<p>Prevent future <code><a href=\"../../Athena/EventDispatcher/EventListenerType.html\">AED::EventListenerType</a></code> from executing once any listener calls <code><a href=\"../../Athena/EventDispatcher/StoppableEvent.html#stop_propagation:Nil-instance-method\">#stop_propagation</a></code> on <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/stoppable_event.cr#L16","def":{"name":"stop_propagation","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@propatation_stopped = true"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/EventDispatcher/SubscribedEvents","path":"Athena/EventDispatcher/SubscribedEvents.html","kind":"alias","full_name":"Athena::EventDispatcher::SubscribedEvents","name":"SubscribedEvents","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-event_dispatcher/src/athena-event_dispatcher.cr","line_number":93,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-event_dispatcher/src/athena-event_dispatcher.cr#L93"}],"repository_name":"athena","program":false,"enum":false,"alias":true,"aliased":"Hash(Athena::EventDispatcher::Event.class, Int32)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/EventDispatcher","kind":"module","full_name":"Athena::EventDispatcher","name":"EventDispatcher"},"doc":"The mapping of the `AED::Event` and the priority a `AED::EventListenerInterface` is listening on.\n\nSee `AED::EventListenerInterface`.","summary":"<p>The mapping of the <code><a href=\"../../Athena/EventDispatcher/Event.html\">AED::Event</a></code> and the priority a <code><a href=\"../../Athena/EventDispatcher/EventListenerInterface.html\">AED::EventListenerInterface</a></code> is listening on.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Routing","path":"Athena/Routing.html","kind":"module","full_name":"Athena::Routing","name":"Routing","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/action.cr","line_number":4,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/action.cr#L4"},{"filename":"src/athena.cr","line_number":49,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/athena.cr#L49"},{"filename":"src/logging.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/logging.cr#L3"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"LOGGER","name":"LOGGER","value":"Log.for(\"athena.routing\")","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena","kind":"module","full_name":"Athena","name":"Athena"},"doc":"See the [external documentation](https://athenaframework.org) for an introduction to `Athena`.\n\nAlso checkout the [Components](https://athenaframework.org/components) for an overview of how `Athena` is designed.","summary":"<p>See the <a href=\"https://athenaframework.org\" target=\"_blank\">external documentation</a> for an introduction to <code><a href=\"../Athena.html\">Athena</a></code>.</p>","class_methods":[{"id":"run(port:Int32=3000,host:String=&quot;0.0.0.0&quot;,reuse_port:Bool=false):Nil-class-method","html_id":"run(port:Int32=3000,host:String=&quot;0.0.0.0&quot;,reuse_port:Bool=false):Nil-class-method","name":"run","doc":"Runs an `HTTP::Server` listening on the given *port* and *host*.\n\n```\nrequire \"athena\"\n\nclass ExampleController < ART::Controller\n  @[ARTA::Get(\"/\")]\n  def root : String\n    \"At the index\"\n  end\nend\n\nART.run\n```\nSee `ART::Controller` for more information on defining controllers/route actions.","summary":"<p>Runs an <code>HTTP::Server</code> listening on the given <em>port</em> and <em>host</em>.</p>","abstract":false,"args":[{"name":"port","doc":null,"default_value":"3000","external_name":"port","restriction":"Int32"},{"name":"host","doc":null,"default_value":"\"0.0.0.0\"","external_name":"host","restriction":"String"},{"name":"reuse_port","doc":null,"default_value":"false","external_name":"reuse_port","restriction":"Bool"}],"args_string":"(port : Int32 = <span class=\"n\">3000</span>, host : String = <span class=\"s\">&quot;0.0.0.0&quot;</span>, reuse_port : Bool = <span class=\"n\">false</span>) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/athena.cr#L115","def":{"name":"run","args":[{"name":"port","doc":null,"default_value":"3000","external_name":"port","restriction":"Int32"},{"name":"host","doc":null,"default_value":"\"0.0.0.0\"","external_name":"host","restriction":"String"},{"name":"reuse_port","doc":null,"default_value":"false","external_name":"reuse_port","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"(ART::Server.new(port, host, reuse_port)).start"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Routing/Action","path":"Athena/Routing/Action.html","kind":"struct","full_name":"Athena::Routing::Action(Controller, ActionType, ReturnType, ArgTypeTuple, ArgumentsType)","name":"Action","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/ActionBase","kind":"struct","full_name":"Athena::Routing::ActionBase","name":"ActionBase"},"ancestors":[{"html_id":"athena/Athena/Routing/ActionBase","kind":"struct","full_name":"Athena::Routing::ActionBase","name":"ActionBase"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/action.cr","line_number":9,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/action.cr#L9"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Represents an endpoint within the application.\n\nIncludes metadata about the endpoint, such as its controller, arguments, return type, and the action that should be executed.","summary":"<p>Represents an endpoint within the application.</p>","class_methods":[],"constructors":[{"id":"new(action:ActionType,name:String,method:String,path:String,constraints:Hash(String,Regex),arguments:ArgumentsType,param_converters:Array(ART::ParamConverterInterface::ConfigurationInterface),view_context:ART::Action::ViewContext,annotation_configurations:ACF::AnnotationConfigurations,params:Array(ART::Params::ParamInterface),_controller:Controller.class,_return_type:ReturnType.class,_arg_types:ArgTypeTuple.class)-class-method","html_id":"new(action:ActionType,name:String,method:String,path:String,constraints:Hash(String,Regex),arguments:ArgumentsType,param_converters:Array(ART::ParamConverterInterface::ConfigurationInterface),view_context:ART::Action::ViewContext,annotation_configurations:ACF::AnnotationConfigurations,params:Array(ART::Params::ParamInterface),_controller:Controller.class,_return_type:ReturnType.class,_arg_types:ArgTypeTuple.class)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"action","doc":null,"default_value":"","external_name":"action","restriction":"ActionType"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":"String"},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"constraints","doc":null,"default_value":"","external_name":"constraints","restriction":"Hash(String, Regex)"},{"name":"arguments","doc":null,"default_value":"","external_name":"arguments","restriction":"ArgumentsType"},{"name":"param_converters","doc":null,"default_value":"","external_name":"param_converters","restriction":"Array(ART::ParamConverterInterface::ConfigurationInterface)"},{"name":"view_context","doc":null,"default_value":"","external_name":"view_context","restriction":"ART::Action::ViewContext"},{"name":"annotation_configurations","doc":null,"default_value":"","external_name":"annotation_configurations","restriction":"ACF::AnnotationConfigurations"},{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Array(ART::Params::ParamInterface)"},{"name":"_controller","doc":null,"default_value":"","external_name":"_controller","restriction":"Controller.class"},{"name":"_return_type","doc":null,"default_value":"","external_name":"_return_type","restriction":"ReturnType.class"},{"name":"_arg_types","doc":null,"default_value":"","external_name":"_arg_types","restriction":"ArgTypeTuple.class"}],"args_string":"(action : ActionType, name : String, method : String, path : String, constraints : Hash(String, Regex), arguments : ArgumentsType, param_converters : Array(ART::ParamConverterInterface::ConfigurationInterface), view_context : ART::Action::ViewContext, annotation_configurations : ACF::AnnotationConfigurations, params : Array(ART::Params::ParamInterface), _controller : <span class=\"t\">Controller</span>.<span class=\"k\">class</span>, _return_type : <span class=\"t\">ReturnType</span>.<span class=\"k\">class</span>, _arg_types : <span class=\"t\">ArgTypeTuple</span>.<span class=\"k\">class</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/action.cr#L76","def":{"name":"new","args":[{"name":"action","doc":null,"default_value":"","external_name":"action","restriction":"ActionType"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":"String"},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"constraints","doc":null,"default_value":"","external_name":"constraints","restriction":"Hash(String, Regex)"},{"name":"arguments","doc":null,"default_value":"","external_name":"arguments","restriction":"ArgumentsType"},{"name":"param_converters","doc":null,"default_value":"","external_name":"param_converters","restriction":"Array(ART::ParamConverterInterface::ConfigurationInterface)"},{"name":"view_context","doc":null,"default_value":"","external_name":"view_context","restriction":"ART::Action::ViewContext"},{"name":"annotation_configurations","doc":null,"default_value":"","external_name":"annotation_configurations","restriction":"ACF::AnnotationConfigurations"},{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Array(ART::Params::ParamInterface)"},{"name":"_controller","doc":null,"default_value":"","external_name":"_controller","restriction":"Controller.class"},{"name":"_return_type","doc":null,"default_value":"","external_name":"_return_type","restriction":"ReturnType.class"},{"name":"_arg_types","doc":null,"default_value":"","external_name":"_arg_types","restriction":"ArgTypeTuple.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Action(Controller, ActionType, ReturnType, ArgTypeTuple, ArgumentsType).allocate\n_.initialize(action, name, method, path, constraints, arguments, param_converters, view_context, annotation_configurations, params, _controller, _return_type, _arg_types)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"annotation_configurations:ACF::AnnotationConfigurations-instance-method","html_id":"annotation_configurations:ACF::AnnotationConfigurations-instance-method","name":"annotation_configurations","doc":"Returns annotation configurations registered via `Athena::Config.configuration_annotation` and applied to `self`.\n\nThese configurations could then be accessed within `ART::ParamConverterInterface`s and/or `ART::Listeners`s.\nSee `ART::Events::RequestAware` for an example.","summary":"<p>Returns annotation configurations registered via <code><a href=\"../../Athena/Config.html#configuration_annotation(name,*args,&)-macro\">Athena::Config.configuration_annotation</a></code> and applied to <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : ACF::AnnotationConfigurations","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/action.cr#L72","def":{"name":"annotation_configurations","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ACF::AnnotationConfigurations","visibility":"Public","body":"@annotation_configurations"}},{"id":"arguments:ArgumentsType-instance-method","html_id":"arguments:ArgumentsType-instance-method","name":"arguments","doc":"Returns an `Array(ART::Arguments::ArgumentMetadata)` that `self` requires.","summary":"<p>Returns an <code>Array(<a href=\"../../Athena/Routing/Arguments/ArgumentMetadata.html\">ART::Arguments::ArgumentMetadata</a>)</code> that <code>self</code> requires.</p>","abstract":false,"args":[],"args_string":" : ArgumentsType","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/action.cr#L60","def":{"name":"arguments","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ArgumentsType","visibility":"Public","body":"@arguments"}},{"id":"constraints:Hash(String,Regex)-instance-method","html_id":"constraints:Hash(String,Regex)-instance-method","name":"constraints","doc":"Returns any routing constraints related to `self`.","summary":"<p>Returns any routing constraints related to <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : Hash(String, Regex)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/action.cr#L57","def":{"name":"constraints","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Regex)","visibility":"Public","body":"@constraints"}},{"id":"controller:Controller.class-instance-method","html_id":"controller:Controller.class-instance-method","name":"controller","doc":"The `ART::Controller` that includes `self`.","summary":"<p>The <code><a href=\"../../Athena/Routing/Controller.html\">ART::Controller</a></code> that includes <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">Controller</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/action.cr#L100","def":{"name":"controller","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Controller.class","visibility":"Public","body":"Controller"}},{"id":"execute(arguments:Array):ReturnType-instance-method","html_id":"execute(arguments:Array):ReturnType-instance-method","name":"execute","doc":"Executes the action related to `self` with the provided *arguments* array.","summary":"<p>Executes the action related to <code>self</code> with the provided <em>arguments</em> array.</p>","abstract":false,"args":[{"name":"arguments","doc":null,"default_value":"","external_name":"arguments","restriction":"Array"}],"args_string":"(arguments : Array) : ReturnType","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/action.cr#L105","def":{"name":"execute","args":[{"name":"arguments","doc":null,"default_value":"","external_name":"arguments","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ReturnType","visibility":"Public","body":"@action.call.call(*({{ ArgTypeTuple.type_vars.empty? ? \"Tuple.new\".id : ArgTypeTuple }}).from(arguments))"}},{"id":"method:String-instance-method","html_id":"method:String-instance-method","name":"method","doc":"Returns the HTTP method associated with `self`.","summary":"<p>Returns the HTTP method associated with <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/action.cr#L48","def":{"name":"method","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@method"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":"Returns the name of the the controller action related to `self`.","summary":"<p>Returns the name of the the controller action related to <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/action.cr#L51","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}},{"id":"param_converters:Array(ART::ParamConverterInterface::ConfigurationInterface)-instance-method","html_id":"param_converters:Array(ART::ParamConverterInterface::ConfigurationInterface)-instance-method","name":"param_converters","doc":"Returns an `Array(ART::ParamConverterInterface::ConfigurationInterface)` representing the `ARTA::ParamConverter`s applied to `self`.","summary":"<p>Returns an <code>Array(<a href=\"../../Athena/Routing/ParamConverterInterface/ConfigurationInterface.html\">ART::ParamConverterInterface::ConfigurationInterface</a>)</code> representing the <code><a href=\"../../Athena/Routing/Annotations/ParamConverter.html\">ARTA::ParamConverter</a></code>s applied to <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : Array(ART::ParamConverterInterface::ConfigurationInterface)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/action.cr#L63","def":{"name":"param_converters","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(ART::ParamConverterInterface::ConfigurationInterface)","visibility":"Public","body":"@param_converters"}},{"id":"params:Array(ART::Params::ParamInterface)-instance-method","html_id":"params:Array(ART::Params::ParamInterface)-instance-method","name":"params","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(ART::Params::ParamInterface)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/action.cr#L74","def":{"name":"params","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(ART::Params::ParamInterface)","visibility":"Public","body":"@params"}},{"id":"path:String-instance-method","html_id":"path:String-instance-method","name":"path","doc":"Returns the URL path related to `self`.","summary":"<p>Returns the URL path related to <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/action.cr#L54","def":{"name":"path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@path"}},{"id":"return_type:ReturnType.class-instance-method","html_id":"return_type:ReturnType.class-instance-method","name":"return_type","doc":"The type that `self`'s route should return.","summary":"<p>The type that <code>self</code>'s route should return.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">ReturnType</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/action.cr#L95","def":{"name":"return_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ReturnType.class","visibility":"Public","body":"ReturnType"}},{"id":"view_context:ART::Action::ViewContext-instance-method","html_id":"view_context:ART::Action::ViewContext-instance-method","name":"view_context","doc":"Returns the `ART::Action::ViewContext` related to `self`.","summary":"<p>Returns the <code><a href=\"../../Athena/Routing/Action/ViewContext.html\">ART::Action::ViewContext</a></code> related to <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : ART::Action::ViewContext","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/action.cr#L66","def":{"name":"view_context","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ART::Action::ViewContext","visibility":"Public","body":"@view_context"}}],"macros":[],"types":[{"html_id":"athena/Athena/Routing/Action/ViewContext","path":"Athena/Routing/Action/ViewContext.html","kind":"class","full_name":"Athena::Routing::Action::ViewContext","name":"ViewContext","abstract":false,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/action.cr","line_number":13,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/action.cr#L13"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Action","kind":"struct","full_name":"Athena::Routing::Action(Controller, ActionType, ReturnType, ArgTypeTuple, ArgumentsType)","name":"Action"},"doc":"Stores runtime configuration data from the `ARTA::View` annotation about how to render the output of the related action.\n\nThis includes the action's `HTTP::Status` and any serialization related configuration options.","summary":"<p>Stores runtime configuration data from the <code><a href=\"../../../Athena/Routing/Annotations/View.html\">ARTA::View</a></code> annotation about how to render the output of the related action.</p>","class_methods":[],"constructors":[{"id":"new(status:HTTP::Status?=nil,emit_nil:Bool=false,serialization_groups:Array(String)?=nil,validation_groups:Array(String)?=nil)-class-method","html_id":"new(status:HTTP::Status?=nil,emit_nil:Bool=false,serialization_groups:Array(String)?=nil,validation_groups:Array(String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"status","doc":null,"default_value":"nil","external_name":"status","restriction":"HTTP::Status | ::Nil"},{"name":"emit_nil","doc":null,"default_value":"false","external_name":"emit_nil","restriction":"Bool"},{"name":"serialization_groups","doc":null,"default_value":"nil","external_name":"serialization_groups","restriction":"Array(String) | ::Nil"},{"name":"validation_groups","doc":null,"default_value":"nil","external_name":"validation_groups","restriction":"Array(String) | ::Nil"}],"args_string":"(status : HTTP::Status? = <span class=\"n\">nil</span>, emit_nil : Bool = <span class=\"n\">false</span>, serialization_groups : Array(String)? = <span class=\"n\">nil</span>, validation_groups : Array(String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/action.cr#L36","def":{"name":"new","args":[{"name":"status","doc":null,"default_value":"nil","external_name":"status","restriction":"HTTP::Status | ::Nil"},{"name":"emit_nil","doc":null,"default_value":"false","external_name":"emit_nil","restriction":"Bool"},{"name":"serialization_groups","doc":null,"default_value":"nil","external_name":"serialization_groups","restriction":"Array(String) | ::Nil"},{"name":"validation_groups","doc":null,"default_value":"nil","external_name":"validation_groups","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(status, emit_nil, serialization_groups, validation_groups)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"emit_nil:Bool-instance-method","html_id":"emit_nil:Bool-instance-method","name":"emit_nil","doc":"Returns `true` if `nil` values should be serialized.","summary":"<p>Returns <code>true</code> if <code>nil</code> values should be serialized.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/action.cr#L24","def":{"name":"emit_nil","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@emit_nil"}},{"id":"emit_nil=(emit_nil:Bool)-instance-method","html_id":"emit_nil=(emit_nil:Bool)-instance-method","name":"emit_nil=","doc":"Returns `true` if `nil` values should be serialized.","summary":"<p>Returns <code>true</code> if <code>nil</code> values should be serialized.</p>","abstract":false,"args":[{"name":"emit_nil","doc":null,"default_value":"","external_name":"emit_nil","restriction":"Bool"}],"args_string":"(emit_nil : Bool)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/action.cr#L24","def":{"name":"emit_nil=","args":[{"name":"emit_nil","doc":null,"default_value":"","external_name":"emit_nil","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@emit_nil = emit_nil"}},{"id":"has_custom_status?:Bool-instance-method","html_id":"has_custom_status?:Bool-instance-method","name":"has_custom_status?","doc":"Returns `true` if the action related to `self` defined a custom status via the `ARTA::View` annotation, otherwise `false`.","summary":"<p>Returns <code>true</code> if the action related to <code>self</code> defined a custom status via the <code><a href=\"../../../Athena/Routing/Annotations/View.html\">ARTA::View</a></code> annotation, otherwise <code>false</code>.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/action.cr#L15","def":{"name":"has_custom_status?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@has_custom_status"}},{"id":"serialization_groups:Array(String)?-instance-method","html_id":"serialization_groups:Array(String)?-instance-method","name":"serialization_groups","doc":"Returns the groups that should be used for serialization as part of `ASR::ExclusionStrategies::Groups`.","summary":"<p>Returns the groups that should be used for serialization as part of <code><a href=\"../../../Athena/Serializer/ExclusionStrategies/Groups.html\">ASR::ExclusionStrategies::Groups</a></code>.</p>","abstract":false,"args":[],"args_string":" : Array(String)?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/action.cr#L21","def":{"name":"serialization_groups","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String) | ::Nil","visibility":"Public","body":"@serialization_groups"}},{"id":"serialization_groups=(serialization_groups:Array(String)?)-instance-method","html_id":"serialization_groups=(serialization_groups:Array(String)?)-instance-method","name":"serialization_groups=","doc":"Returns the groups that should be used for serialization as part of `ASR::ExclusionStrategies::Groups`.","summary":"<p>Returns the groups that should be used for serialization as part of <code><a href=\"../../../Athena/Serializer/ExclusionStrategies/Groups.html\">ASR::ExclusionStrategies::Groups</a></code>.</p>","abstract":false,"args":[{"name":"serialization_groups","doc":null,"default_value":"","external_name":"serialization_groups","restriction":"Array(String) | ::Nil"}],"args_string":"(serialization_groups : Array(String)?)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/action.cr#L21","def":{"name":"serialization_groups=","args":[{"name":"serialization_groups","doc":null,"default_value":"","external_name":"serialization_groups","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@serialization_groups = serialization_groups"}},{"id":"status:HTTP::Status-instance-method","html_id":"status:HTTP::Status-instance-method","name":"status","doc":"Returns the `HTTP::Status` this action should return.  Defaults to `HTTP::Status::OK` (200).","summary":"<p>Returns the <code>HTTP::Status</code> this action should return.</p>","abstract":false,"args":[],"args_string":" : HTTP::Status","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/action.cr#L18","def":{"name":"status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::Status","visibility":"Public","body":"@status"}},{"id":"status=(status:HTTP::Status)-instance-method","html_id":"status=(status:HTTP::Status)-instance-method","name":"status=","doc":"Returns the `HTTP::Status` this action should return.  Defaults to `HTTP::Status::OK` (200).","summary":"<p>Returns the <code>HTTP::Status</code> this action should return.</p>","abstract":false,"args":[{"name":"status","doc":null,"default_value":"","external_name":"status","restriction":"HTTP::Status"}],"args_string":"(status : HTTP::Status)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/action.cr#L18","def":{"name":"status=","args":[{"name":"status","doc":null,"default_value":"","external_name":"status","restriction":"HTTP::Status"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@status = status"}},{"id":"validation_groups:Array(String)?-instance-method","html_id":"validation_groups:Array(String)?-instance-method","name":"validation_groups","doc":"Returns the groups that should be used to validate any objects related to this route.\n\nSee `AVD::Constraint@validation-groups`.","summary":"<p>Returns the groups that should be used to validate any objects related to this route.</p>","abstract":false,"args":[],"args_string":" : Array(String)?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/action.cr#L29","def":{"name":"validation_groups","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String) | ::Nil","visibility":"Public","body":"@validation_groups"}},{"id":"validation_groups=(validation_groups:Array(String)?)-instance-method","html_id":"validation_groups=(validation_groups:Array(String)?)-instance-method","name":"validation_groups=","doc":"Returns the groups that should be used to validate any objects related to this route.\n\nSee `AVD::Constraint@validation-groups`.","summary":"<p>Returns the groups that should be used to validate any objects related to this route.</p>","abstract":false,"args":[{"name":"validation_groups","doc":null,"default_value":"","external_name":"validation_groups","restriction":"Array(String) | ::Nil"}],"args_string":"(validation_groups : Array(String)?)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/action.cr#L29","def":{"name":"validation_groups=","args":[{"name":"validation_groups","doc":null,"default_value":"","external_name":"validation_groups","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@validation_groups = validation_groups"}},{"id":"version:String?-instance-method","html_id":"version:String?-instance-method","name":"version","doc":"Returns the serialization version to use for this route as part of `ASR::ExclusionStrategies::Version`.\n\nCan be set as part of an `ART::Events::Action` event listener based on the resolved version of the request.","summary":"<p>Returns the serialization version to use for this route as part of <code><a href=\"../../../Athena/Serializer/ExclusionStrategies/Version.html\">ASR::ExclusionStrategies::Version</a></code>.</p>","abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/action.cr#L34","def":{"name":"version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@version"}},{"id":"version=(version:String?)-instance-method","html_id":"version=(version:String?)-instance-method","name":"version=","doc":"Returns the serialization version to use for this route as part of `ASR::ExclusionStrategies::Version`.\n\nCan be set as part of an `ART::Events::Action` event listener based on the resolved version of the request.","summary":"<p>Returns the serialization version to use for this route as part of <code><a href=\"../../../Athena/Serializer/ExclusionStrategies/Version.html\">ASR::ExclusionStrategies::Version</a></code>.</p>","abstract":false,"args":[{"name":"version","doc":null,"default_value":"","external_name":"version","restriction":"String | ::Nil"}],"args_string":"(version : String?)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/action.cr#L34","def":{"name":"version=","args":[{"name":"version","doc":null,"default_value":"","external_name":"version","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@version = version"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Routing/ActionBase","path":"Athena/Routing/ActionBase.html","kind":"struct","full_name":"Athena::Routing::ActionBase","name":"ActionBase","abstract":true,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/action.cr","line_number":4,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/action.cr#L4"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Routing/Action","kind":"struct","full_name":"Athena::Routing::Action(Controller, ActionType, ReturnType, ArgTypeTuple, ArgumentsType)","name":"Action"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Parent type of a route just used for typing.\n\nSee `ART::Action`.","summary":"<p>Parent type of a route just used for typing.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/action.cr#L4","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Annotations","path":"Athena/Routing/Annotations.html","kind":"module","full_name":"Athena::Routing::Annotations","name":"Annotations","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/annotations.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/annotations.cr#L3"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Contains all the `Athena::Routing` based annotations.\nSee each annotation for more information.","summary":"<p>Contains all the <code><a href=\"../../Athena/Routing.html\">Athena::Routing</a></code> based annotations.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Routing/Annotations/Delete","path":"Athena/Routing/Annotations/Delete.html","kind":"annotation","full_name":"Athena::Routing::Annotations::Delete","name":"Delete","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/annotations.cr","line_number":19,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/annotations.cr#L19"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Annotations","kind":"module","full_name":"Athena::Routing::Annotations","name":"Annotations"},"doc":"Defines a `DELETE` endpoint.\n\n## Fields\n\n* path : `String` - The path for the endpoint, may also be provided as the first positional argument.\n* name : `String` - The name of the route.  Defaults to controller name + method name down snake-cased.\n* constraints : `Hash(String, Regex)` - A mapping between a route's path parameters and its constraints.\n\n## Example\n\n```\n@[ARTA::Delete(path: \"/users/:id\")]\ndef delete_user(id : Int32) : Nil\nend\n```","summary":"<p>Defines a <code>DELETE</code> endpoint.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Annotations/Get","path":"Athena/Routing/Annotations/Get.html","kind":"annotation","full_name":"Athena::Routing::Annotations::Get","name":"Get","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/annotations.cr","line_number":36,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/annotations.cr#L36"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Annotations","kind":"module","full_name":"Athena::Routing::Annotations","name":"Annotations"},"doc":"Defines a `GET` endpoint.\n\n## Fields\n\n* path : `String` - The path for the endpoint, may also be provided as the first positional argument.\n* name : `String` - The name of the route.  Defaults to controller name + method name down snake-cased.\n* constraints : `Hash(String, Regex)` - A mapping between a route's path parameters and its constraints.\n\n## Example\n\n```\n@[ARTA::Get(path: \"/users/:id\")]\ndef get_user(id : Int32) : Nil\nend\n```","summary":"<p>Defines a <code>GET</code> endpoint.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Annotations/Head","path":"Athena/Routing/Annotations/Head.html","kind":"annotation","full_name":"Athena::Routing::Annotations::Head","name":"Head","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/annotations.cr","line_number":53,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/annotations.cr#L53"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Annotations","kind":"module","full_name":"Athena::Routing::Annotations","name":"Annotations"},"doc":"Defines a `HEAD` endpoint.\n\n## Fields\n\n* path : `String` - The path for the endpoint, may also be provided as the first positional argument.\n* name : `String` - The name of the route.  Defaults to controller name + method name down snake-cased.\n* constraints : `Hash(String, Regex)` - A mapping between a route's path parameters and its constraints.\n\n## Example\n\n```\n@[ARTA::Head(path: \"/users\")]\ndef head_user : Nil\nend\n```","summary":"<p>Defines a <code>HEAD</code> endpoint.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Annotations/Link","path":"Athena/Routing/Annotations/Link.html","kind":"annotation","full_name":"Athena::Routing::Annotations::Link","name":"Link","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/annotations.cr","line_number":70,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/annotations.cr#L70"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Annotations","kind":"module","full_name":"Athena::Routing::Annotations","name":"Annotations"},"doc":"Defines a `LINK` endpoint.\n\n## Fields\n\n* path : `String` - The path for the endpoint, may also be provided as the first positional argument.\n* name : `String` - The name of the route.  Defaults to controller name + method name down snake-cased.\n* constraints : `Hash(String, Regex)` - A mapping between a route's path parameters and its constraints.\n\n## Example\n\n```\n@[ARTA::Link(path: \"/users/:id\")]\ndef link_user(id : Int32) : Nil\nend\n```","summary":"<p>Defines a <code>LINK</code> endpoint.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Annotations/ParamConverter","path":"Athena/Routing/Annotations/ParamConverter.html","kind":"annotation","full_name":"Athena::Routing::Annotations::ParamConverter","name":"ParamConverter","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/annotations.cr","line_number":90,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/annotations.cr#L90"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Annotations","kind":"module","full_name":"Athena::Routing::Annotations","name":"Annotations"},"doc":"Applies an `ART::ParamConverterInterface` to a given argument.\n\nSee `ART::ParamConverterInterface` for more information on defining a param converter.\n\n## Fields\n\n* name : `String` - The name of the argument that should be converted, may also be provided as the first positional argument.\n* converter : `ART::ParamConverterInterface.class` - The `ART::ParamConverterInterface` that should be used to convert this argument.\n\n## Example\n\n```\n@[ARTA::Get(path: \"/multiply/:num\")]\n@[ARTA::ParamConverter(\"num\", converter: MultiplyConverter)]\ndef multiply(num : Int32) : Int32\n  num\nend\n```","summary":"<p>Applies an <code><a href=\"../../../Athena/Routing/ParamConverterInterface.html\">ART::ParamConverterInterface</a></code> to a given argument.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Annotations/Patch","path":"Athena/Routing/Annotations/Patch.html","kind":"annotation","full_name":"Athena::Routing::Annotations::Patch","name":"Patch","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/annotations.cr","line_number":107,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/annotations.cr#L107"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Annotations","kind":"module","full_name":"Athena::Routing::Annotations","name":"Annotations"},"doc":"Defines a `PATCH` endpoint.\n\n## Fields\n\n* path : `String` - The path for the endpoint, may also be provided as the first positional argument.\n* name : `String` - The name of the route.  Defaults to controller name + method name down snake-cased.\n* constraints : `Hash(String, Regex)` - A mapping between a route's path parameters and its constraints.\n\n## Example\n\n```\n@[ARTA::Patch(path: \"/users/:id\")]\ndef partial_update_user(id : Int32) : Nil\nend\n```","summary":"<p>Defines a <code>PATCH</code> endpoint.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Annotations/Post","path":"Athena/Routing/Annotations/Post.html","kind":"annotation","full_name":"Athena::Routing::Annotations::Post","name":"Post","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/annotations.cr","line_number":124,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/annotations.cr#L124"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Annotations","kind":"module","full_name":"Athena::Routing::Annotations","name":"Annotations"},"doc":"Defines a `POST` endpoint.\n\n## Fields\n\n* path : `String` - The path for the endpoint, may also be provided as the first positional argument.\n* name : `String` - The name of the route.  Defaults to controller name + method name down snake-cased.\n* constraints : `Hash(String, Regex)` - A mapping between a route's path parameters and its constraints.\n\n## Example\n\n```\n@[ARTA::Post(path: \"/users\")]\ndef new_user : Nil\nend\n```","summary":"<p>Defines a <code>POST</code> endpoint.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Annotations/Prefix","path":"Athena/Routing/Annotations/Prefix.html","kind":"annotation","full_name":"Athena::Routing::Annotations::Prefix","name":"Prefix","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/annotations.cr","line_number":144,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/annotations.cr#L144"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Annotations","kind":"module","full_name":"Athena::Routing::Annotations","name":"Annotations"},"doc":"Apply a *prefix* to all actions within `self`.  Can be a static string, but may also contain path arguments.\n\n## Fields\n\n* prefix : `String` - The path prefix to use, may also be provided as the first positional argument.\n\n## Example\n\n```\n@[ARTA::Prefix(prefix: \"calendar\")]\nclass CalendarController < ART::Controller\n  # The route of this action would be `GET /calendar/events`.\n  @[ARTA::Get(path: \"events\")]\n  def events : String\n    \"events\"\n  end\nend\n```","summary":"<p>Apply a <em>prefix</em> to all actions within <code>self</code>.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Annotations/Put","path":"Athena/Routing/Annotations/Put.html","kind":"annotation","full_name":"Athena::Routing::Annotations::Put","name":"Put","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/annotations.cr","line_number":161,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/annotations.cr#L161"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Annotations","kind":"module","full_name":"Athena::Routing::Annotations","name":"Annotations"},"doc":"Defines a `PUT` endpoint.\n\n## Fields\n\n* path : `String` - The path for the endpoint, may also be provided as the first positional argument.\n* name : `String` - The name of the route.  Defaults to controller name + method name down snake-cased.\n* constraints : `Hash(String, Regex)` - A mapping between a route's path parameters and its constraints.\n\n## Example\n\n```\n@[ARTA::Put(path: \"/users/:id\")]\ndef update_user(id : Int32) : Nil\nend\n```","summary":"<p>Defines a <code>PUT</code> endpoint.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Annotations/QueryParam","path":"Athena/Routing/Annotations/QueryParam.html","kind":"annotation","full_name":"Athena::Routing::Annotations::QueryParam","name":"QueryParam","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/annotations.cr","line_number":403,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/annotations.cr#L403"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Annotations","kind":"module","full_name":"Athena::Routing::Annotations","name":"Annotations"},"doc":"Used to define (and configure) a query parameter tied to a given argument.\n\nThe type of the query param is derived from the type restriction of the associated controller action argument.\n\n## Usage\n\nThe most basic usage is adding an annotation to a controller action whose name matches a controller action argument.\nA `description` may also be included to describe what the query param is used for.\nIn the future this may be used for generating OpenAPI documentation for the related parameter.\n\nA non-nilable type denotes it as required.  If the parameter is not supplied, and no default value is assigned, an `ART::Exceptions::BadRequest` exception is raised.\n\n```\nclass ExampleController < ART::Controller\n  @[ARTA::Get(\"/\")]\n  @[ARTA::QueryParam(\"page\", description: \"What page of results to return.\")] # The name can also be supplied as a named argument like `@[ARTA::QueryParam(name: \"page\")]`.\n  def index(page : Int32) : Int32\n    page\n  end\nend\n\nART.run\n\n# GET /?page=2 # => 2\n# GET /        # => {\"code\":422,\"message\":\"Parameter 'page' of value '' violated a constraint: 'This value should not be null.'\\n\"}\n```\n\n### Key\n\nIn the case of wanting the controller action argument to have a different name than the actual query parameter, the `key` option can be used.\n\n```\nclass ExampleController < ART::Controller\n  @[ARTA::Get(\"/\")]\n  @[ARTA::QueryParam(\"foo\", key: \"bar\")]\n  def index(foo : String) : String\n    foo\n  end\nend\n\nART.run\n\n# GET /?bar=value # => \"value\"\n```\n\n### Optional\n\nA nilable type denotes it as optional.  If the parameter is not supplied, and no default value is assigned, it is `nil`.\n\n```\nclass ExampleController < ART::Controller\n  @[ARTA::Get(\"/\")]\n  @[ARTA::QueryParam(\"page\")] # The name can also be supplied as a named argument like `@[ARTA::QueryParam(name: \"page\")]`.\n  def index(page : Int32?) : Int32?\n    page\n  end\nend\n\nART.run\n\n# GET /          # => null\n# GET /?page=2   # => 2\n# GET /?page=bar # => {\"code\":400,\"message\":\"Required parameter 'page' with value 'bar' could not be converted into a valid '(Int32 | Nil)'.\"}\n```\n\n### Strict\n\nBy default, parameters are validated strictly; this means an `ART::Exceptions::BadRequest` exception is raised when the value is considered invalid.\nSuch as if the value does not satisfy the parameter's [requirements](#requirements), it's a required parameter and was not provided,\nor could not be converted into the desired type.\n\nAn example of this is in the first [usage](#usage) example.  A 400 bad request was returned when the required parameter was not provided.\n\nWhen strict mode is disabled, the default value (or `nil`) will be used instead of raising an exception if the actual value is invalid.\n\nNOTE: When setting `strict: false`, the related controller action argument must be nilable or have a default value.\n\n```\nclass ExampleController < ART::Controller\n  @[ARTA::Get(\"/\")]\n  @[ARTA::QueryParam(\"page\", strict: false)]\n  def index(page : Int32?) : Int32?\n    page\n  end\nend\n\nART.run\n\n# GET /          # => null\n# GET /?page=2   # => 2\n# GET /?page=bar # => null\n```\n\nIf strict mode is enabled _AND_ the argument is nilable, the value will only be checked strictly if it is provided\nand does not meet the parameter's requirements, or could not be converted.\nIf it was not provided at all, `nil`, or the default value will be used.\n\n### Requirements\n\nIt's a common practice to validate incoming values before they reach the controller action.\n`ARTA::QueryParam` supports doing just that.\nIt supports validating the value against a `Regex` pattern, an `AVD::Constraint`, or an array of `AVD::Constraint`s.\n\nThe value is only considered valid if it satisfies the defined requirements.\nIf the value does not match, and [strict](#strict) mode is enabled, a 422 response is returned;\notherwise `nil`, or the default value is used instead.\n\n#### Regex\n\nThe most basic form of validation is a `Regex` pattern that asserts a value matches the provided pattern.\n\n```\nclass ExampleController < ART::Controller\n  @[ARTA::Get(\"/\")]\n  @[ARTA::QueryParam(\"page\", requirements: /\\d{2}/)]\n  def index(page : Int32) : Int32\n    page\n  end\nend\n\nART.run\n\n# GET /          # => {\"code\":422,\"message\":\"Parameter 'page' of value '' violated a constraint: 'This value should not be null.'\\n\"}\n# GET /?page=10  # => 10\n# GET /?page=bar # => {\"code\":400,\"message\":\"Required parameter 'page' with value 'bar' could not be converted into a valid 'Int32'.\"}\n# GET /?page=5   # => {\"code\":422,\"message\":\"Parameter 'page' of value '5' violated a constraint: 'Parameter 'page' value does not match requirements: (?-imsx:^(?-imsx:\\\\d{2})$)'\\n\"}\n```\n\n#### Constraint(s)\n\nIn some cases validating a value may require more logic than is possible via a regular expression.\nA parameter's requirements can also be set to a specific, or array of, `Assert` `AVD::Constraint` annotations.\n\n```\nclass ExampleController < ART::Controller\n  @[ARTA::Get(\"/\")]\n  @[ARTA::QueryParam(\"page\", requirements: @[Assert::PositiveOrZero])]\n  def index(page : Int32) : Int32\n    page\n  end\nend\n\nART.run\n\n# GET /?page=2  # => 2\n# GET /?page=-5 # => {\"code\":422,\"message\":\"Parameter 'page' of value '-9' violated a constraint: 'This value should be positive or zero.'\\n\"}\n```\n\nSee the [external documentation](https://athenaframework.org/components/validator/) for more information.\n\n### Map\n\nBy default, the parameter's requirements are applied against the resulting value, which makes sense when working with scalar values.\nHowever, if the parameter is an `Array` of values, then it may make more sense to run the validations against each item in that array,\nas opposed to on the whole array itself.\n\nThis behavior can be enabled by using the `map: true` option, which essentially wraps all the requirements within an `AVD::Constraints::All` constraint.\n\n```\nclass ExampleController < ART::Controller\n  @[ARTA::Get(\"/\")]\n  @[ARTA::QueryParam(\"ids\", map: true, requirements: [@[Assert::Positive], @[Assert::Range(-3..10)]])]\n  def index(ids : Array(Int32)) : Array(Int32)\n    ids\n  end\nend\n\nART.run\n\n# GET /               # => {\"code\":422,\"message\":\"Parameter 'ids' of value '' violated a constraint: 'This value should not be null.'\\n\"}\n# GET /?ids=10&ids=2  # => [10,2]\n# GET /?ids=10&ids=-2 # => {\"code\":422,\"message\":\"Parameter 'ids[1]' of value '-2' violated a constraint: 'This value should be positive.'\\n\"}\n```\n\n### Incompatibles\n\nIncompatibles represent the parameters that can't be present at the same time.\n\n```\nclass ExampleController < ART::Controller\n  @[ARTA::Get(\"/\")]\n  @[ARTA::QueryParam(\"bar\")]\n  @[ARTA::QueryParam(\"foo\", incompatibles: [\"bar\"])]\n  def index(foo : String?, bar : String?) : String\n    \"#{foo}-#{bar}\"\n  end\nend\n\nART.run\n\n# GET /?bar=bar         # => \"-bar\"\n# GET /?foo=foo         # => \"foo-\"\n# GET /?foo=foo&bar=bar # => {\"code\":400,\"message\":\"Parameter 'foo' is incompatible with parameter 'bar'.\"}\n```\n\n### Param Converters\n\nWhile Athena is able to auto convert query parameters from their `String` representation to `Bool`, or `Number` types, it is unable to do that for more complex types, such as `Time`.\nIn such cases an `ART::ParamConverterInterface` is required.\n\nFor simple converters that do not require any additional configuration, you can just specify the `ART::ParamConverterInterface.class` you wish to use for this query parameter.\nDefault and nilable values work as they do when not using a converter.\n\n```\nclass ExampleController < ART::Controller\n  @[ARTA::QueryParam(\"start_time\", converter: ART::TimeConverter)]\n  @[ARTA::Get(\"/time\")]\n  def time(start_time : Time = Time.utc) : String\n    \"Starting at: #{start_time}\"\n  end\nend\n\nART.run\n\n# GET /time                                 # => \"Starting at: 2020-11-25 20:29:55 UTC\"\n# GET /time?start_time=2020-04-07T12:34:56Z # => \"Starting at: 2020-04-07 12:34:56 UTC\"\n```\n\n#### Extra Configuration\n\nIn some cases a param converter may require [additional configuration][Athena::Routing::ParamConverterInterface].\nIn this case a `NamedTuple` may be provided as the value of `converter`.\nThe named tuple must contain a `name` key that represents the `ART::ParamConverterInterface.class` you wish to use for this query parameter.\nAny additional key/value pairs will be passed to the param converter.\n\n```\nclass ExampleController < ART::Controller\n  @[ARTA::QueryParam(\"start_time\", converter: {name: ART::TimeConverter, format: \"%Y--%m//%d  %T\"})]\n  @[ARTA::Get(\"/time\")]\n  def time(start_time : Time) : String\n    \"Starting at: #{start_time}\"\n  end\nend\n\nART.run\n\n# GET /time?start_time=\"2020--04//07  12:34:56\" # => \"Starting at: 2020-04-07 12:34:56 UTC\"\n```\n\nNOTE:  The dedicated `ARTA::ParamConverter` annotation may be used as well, just be sure to give it and the query parameter the same name.","summary":"<p>Used to define (and configure) a query parameter tied to a given argument.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Annotations/RequestParam","path":"Athena/Routing/Annotations/RequestParam.html","kind":"annotation","full_name":"Athena::Routing::Annotations::RequestParam","name":"RequestParam","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/annotations.cr","line_number":425,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/annotations.cr#L425"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Annotations","kind":"module","full_name":"Athena::Routing::Annotations","name":"Annotations"},"doc":"Represents a form data request parameter.\n\nSee `ARTA::QueryParam` for configuration options/arguments.\n\nNOTE: The entire request body is consumed to parse the form data.\n\n```\nclass ExampleController < ART::Controller\n  @[ARTA::Post(path: \"/login\")]\n  @[ARTA::RequestParam(\"username\")]\n  @[ARTA::RequestParam(\"password\")]\n  def login(username : String, password : String) : Nil\n    # ...\n  end\nend\n\nART.run\n\n# POST /login, body: \"username=George&password=abc123\"\n```","summary":"<p>Represents a form data request parameter.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Annotations/Route","path":"Athena/Routing/Annotations/Route.html","kind":"annotation","full_name":"Athena::Routing::Annotations::Route","name":"Route","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/annotations.cr","line_number":443,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/annotations.cr#L443"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Annotations","kind":"module","full_name":"Athena::Routing::Annotations","name":"Annotations"},"doc":"Defines an endpoint with an arbitrary `HTTP` method.  Can be used for defining non-standard `HTTP` method routes.\n\n## Fields\n\n* path : `String` - The path for the endpoint, may also be provided as the first positional argument.\n* name : `String` - The name of the route.  Defaults to controller name + method name down snake-cased.\n* method : `String` - The `HTTP` method to use for the endpoint.\n* constraints : `Hash(String, Regex)` - A mapping between a route's path parameters and its constraints.\n\n## Example\n\n```\n@[ARTA::Route(\"/some/path\", method: \"TRACE\")]\ndef trace_route : Nil\nend\n```","summary":"<p>Defines an endpoint with an arbitrary <code>HTTP</code> method.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Annotations/Unlink","path":"Athena/Routing/Annotations/Unlink.html","kind":"annotation","full_name":"Athena::Routing::Annotations::Unlink","name":"Unlink","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/annotations.cr","line_number":460,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/annotations.cr#L460"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Annotations","kind":"module","full_name":"Athena::Routing::Annotations","name":"Annotations"},"doc":"Defines an `UNLINK` endpoint.\n\n## Fields\n\n* path : `String` - The path for the endpoint, may also be provided as the first positional argument.\n* name : `String` - The name of the route.  Defaults to controller name + method name down snake-cased.\n* constraints : `Hash(String, Regex)` - A mapping between a route's path parameters and its constraints.\n\n## Example\n\n```\n@[ARTA::Unlink(path: \"/users/:id\")]\ndef unlink_user(id : Int32) : Nil\nend\n```","summary":"<p>Defines an <code>UNLINK</code> endpoint.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Annotations/View","path":"Athena/Routing/Annotations/View.html","kind":"annotation","full_name":"Athena::Routing::Annotations::View","name":"View","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/annotations.cr","line_number":486,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/annotations.cr#L486"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Annotations","kind":"module","full_name":"Athena::Routing::Annotations","name":"Annotations"},"doc":"Configures how the endpoint should be rendered.\n\nSee `ART::Action::ViewContext`.\n\n## Fields\n\n* status : `HTTP::Status` - The `HTTP::Status` the endpoint should return.  Defaults to `HTTP::Status::OK` (200).\n* serialization_groups : `Array(String)?` - The serialization groups to use for this route as part of `ASR::ExclusionStrategies::Groups`.\n* validation_groups : `Array(String)?` - Groups that should be used to validate any objects related to this route; see `AVD::Constraint@validation-groups`.\n* emit_nil : `Bool` - If `nil` values should be serialized.  Defaults to `false`.\n\n## Example\n\n```\n@[ARTA::Post(path: \"/publish/:id\")]\n@[ARTA::View(status: :accepted, serialization_groups: [\"default\", \"detailed\"])]\ndef publish(id : Int32) : Article\n  article = Article.find id\n  article.published = true\n  article\nend\n```\n\nSee the [external documentation](https://athenaframework.org/components/serializer/) for more information.","summary":"<p>Configures how the endpoint should be rendered.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Routing/Arguments","path":"Athena/Routing/Arguments.html","kind":"module","full_name":"Athena::Routing::Arguments","name":"Arguments","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/arguments/argument_metadata.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/arguments/argument_metadata.cr#L2"},{"filename":"src/athena.cr","line_number":81,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/athena.cr#L81"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Namespace for types related to controller action arguments.\n\nSee `ART::Arguments::ArgumentMetadata`.","summary":"<p>Namespace for types related to controller action arguments.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Routing/Arguments/ArgumentMetadata","path":"Athena/Routing/Arguments/ArgumentMetadata.html","kind":"struct","full_name":"Athena::Routing::Arguments::ArgumentMetadata(T)","name":"ArgumentMetadata","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/arguments/argument_metadata.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/arguments/argument_metadata.cr#L2"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Arguments","kind":"module","full_name":"Athena::Routing::Arguments","name":"Arguments"},"doc":"Represents a controller action argument.  Stores metadata associated with it, such as its name, type, and default value if any.","summary":"<p>Represents a controller action argument.</p>","class_methods":[],"constructors":[{"id":"new(name:String,has_default:Bool,is_nilable:Bool=false,default:T?=nil,type:T.class=T)-class-method","html_id":"new(name:String,has_default:Bool,is_nilable:Bool=false,default:T?=nil,type:T.class=T)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"has_default","doc":null,"default_value":"","external_name":"has_default","restriction":"Bool"},{"name":"is_nilable","doc":null,"default_value":"false","external_name":"is_nilable","restriction":"Bool"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"T | ::Nil"},{"name":"type","doc":null,"default_value":"T","external_name":"type","restriction":"T.class"}],"args_string":"(name : String, has_default : Bool, is_nilable : Bool = <span class=\"n\">false</span>, default : T? = <span class=\"n\">nil</span>, type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">T</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/arguments/argument_metadata.cr#L20","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"has_default","doc":null,"default_value":"","external_name":"has_default","restriction":"Bool"},{"name":"is_nilable","doc":null,"default_value":"false","external_name":"is_nilable","restriction":"Bool"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"T | ::Nil"},{"name":"type","doc":null,"default_value":"T","external_name":"type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = ArgumentMetadata(T).allocate\n_.initialize(name, has_default, is_nilable, default, type)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"default:T?-instance-method","html_id":"default:T?-instance-method","name":"default","doc":"The default value of the argument, if any.\n\nSee `ART::Arguments::Resolvers::DefaultValue`.","summary":"<p>The default value of the argument, if any.</p>","abstract":false,"args":[],"args_string":" : T?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/arguments/argument_metadata.cr#L9","def":{"name":"default","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T | ::Nil","visibility":"Public","body":"@default"}},{"id":"has_default?:Bool-instance-method","html_id":"has_default?:Bool-instance-method","name":"has_default?","doc":"If this argument has a default value.","summary":"<p>If this argument has a default value.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/arguments/argument_metadata.cr#L15","def":{"name":"has_default?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@has_default"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":"The name of the argument.","summary":"<p>The name of the argument.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/arguments/argument_metadata.cr#L4","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}},{"id":"nilable?:Bool-instance-method","html_id":"nilable?:Bool-instance-method","name":"nilable?","doc":"If `nil` is a valid argument for the argument.","summary":"<p>If <code>nil</code> is a valid argument for the argument.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/arguments/argument_metadata.cr#L18","def":{"name":"nilable?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@nilable"}},{"id":"type:T.class-instance-method","html_id":"type:T.class-instance-method","name":"type","doc":"The type of the parameter, i.e. what its type restriction is.","summary":"<p>The type of the parameter, i.e.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">T</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/arguments/argument_metadata.cr#L12","def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T.class","visibility":"Public","body":"@type"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Arguments/ArgumentResolver","path":"Athena/Routing/Arguments/ArgumentResolver.html","kind":"struct","full_name":"Athena::Routing::Arguments::ArgumentResolver","name":"ArgumentResolver","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Routing/Arguments/ArgumentResolverInterface","kind":"module","full_name":"Athena::Routing::Arguments::ArgumentResolverInterface","name":"ArgumentResolverInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/arguments/argument_resolver.cr","line_number":21,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/arguments/argument_resolver.cr#L21"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Routing/Arguments/ArgumentResolverInterface","kind":"module","full_name":"Athena::Routing::Arguments::ArgumentResolverInterface","name":"ArgumentResolverInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Arguments","kind":"module","full_name":"Athena::Routing::Arguments","name":"Arguments"},"doc":"The default implementation of `ART::Arguments::ArgumentResolverInterface`.","summary":"<p>The default implementation of <code><a href=\"../../../Athena/Routing/Arguments/ArgumentResolverInterface.html\">ART::Arguments::ArgumentResolverInterface</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(argument_resolvers:Array(Athena::Routing::Arguments::Resolvers::ArgumentValueResolverInterface))-class-method","html_id":"new(argument_resolvers:Array(Athena::Routing::Arguments::Resolvers::ArgumentValueResolverInterface))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"argument_resolvers","doc":null,"default_value":"","external_name":"argument_resolvers","restriction":"Array(Athena::Routing::Arguments::Resolvers::ArgumentValueResolverInterface)"}],"args_string":"(argument_resolvers : Array(Athena::Routing::Arguments::Resolvers::ArgumentValueResolverInterface))","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/arguments/argument_resolver.cr#L24","def":{"name":"new","args":[{"name":"argument_resolvers","doc":null,"default_value":"","external_name":"argument_resolvers","restriction":"Array(Athena::Routing::Arguments::Resolvers::ArgumentValueResolverInterface)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(argument_resolvers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"get_arguments(request:HTTP::Request,route:ART::ActionBase):Array-instance-method","html_id":"get_arguments(request:HTTP::Request,route:ART::ActionBase):Array-instance-method","name":"get_arguments","doc":"Returns an array of arguments resolved from the provided *request* for the given *route*.","summary":"<p>Returns an array of arguments resolved from the provided <em>request</em> for the given <em>route</em>.</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":"ART::ActionBase"}],"args_string":"(request : HTTP::Request, route : ART::ActionBase) : Array","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/arguments/argument_resolver.cr#L27","def":{"name":"get_arguments","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":"ART::ActionBase"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array","visibility":"Public","body":"route.arguments.map_first_type do |param|\n  if resolver = @argument_resolvers.find(&.supports?(request, param))\n    resolver.resolve(request, param)\n  else\n    raise(RuntimeError.new(\"Could not resolve required argument '#{param.name}' for '#{route.controller}##{route.name}'.\"))\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Arguments/ArgumentResolverInterface","path":"Athena/Routing/Arguments/ArgumentResolverInterface.html","kind":"module","full_name":"Athena::Routing::Arguments::ArgumentResolverInterface","name":"ArgumentResolverInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/arguments/argument_resolver_interface.cr","line_number":4,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/arguments/argument_resolver_interface.cr#L4"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Routing/Arguments/ArgumentResolver","kind":"struct","full_name":"Athena::Routing::Arguments::ArgumentResolver","name":"ArgumentResolver"}],"namespace":{"html_id":"athena/Athena/Routing/Arguments","kind":"module","full_name":"Athena::Routing::Arguments","name":"Arguments"},"doc":"Responsible for resolving the arguments that will be passed to a controller action.\n\nSee the [external documentation](https://athenaframework.org/components/#argument-resolution) for more information.","summary":"<p>Responsible for resolving the arguments that will be passed to a controller action.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"get_arguments(request:HTTP::Request,route:ART::ActionBase):Array-instance-method","html_id":"get_arguments(request:HTTP::Request,route:ART::ActionBase):Array-instance-method","name":"get_arguments","doc":"Returns an array of arguments resolved from the provided *request* for the given *route*.","summary":"<p>Returns an array of arguments resolved from the provided <em>request</em> for the given <em>route</em>.</p>","abstract":true,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":"ART::ActionBase"}],"args_string":"(request : HTTP::Request, route : ART::ActionBase) : Array","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/arguments/argument_resolver_interface.cr#L6","def":{"name":"get_arguments","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":"ART::ActionBase"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Arguments/Resolvers","path":"Athena/Routing/Arguments/Resolvers.html","kind":"module","full_name":"Athena::Routing::Arguments::Resolvers","name":"Resolvers","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/arguments/resolvers/argument_value_resolver_interface.cr","line_number":26,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/arguments/resolvers/argument_value_resolver_interface.cr#L26"},{"filename":"src/athena.cr","line_number":90,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/athena.cr#L90"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"TAG","name":"TAG","value":"\"athena.argument_value_resolver\"","doc":"The tag name for `ART::Arguments::Resolvers::ArgumentValueResolverInterface`s.","summary":"<p>The tag name for <code><a href=\"../../../Athena/Routing/Arguments/Resolvers/ArgumentValueResolverInterface.html\">ART::Arguments::Resolvers::ArgumentValueResolverInterface</a></code>s.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Arguments","kind":"module","full_name":"Athena::Routing::Arguments","name":"Arguments"},"doc":"The default `ART::Arguments::Resolvers::ArgumentValueResolverInterface`s that will handle resolving controller action arguments from a request (or other source).\nCustom argument value resolvers can also be defined, see `ART::Arguments::Resolvers::ArgumentValueResolverInterface`.\n\nNOTE: In order for `Athena::Routing` to pick up your custom value resolvers, be sure to `ADI::Register` it as a service, and tag it as `ART::Arguments::Resolvers::TAG`.\nA `priority` field can also be optionally included in the annotation, the higher the value the sooner in the array it'll be when injected.\n\nSee each resolver for more detailed information.","summary":"<p>The default <code><a href=\"../../../Athena/Routing/Arguments/Resolvers/ArgumentValueResolverInterface.html\">ART::Arguments::Resolvers::ArgumentValueResolverInterface</a></code>s that will handle resolving controller action arguments from a request (or other source).</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Routing/Arguments/Resolvers/ArgumentValueResolverInterface","path":"Athena/Routing/Arguments/Resolvers/ArgumentValueResolverInterface.html","kind":"module","full_name":"Athena::Routing::Arguments::Resolvers::ArgumentValueResolverInterface","name":"ArgumentValueResolverInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/arguments/resolvers/argument_value_resolver_interface.cr","line_number":26,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/arguments/resolvers/argument_value_resolver_interface.cr#L26"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Routing/Arguments/Resolvers/DefaultValue","kind":"struct","full_name":"Athena::Routing::Arguments::Resolvers::DefaultValue","name":"DefaultValue"},{"html_id":"athena/Athena/Routing/Arguments/Resolvers/Request","kind":"struct","full_name":"Athena::Routing::Arguments::Resolvers::Request","name":"Request"},{"html_id":"athena/Athena/Routing/Arguments/Resolvers/RequestAttribute","kind":"struct","full_name":"Athena::Routing::Arguments::Resolvers::RequestAttribute","name":"RequestAttribute"}],"namespace":{"html_id":"athena/Athena/Routing/Arguments/Resolvers","kind":"module","full_name":"Athena::Routing::Arguments::Resolvers","name":"Resolvers"},"doc":"Argument value resolvers handle resolving the arguments for a controller action from a request, or other source.\n\nCustom resolvers can be defined by creating a service that implements this interface, and is tagged with `ART::Arguments::Resolvers::TAG`,\noptionally with a priority to determine the order in which the resolvers are executed.\n\n```\n@[ADI::Register(tags: [{name: ART::Arguments::Resolvers::TAG, priority: 10}])]\nstruct CustomResolver\n  include Athena::Routing::Arguments::Resolvers::ArgumentValueResolverInterface\n\n  # :inherit:\n  def supports?(request : HTTP::Request, argument : ART::Arguments::ArgumentMetadata) : Bool\n    # Define the logic that determines if `self` is able to resolve a value for the given request/argument.\n    # This resolver would handle resolving a value for action arguments whose type is `MyCustomType`.\n    argument.type == MyCustomType\n  end\n\n  # :inherit:\n  def resolve(request : HTTP::Request, argument : ART::Arguments::ArgumentMetadata)\n    # Return the resolved value.  It could either come from the request itself, an injected service, or hardcoded.\n    # `#resolve` is only executed if `#supports?` returns `true`.\n    MyCustomType.new \"foo\"\n  end\nend\n```","summary":"<p>Argument value resolvers handle resolving the arguments for a controller action from a request, or other source.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"resolve(request:HTTP::Request,argument:ART::Arguments::ArgumentMetadata)-instance-method","html_id":"resolve(request:HTTP::Request,argument:ART::Arguments::ArgumentMetadata)-instance-method","name":"resolve","doc":"Returns a value resolved from the provided *request* and *argument*.","summary":"<p>Returns a value resolved from the provided <em>request</em> and <em>argument</em>.</p>","abstract":true,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"argument","doc":null,"default_value":"","external_name":"argument","restriction":"ART::Arguments::ArgumentMetadata"}],"args_string":"(request : HTTP::Request, argument : ART::Arguments::ArgumentMetadata)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/arguments/resolvers/argument_value_resolver_interface.cr#L31","def":{"name":"resolve","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"argument","doc":null,"default_value":"","external_name":"argument","restriction":"ART::Arguments::ArgumentMetadata"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"supports?(request:HTTP::Request,argument:ART::Arguments::ArgumentMetadata):Bool-instance-method","html_id":"supports?(request:HTTP::Request,argument:ART::Arguments::ArgumentMetadata):Bool-instance-method","name":"supports?","doc":"Returns `true` if `self` is able to resolve a value from the provided *request* and *argument*.","summary":"<p>Returns <code>true</code> if <code>self</code> is able to resolve a value from the provided <em>request</em> and <em>argument</em>.</p>","abstract":true,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"argument","doc":null,"default_value":"","external_name":"argument","restriction":"ART::Arguments::ArgumentMetadata"}],"args_string":"(request : HTTP::Request, argument : ART::Arguments::ArgumentMetadata) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/arguments/resolvers/argument_value_resolver_interface.cr#L28","def":{"name":"supports?","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"argument","doc":null,"default_value":"","external_name":"argument","restriction":"ART::Arguments::ArgumentMetadata"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Arguments/Resolvers/DefaultValue","path":"Athena/Routing/Arguments/Resolvers/DefaultValue.html","kind":"struct","full_name":"Athena::Routing::Arguments::Resolvers::DefaultValue","name":"DefaultValue","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Routing/Arguments/Resolvers/ArgumentValueResolverInterface","kind":"module","full_name":"Athena::Routing::Arguments::Resolvers::ArgumentValueResolverInterface","name":"ArgumentValueResolverInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/arguments/resolvers/default_value_resolver.cr","line_number":12,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/arguments/resolvers/default_value_resolver.cr#L12"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Routing/Arguments/Resolvers/ArgumentValueResolverInterface","kind":"module","full_name":"Athena::Routing::Arguments::Resolvers::ArgumentValueResolverInterface","name":"ArgumentValueResolverInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Arguments/Resolvers","kind":"module","full_name":"Athena::Routing::Arguments::Resolvers","name":"Resolvers"},"doc":"Handles resolving an argument's default value if no other value was able to be resolved.\n\n```\n@[ARTA::Get(\"/\")]\n@[ARTA::QueryParam(\"query_param\")]\ndef get_query_param(query_param : Int32 = 123) : Int32\n  # `query_param` would be `123` if the request does not include a query parameter named `query_param`.\n  query_param\nend\n```","summary":"<p>Handles resolving an argument's default value if no other value was able to be resolved.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/arguments/resolvers/default_value_resolver.cr#L12","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"resolve(request:HTTP::Request,argument:ART::Arguments::ArgumentMetadata)-instance-method","html_id":"resolve(request:HTTP::Request,argument:ART::Arguments::ArgumentMetadata)-instance-method","name":"resolve","doc":"Returns a value resolved from the provided *request* and *argument*.","summary":"<p>Returns a value resolved from the provided <em>request</em> and <em>argument</em>.</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"argument","doc":null,"default_value":"","external_name":"argument","restriction":"ART::Arguments::ArgumentMetadata"}],"args_string":"(request : HTTP::Request, argument : ART::Arguments::ArgumentMetadata)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/arguments/resolvers/default_value_resolver.cr#L21","def":{"name":"resolve","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"argument","doc":null,"default_value":"","external_name":"argument","restriction":"ART::Arguments::ArgumentMetadata"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"argument.has_default? ? argument.default : nil"}},{"id":"supports?(request:HTTP::Request,argument:ART::Arguments::ArgumentMetadata):Bool-instance-method","html_id":"supports?(request:HTTP::Request,argument:ART::Arguments::ArgumentMetadata):Bool-instance-method","name":"supports?","doc":"Returns `true` if `self` is able to resolve a value from the provided *request* and *argument*.","summary":"<p>Returns <code>true</code> if <code>self</code> is able to resolve a value from the provided <em>request</em> and <em>argument</em>.</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"argument","doc":null,"default_value":"","external_name":"argument","restriction":"ART::Arguments::ArgumentMetadata"}],"args_string":"(request : HTTP::Request, argument : ART::Arguments::ArgumentMetadata) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/arguments/resolvers/default_value_resolver.cr#L16","def":{"name":"supports?","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"argument","doc":null,"default_value":"","external_name":"argument","restriction":"ART::Arguments::ArgumentMetadata"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"argument.has_default? || ((argument.type != Nil) && argument.nilable?)"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Arguments/Resolvers/Request","path":"Athena/Routing/Arguments/Resolvers/Request.html","kind":"struct","full_name":"Athena::Routing::Arguments::Resolvers::Request","name":"Request","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Routing/Arguments/Resolvers/ArgumentValueResolverInterface","kind":"module","full_name":"Athena::Routing::Arguments::Resolvers::ArgumentValueResolverInterface","name":"ArgumentValueResolverInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/arguments/resolvers/request_value_resolver.cr","line_number":10,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/arguments/resolvers/request_value_resolver.cr#L10"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Routing/Arguments/Resolvers/ArgumentValueResolverInterface","kind":"module","full_name":"Athena::Routing::Arguments::Resolvers::ArgumentValueResolverInterface","name":"ArgumentValueResolverInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Arguments/Resolvers","kind":"module","full_name":"Athena::Routing::Arguments::Resolvers","name":"Resolvers"},"doc":"Handles resolving a value for action arguments typed as `HTTP::Request`.\n\n```\n@[ARTA::Get(\"/\")]\ndef get_request_path(request : HTTP::Request) : String\n  request.path\nend\n```","summary":"<p>Handles resolving a value for action arguments typed as <code><a href=\"../../../../HTTP/Request.html\">HTTP::Request</a></code>.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/arguments/resolvers/request_value_resolver.cr#L10","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"resolve(request:HTTP::Request,argument:ART::Arguments::ArgumentMetadata)-instance-method","html_id":"resolve(request:HTTP::Request,argument:ART::Arguments::ArgumentMetadata)-instance-method","name":"resolve","doc":"Returns a value resolved from the provided *request* and *argument*.","summary":"<p>Returns a value resolved from the provided <em>request</em> and <em>argument</em>.</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"argument","doc":null,"default_value":"","external_name":"argument","restriction":"ART::Arguments::ArgumentMetadata"}],"args_string":"(request : HTTP::Request, argument : ART::Arguments::ArgumentMetadata)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/arguments/resolvers/request_value_resolver.cr#L19","def":{"name":"resolve","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"argument","doc":null,"default_value":"","external_name":"argument","restriction":"ART::Arguments::ArgumentMetadata"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"request"}},{"id":"supports?(request:HTTP::Request,argument:ART::Arguments::ArgumentMetadata):Bool-instance-method","html_id":"supports?(request:HTTP::Request,argument:ART::Arguments::ArgumentMetadata):Bool-instance-method","name":"supports?","doc":"Returns `true` if `self` is able to resolve a value from the provided *request* and *argument*.","summary":"<p>Returns <code>true</code> if <code>self</code> is able to resolve a value from the provided <em>request</em> and <em>argument</em>.</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"argument","doc":null,"default_value":"","external_name":"argument","restriction":"ART::Arguments::ArgumentMetadata"}],"args_string":"(request : HTTP::Request, argument : ART::Arguments::ArgumentMetadata) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/arguments/resolvers/request_value_resolver.cr#L14","def":{"name":"supports?","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"argument","doc":null,"default_value":"","external_name":"argument","restriction":"ART::Arguments::ArgumentMetadata"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"argument.type <= HTTP::Request"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Arguments/Resolvers/RequestAttribute","path":"Athena/Routing/Arguments/Resolvers/RequestAttribute.html","kind":"struct","full_name":"Athena::Routing::Arguments::Resolvers::RequestAttribute","name":"RequestAttribute","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Routing/Arguments/Resolvers/ArgumentValueResolverInterface","kind":"module","full_name":"Athena::Routing::Arguments::Resolvers::ArgumentValueResolverInterface","name":"ArgumentValueResolverInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/arguments/resolvers/request_attribute_value_resolver.cr","line_number":11,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/arguments/resolvers/request_attribute_value_resolver.cr#L11"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Routing/Arguments/Resolvers/ArgumentValueResolverInterface","kind":"module","full_name":"Athena::Routing::Arguments::Resolvers::ArgumentValueResolverInterface","name":"ArgumentValueResolverInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Arguments/Resolvers","kind":"module","full_name":"Athena::Routing::Arguments::Resolvers","name":"Resolvers"},"doc":"Handles resolving a value that is stored in the request's `ART::ParameterBag`.\nThis includes any path/query parameters, or custom types values stored via an `AED::EventListenerInterface`.\n\n```\n@[ARTA::Get(\"/:id\")]\ndef get_id(id : Int32) : Int32\n  id\nend\n```","summary":"<p>Handles resolving a value that is stored in the request's <code><a href=\"../../../../Athena/Routing/ParameterBag.html\">ART::ParameterBag</a></code>.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/arguments/resolvers/request_attribute_value_resolver.cr#L11","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"resolve(request:HTTP::Request,argument:ART::Arguments::ArgumentMetadata)-instance-method","html_id":"resolve(request:HTTP::Request,argument:ART::Arguments::ArgumentMetadata)-instance-method","name":"resolve","doc":"Returns a value resolved from the provided *request* and *argument*.","summary":"<p>Returns a value resolved from the provided <em>request</em> and <em>argument</em>.</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"argument","doc":null,"default_value":"","external_name":"argument","restriction":"ART::Arguments::ArgumentMetadata"}],"args_string":"(request : HTTP::Request, argument : ART::Arguments::ArgumentMetadata)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/arguments/resolvers/request_attribute_value_resolver.cr#L20","def":{"name":"resolve","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"argument","doc":null,"default_value":"","external_name":"argument","restriction":"ART::Arguments::ArgumentMetadata"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  value = request.attributes.get(argument.name)\n  argument.type.from_parameter(value)\nrescue ex : ArgumentError\n  raise(ART::Exceptions::BadRequest.new(\"Required parameter '#{argument.name}' with value '#{value}' could not be converted into a valid '#{argument.type}'\", cause: ex))\nend"}},{"id":"supports?(request:HTTP::Request,argument:ART::Arguments::ArgumentMetadata):Bool-instance-method","html_id":"supports?(request:HTTP::Request,argument:ART::Arguments::ArgumentMetadata):Bool-instance-method","name":"supports?","doc":"Returns `true` if `self` is able to resolve a value from the provided *request* and *argument*.","summary":"<p>Returns <code>true</code> if <code>self</code> is able to resolve a value from the provided <em>request</em> and <em>argument</em>.</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"argument","doc":null,"default_value":"","external_name":"argument","restriction":"ART::Arguments::ArgumentMetadata"}],"args_string":"(request : HTTP::Request, argument : ART::Arguments::ArgumentMetadata) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/arguments/resolvers/request_attribute_value_resolver.cr#L15","def":{"name":"supports?","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"argument","doc":null,"default_value":"","external_name":"argument","restriction":"ART::Arguments::ArgumentMetadata"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"request.attributes.has?(argument.name)"}}],"macros":[],"types":[]}]}]},{"html_id":"athena/Athena/Routing/Config","path":"Athena/Routing/Config.html","kind":"struct","full_name":"Athena::Routing::Config","name":"Config","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"},{"html_id":"athena/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"athena/Athena/Config/Configuration","kind":"module","full_name":"Athena::Config::Configuration","name":"Configuration"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/config/routing_config.cr","line_number":6,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/config/routing_config.cr#L6"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Config/Configuration","kind":"module","full_name":"Athena::Config::Configuration","name":"Configuration"},{"html_id":"athena/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"athena/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Encompasses all configuration related to the `Athena::Routing` component.\n\nFor a higher level introduction to configuring Athena components, see `Athena::Config`.","summary":"<p>Encompasses all configuration related to the <code><a href=\"../../Athena/Routing.html\">Athena::Routing</a></code> component.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new_from_yaml_node(ctx, node)"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/config/routing_config.cr#L7","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"cors:ART::Config::CORS?-instance-method","html_id":"cors:ART::Config::CORS?-instance-method","name":"cors","doc":"Configuration related to `Athena::Routing::Listeners::CORS`.\n\nDisables the listener if not defined.","summary":"<p>Configuration related to <code><a href=\"../../Athena/Routing/Listeners/CORS.html\">Athena::Routing::Listeners::CORS</a></code>.</p>","abstract":false,"args":[],"args_string":" : ART::Config::CORS?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/config/routing_config.cr#L12","def":{"name":"cors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ART::Config::CORS | ::Nil","visibility":"Public","body":"@cors"}}],"macros":[],"types":[{"html_id":"athena/Athena/Routing/Config/CORS","path":"Athena/Routing/Config/CORS.html","kind":"struct","full_name":"Athena::Routing::Config::CORS","name":"CORS","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"},{"html_id":"athena/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"athena/Athena/Config/Configuration","kind":"module","full_name":"Athena::Config::Configuration","name":"Configuration"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/config/cors_config.cr","line_number":8,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/config/cors_config.cr#L8"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Config/Configuration","kind":"module","full_name":"Athena::Config::Configuration","name":"Configuration"},{"html_id":"athena/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"athena/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Config","kind":"struct","full_name":"Athena::Routing::Config","name":"Config"},"doc":"Configuration options for `ART::Listeners::CORS`.  If `ART::Config.cors` is not defined in your configuration file, the listener is disabled.\n\nTODO: Allow scoping CORS options to specific routes versus applying them to all routes.\n\nSee `ART::Config` and the [external documentation](https://athenaframework.org/components/config/#cors) for more information.","summary":"<p>Configuration options for <code><a href=\"../../../Athena/Routing/Listeners/CORS.html\">ART::Listeners::CORS</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new_from_yaml_node(ctx, node)"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/config/cors_config.cr#L9","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"allow_credentials:Bool-instance-method","html_id":"allow_credentials:Bool-instance-method","name":"allow_credentials","doc":"Indicates whether the request can be made using credentials.\n\nMaps to the `access-control-allow-credentials` header.","summary":"<p>Indicates whether the request can be made using credentials.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/config/cors_config.cr#L14","def":{"name":"allow_credentials","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@allow_credentials"}},{"id":"allow_headers:Array(String)-instance-method","html_id":"allow_headers:Array(String)-instance-method","name":"allow_headers","doc":"The header or headers that can be used when making the actual request.\n\nCan be set to `[\"*\"]` to allow any headers.\n\nmaps to the `access-control-allow-headers` header.","summary":"<p>The header or headers that can be used when making the actual request.</p>","abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/config/cors_config.cr#L28","def":{"name":"allow_headers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@allow_headers"}},{"id":"allow_methods:Array(String)-instance-method","html_id":"allow_methods:Array(String)-instance-method","name":"allow_methods","doc":"The method or methods allowed when accessing the resource.\n\nMaps to the `access-control-allow-methods` header.\nDefaults to the [CORS-safelisted methods](https://fetch.spec.whatwg.org/#cors-safelisted-method).","summary":"<p>The method or methods allowed when accessing the resource.</p>","abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/config/cors_config.cr#L34","def":{"name":"allow_methods","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@allow_methods"}},{"id":"allow_origin:Array(String)-instance-method","html_id":"allow_origin:Array(String)-instance-method","name":"allow_origin","doc":"A white-listed array of valid origins.\n\nCan be set to `[\"*\"]` to allow any origin.\n\nTODO: Allow `Regex` based origins.","summary":"<p>A white-listed array of valid origins.</p>","abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/config/cors_config.cr#L21","def":{"name":"allow_origin","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@allow_origin"}},{"id":"expose_headers:Array(String)-instance-method","html_id":"expose_headers:Array(String)-instance-method","name":"expose_headers","doc":"Array of headers that the browser is allowed to read from the response.\n\nMaps to the `access-control-expose-headers` header.","summary":"<p>Array of headers that the browser is allowed to read from the response.</p>","abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/config/cors_config.cr#L39","def":{"name":"expose_headers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@expose_headers"}},{"id":"max_age:Int32-instance-method","html_id":"max_age:Int32-instance-method","name":"max_age","doc":"Number of seconds that the results of a preflight request can be cached.\n\nMaps to the `access-control-max-age` header.","summary":"<p>Number of seconds that the results of a preflight request can be cached.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/config/cors_config.cr#L44","def":{"name":"max_age","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@max_age"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Routing/Controller","path":"Athena/Routing/Controller.html","kind":"class","full_name":"Athena::Routing::Controller","name":"Controller","abstract":true,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/controller.cr","line_number":129,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/controller.cr#L129"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"The core of any framework is routing; how a route is tied to an action.  Athena takes an annotation based approach; an annotation, such as `ARTA::Get` is applied to an instance method of a controller class,\nwhich will be executed when that endpoint receives a request.  The annotation includes the path as well as any constraints that a parameter must meet in order for the route to be invoked.\n\nAdditional annotations also exist for setting a query param or a param converter.  See `ARTA::QueryParam` and `ARTA::ParamConverter` respectively.\n\nChild controllers must inherit from `ART::Controller` (or an abstract child of it).  Each request gets its own instance of the controller to better allow for DI via `Athena::DependencyInjection`.\n\nA route action can either return an `ART::Response`, or some other type.  If an `ART::Response` is returned, then it is used directly.  Otherwise an `ART::Events::View` is emitted to convert\nthe action result into an `ART::Response`.  By default, `ART::Listeners::View` will JSON encode the value if it is not handled earlier by another listener.\n\n### Example\nThe following controller shows examples of the various routing features of Athena.  `ART::Controller` also defines various macro DSLs, such as `ART::Controller.get` to make defining routes\nseem more Sinatra/Kemal like.  See the documentation on the macros for more details.\n\n```\nrequire \"athena\"\nrequire \"mime\"\n\n# The `ARTA::Prefix` annotation can be applied to a controller to define a prefix to use for all routes within `self`.\n@[ARTA::Prefix(\"athena\")]\nclass TestController < ART::Controller\n  # A GET endpoint returning an `ART::Response`.\n  # Can be used to return raw data, such as HTML or CSS etc, in a one-off manor.\n  @[ARTA::Get(path: \"/index\")]\n  def index : ART::Response\n    ART::Response.new \"<h1>Welcome to my website!</h1>\", headers: HTTP::Headers{\"content-type\" => MIME.from_extension(\".html\")}\n  end\n\n  # A GET endpoint returning an `ART::StreamedResponse`.\n  # Can be used to stream the response content to the client; useful if the content is too large to fit into memory.\n  @[ARTA::Get(path: \"/users\")]\n  def users : ART::Response\n    ART::StreamedResponse.new headers: HTTP::Headers{\"content-type\" => \"application/json; charset=UTF-8\"} do |io|\n      User.all.to_json io\n    end\n  end\n\n  # A GET endpoint using a param converter to render a template.\n  #\n  # Assumes there is a `User` object that exposes their name, and an `ART::ParamConverterInterface` to provide the user with the provided *id*.\n  # ```\n  # # user.ecr\n  # Morning, <%= user.name %> it is currently <%= time %>.\n  # ```\n  @[ARTA::ParamConverter(\"user\", converter: SomeConverter)]\n  @[ARTA::Get(\"/wakeup/:id\")]\n  def wakeup(user : User) : ART::Response\n    # Template variables not supplied in the action's arguments must be defined manually\n    time = Time.utc\n\n    # Creates an `ART::Response` with the content of rendering the template, also sets the content type to `text/html`.\n    render \"user.ecr\"\n  end\n\n  # A GET endpoint with no params returning a `String`.\n  #\n  # Action return type restrictions are required.\n  @[ARTA::Get(\"/me\")]\n  def get_me : String\n    \"Jim\"\n  end\n\n  # A GET endpoint with no params returning `Nil`.\n  # `Nil` return types are returned with a status\n  # of 204 no content\n  @[ARTA::Get(\"/no_content\")]\n  def get_no_content : Nil\n    # Do stuff\n  end\n\n  # A GET endpoint with two `Int32` params returning an `Int32`.\n  #\n  # The parameters of a route _MUST_ match the arguments of the action.\n  # Type restrictions on action arguments are required.\n  @[ARTA::Get(\"/add/:val1/:val2\")]\n  def add(val1 : Int32, val2 : Int32) : Int32\n    val1 + val2\n  end\n\n  # A GET endpoint with an `String` route param, and a required string query param that must match the given pattern; returning a `String`.\n  #\n  # A non-nilable type denotes it as required.  If the parameter is not supplied, and no default value is assigned, an `ART::Exceptions::BadRequest` exception is raised.\n  @[ARTA::QueryParam(\"time\", constraints: /\\d:\\d:\\d/)]\n  @[ARTA::Get(\"/event/:event_name/\")]\n  def event_time(event_name : String, time : String) : String\n    \"#{event_name} occurred at #{time}\"\n  end\n\n  # A GET endpoint with an optional query parameter and optional path param with a default value; returning a `NamedTuple(user_id : Int32?, page : Int32)`.\n  #\n  # A nilable type denotes it as optional.  If the parameter is not supplied (or could not be converted), and no default value is assigned, it is `nil`.\n  @[ARTA::QueryParam(\"user_id\")]\n  @[ARTA::Get(\"/events/(:page)\")]\n  def events(user_id : Int32?, page : Int32 = 1) : NamedTuple(user_id: Int32?, page: Int32)\n    {user_id: user_id, page: page}\n  end\n\n  # A GET endpoint with param constraints.  The param must match the supplied Regex or it will not match and return a 404 error.\n  @[ARTA::Get(\"/time/:time/\", constraints: {\"time\" => /\\d{2}:\\d{2}:\\d{2}/})]\n  def get_constraint(time : String) : String\n    time\n  end\n\n  # A POST endpoint with a route param and accessing the request body; returning a `Bool`.\n  #\n  # It is recommended to use param converters to pass an actual object representing the data (assuming the body is JSON)\n  # to the route's action; however the raw request body can be accessed by typing an action argument as `HTTP::Request`.\n  @[ARTA::Post(\"/test/:expected\")]\n  def post_body(expected : String, request : HTTP::Request) : Bool\n    expected == request.body.try &.gets_to_end\n  end\nend\n\nART.run\n\n# GET /athena/index\"                   # => <h1>Welcome to my website!</h1>\n# GET /athena/users\"                   # => [{\"id\":1,...},...]\n# GET /athena/wakeup/17\"               # => Morning, Allison it is currently 2020-02-01 18:38:12 UTC.\n# GET /athena/me\"                      # => \"Jim\"\n# GET /athena/add/50/25\"               # => 75\n# GET /athena/event/foobar?time=1:1:1\" # => \"foobar occurred at 1:1:1\"\n# GET /athena/events\"                  # => {\"user_id\":null,\"page\":1}\n# GET /athena/events/17?user_id=19\"    # => {\"user_id\":19,\"page\":17}\n# GET /athena/time/12:45:30\"           # => \"12:45:30\"\n# GET /athena/time/12:aa:30\"           # => 404 not found\n# GET /athena/no_content\"              # => 204 no content\n# POST /athena/test/foo\", body: \"foo\"  # => true\n```","summary":"<p>The core of any framework is routing; how a route is tied to an action.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"generate_url(route:String,params:Hash(String,_)?=nil,reference_type:ART::URLGeneratorInterface::ReferenceType=:absolute_path):String-instance-method","html_id":"generate_url(route:String,params:Hash(String,_)?=nil,reference_type:ART::URLGeneratorInterface::ReferenceType=:absolute_path):String-instance-method","name":"generate_url","doc":"Generates a URL to the provided *route* with the provided *params*.\n\nSee `ART::URLGeneratorInterface#generate`.","summary":"<p>Generates a URL to the provided <em>route</em> with the provided <em>params</em>.</p>","abstract":false,"args":[{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":"String"},{"name":"params","doc":null,"default_value":"nil","external_name":"params","restriction":"Hash(String, _) | ::Nil"},{"name":"reference_type","doc":null,"default_value":":absolute_path","external_name":"reference_type","restriction":"ART::URLGeneratorInterface::ReferenceType"}],"args_string":"(route : String, params : Hash(String, _)? = <span class=\"n\">nil</span>, reference_type : ART::URLGeneratorInterface::ReferenceType = <span class=\"n\">:absolute_path</span>) : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/controller.cr#L133","def":{"name":"generate_url","args":[{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":"String"},{"name":"params","doc":null,"default_value":"nil","external_name":"params","restriction":"Hash(String, _) | ::Nil"},{"name":"reference_type","doc":null,"default_value":":absolute_path","external_name":"reference_type","restriction":"ART::URLGeneratorInterface::ReferenceType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"ADI.container.router.generate(route, params, reference_type)"}},{"id":"generate_url(route:String,reference_type:ART::URLGeneratorInterface::ReferenceType=:absolute_path,**params)-instance-method","html_id":"generate_url(route:String,reference_type:ART::URLGeneratorInterface::ReferenceType=:absolute_path,**params)-instance-method","name":"generate_url","doc":"Generates a URL to the provided *route* with the provided *params*.\n\nSee `ART::URLGeneratorInterface#generate`.","summary":"<p>Generates a URL to the provided <em>route</em> with the provided <em>params</em>.</p>","abstract":false,"args":[{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":"String"},{"name":"reference_type","doc":null,"default_value":":absolute_path","external_name":"reference_type","restriction":"ART::URLGeneratorInterface::ReferenceType"}],"args_string":"(route : String, reference_type : ART::URLGeneratorInterface::ReferenceType = <span class=\"n\">:absolute_path</span>, **params)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/controller.cr#L140","def":{"name":"generate_url","args":[{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":"String"},{"name":"reference_type","doc":null,"default_value":":absolute_path","external_name":"reference_type","restriction":"ART::URLGeneratorInterface::ReferenceType"}],"double_splat":{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.generate_url(route, params.to_h.transform_keys(&.to_s), reference_type)"}},{"id":"redirect(url:String,status:HTTP::Status=HTTP::Status::FOUND):ART::RedirectResponse-instance-method","html_id":"redirect(url:String,status:HTTP::Status=HTTP::Status::FOUND):ART::RedirectResponse-instance-method","name":"redirect","doc":"Returns an `ART::RedirectResponse` to the provided *url*, optionally with the provided *status*.\n\n```\nclass ExampleController < ART::Controller\n  @[ARTA::Get(\"redirect_to_google\")]\n  def redirect_to_google : ART::RedirectResponse\n    self.redirect \"https://google.com\"\n  end\nend\n```","summary":"<p>Returns an <code><a href=\"../../Athena/Routing/RedirectResponse.html\">ART::RedirectResponse</a></code> to the provided <em>url</em>, optionally with the provided <em>status</em>.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"},{"name":"status","doc":null,"default_value":"HTTP::Status::FOUND","external_name":"status","restriction":"HTTP::Status"}],"args_string":"(url : String, status : HTTP::Status = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Status</span><span class=\"t\">::</span><span class=\"t\">FOUND</span>) : ART::RedirectResponse","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/controller.cr#L265","def":{"name":"redirect","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"},{"name":"status","doc":null,"default_value":"HTTP::Status::FOUND","external_name":"status","restriction":"HTTP::Status"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ART::RedirectResponse","visibility":"Public","body":"ART::RedirectResponse.new(url, status)"}},{"id":"redirect_to_route(route:String,params:Hash(String,_)?=nil,status:HTTP::Status=:found):ART::RedirectResponse-instance-method","html_id":"redirect_to_route(route:String,params:Hash(String,_)?=nil,status:HTTP::Status=:found):ART::RedirectResponse-instance-method","name":"redirect_to_route","doc":"Returns an `ART::RedirectResponse` to the provided *route* with the provided *params*.\n\n```\nrequire \"athena\"\n\nclass ExampleController < ART::Controller\n  # Define a route to redirect to, explicitly naming this route `add`.\n  # The default route name is controller + method down snake-cased; e.x. `example_controller_add`.\n  @[ARTA::Get(\"/add/:value1/:value2\", name: \"add\")]\n  def add(value1 : Int32, value2 : Int32, negative : Bool = false) : Int32\n    sum = value1 + value2\n    negative ? -sum : sum\n  end\n\n  # Define a route that redirects to the `add` route with fixed parameters.\n  @[ARTA::Get(\"/\")]\n  def redirect : ART::RedirectResponse\n    self.redirect_to_route \"add\", {\"value1\" => 8, \"value2\" => 2}\n  end\nend\n\nART.run\n\n# GET / # => 10\n```","summary":"<p>Returns an <code><a href=\"../../Athena/Routing/RedirectResponse.html\">ART::RedirectResponse</a></code> to the provided <em>route</em> with the provided <em>params</em>.</p>","abstract":false,"args":[{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":"String"},{"name":"params","doc":null,"default_value":"nil","external_name":"params","restriction":"Hash(String, _) | ::Nil"},{"name":"status","doc":null,"default_value":":found","external_name":"status","restriction":"HTTP::Status"}],"args_string":"(route : String, params : Hash(String, _)? = <span class=\"n\">nil</span>, status : HTTP::Status = <span class=\"n\">:found</span>) : ART::RedirectResponse","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/controller.cr#L169","def":{"name":"redirect_to_route","args":[{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":"String"},{"name":"params","doc":null,"default_value":"nil","external_name":"params","restriction":"Hash(String, _) | ::Nil"},{"name":"status","doc":null,"default_value":":found","external_name":"status","restriction":"HTTP::Status"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ART::RedirectResponse","visibility":"Public","body":"self.redirect(self.generate_url(route, params), status)"}},{"id":"redirect_to_route(route:String,status:HTTP::Status=:found,**params):ART::RedirectResponse-instance-method","html_id":"redirect_to_route(route:String,status:HTTP::Status=:found,**params):ART::RedirectResponse-instance-method","name":"redirect_to_route","doc":"Returns an `ART::RedirectResponse` to the provided *route* with the provided *params*.\n\n```\nrequire \"athena\"\n\nclass ExampleController < ART::Controller\n  # Define a route to redirect to, explicitly naming this route `add`.\n  # The default route name is controller + method down snake-cased; e.x. `example_controller_add`.\n  @[ARTA::Get(\"/add/:value1/:value2\", name: \"add\")]\n  def add(value1 : Int32, value2 : Int32, negative : Bool = false) : Int32\n    sum = value1 + value2\n    negative ? -sum : sum\n  end\n\n  # Define a route that redirects to the `add` route with fixed parameters.\n  @[ARTA::Get(\"/\")]\n  def redirect : ART::RedirectResponse\n    self.redirect_to_route \"add\", value1: 8, value2: 2\n  end\nend\n\nART.run\n\n# GET / # => 10\n```","summary":"<p>Returns an <code><a href=\"../../Athena/Routing/RedirectResponse.html\">ART::RedirectResponse</a></code> to the provided <em>route</em> with the provided <em>params</em>.</p>","abstract":false,"args":[{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":"String"},{"name":"status","doc":null,"default_value":":found","external_name":"status","restriction":"HTTP::Status"}],"args_string":"(route : String, status : HTTP::Status = <span class=\"n\">:found</span>, **params) : ART::RedirectResponse","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/controller.cr#L198","def":{"name":"redirect_to_route","args":[{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":"String"},{"name":"status","doc":null,"default_value":":found","external_name":"status","restriction":"HTTP::Status"}],"double_splat":{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"ART::RedirectResponse","visibility":"Public","body":"self.redirect_to_route(route, params.to_h.transform_keys do |__arg1|\n  __arg1.to_s.as(String)\nend, status)"}}],"macros":[{"id":"delete(path,*args,**named_args,&)-macro","html_id":"delete(path,*args,**named_args,&amp;)-macro","name":"delete","doc":"Helper DSL macro for creating `DELETE` actions.\n\nThe first argument is the path that the action should handle; which maps to path on the HTTP method annotation.\nThe second argument is a variable amount of arguments with a syntax similar to Crystal's `record`.\nThere are also a few optional named arguments that map to the corresponding field on the HTTP method annotation.\n\nThe macro simply defines a method based on the options passed to it.  Additional annotations, such as for query params\nor a param converter can simply be added on top of the macro.\n\n### Optional Named Arguments\n- `return_type` - The return type to set for the action.  Defaults to `String` if not provided.\n- `constraints` - Any constraints that should be applied to the route.\n\n### Example\n\n```\nclass ExampleController < ART::Controller\n  delete \"values/:value1/:value2\", value1 : Int32, value2 : Float64, constraints: {\"value1\" => /\\d+/, \"value2\" => /\\d+\\.\\d+/} do\n    \"Value1: #{value1} - Value2: #{value2}\"\n  end\nend\n```","summary":"<p>Helper DSL macro for creating <code>DELETE</code> actions.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(path, *args, **named_args, &)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/controller.cr#L269","def":{"name":"delete","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},"visibility":"Public","body":"        @[ARTA::Delete(path: \n{{ path }}\n, constraints: \n{{ named_args[:constraints] }}\n)]\n        def delete_\n{{ (path.gsub(/\\W/, \"_\")).id }}\n(\n{{ *args }}\n) : \n{{ named_args[:return_type] || String }}\n\n          \n{{ yield }}\n\n        \nend\n      \n"}},{"id":"get(path,*args,**named_args,&)-macro","html_id":"get(path,*args,**named_args,&amp;)-macro","name":"get","doc":"Helper DSL macro for creating `GET` actions.\n\nThe first argument is the path that the action should handle; which maps to path on the HTTP method annotation.\nThe second argument is a variable amount of arguments with a syntax similar to Crystal's `record`.\nThere are also a few optional named arguments that map to the corresponding field on the HTTP method annotation.\n\nThe macro simply defines a method based on the options passed to it.  Additional annotations, such as for query params\nor a param converter can simply be added on top of the macro.\n\n### Optional Named Arguments\n- `return_type` - The return type to set for the action.  Defaults to `String` if not provided.\n- `constraints` - Any constraints that should be applied to the route.\n\n### Example\n\n```\nclass ExampleController < ART::Controller\n  get \"values/:value1/:value2\", value1 : Int32, value2 : Float64, constraints: {\"value1\" => /\\d+/, \"value2\" => /\\d+\\.\\d+/} do\n    \"Value1: #{value1} - Value2: #{value2}\"\n  end\nend\n```","summary":"<p>Helper DSL macro for creating <code>GET</code> actions.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(path, *args, **named_args, &)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/controller.cr#L269","def":{"name":"get","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},"visibility":"Public","body":"        @[ARTA::Get(path: \n{{ path }}\n, constraints: \n{{ named_args[:constraints] }}\n)]\n        def get_\n{{ (path.gsub(/\\W/, \"_\")).id }}\n(\n{{ *args }}\n) : \n{{ named_args[:return_type] || String }}\n\n          \n{{ yield }}\n\n        \nend\n      \n"}},{"id":"head(path,*args,**named_args,&)-macro","html_id":"head(path,*args,**named_args,&amp;)-macro","name":"head","doc":"Helper DSL macro for creating `HEAD` actions.\n\nThe first argument is the path that the action should handle; which maps to path on the HTTP method annotation.\nThe second argument is a variable amount of arguments with a syntax similar to Crystal's `record`.\nThere are also a few optional named arguments that map to the corresponding field on the HTTP method annotation.\n\nThe macro simply defines a method based on the options passed to it.  Additional annotations, such as for query params\nor a param converter can simply be added on top of the macro.\n\n### Optional Named Arguments\n- `return_type` - The return type to set for the action.  Defaults to `String` if not provided.\n- `constraints` - Any constraints that should be applied to the route.\n\n### Example\n\n```\nclass ExampleController < ART::Controller\n  head \"values/:value1/:value2\", value1 : Int32, value2 : Float64, constraints: {\"value1\" => /\\d+/, \"value2\" => /\\d+\\.\\d+/} do\n    \"Value1: #{value1} - Value2: #{value2}\"\n  end\nend\n```","summary":"<p>Helper DSL macro for creating <code>HEAD</code> actions.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(path, *args, **named_args, &)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/controller.cr#L269","def":{"name":"head","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},"visibility":"Public","body":"        @[ARTA::Head(path: \n{{ path }}\n, constraints: \n{{ named_args[:constraints] }}\n)]\n        def head_\n{{ (path.gsub(/\\W/, \"_\")).id }}\n(\n{{ *args }}\n) : \n{{ named_args[:return_type] || String }}\n\n          \n{{ yield }}\n\n        \nend\n      \n"}},{"id":"link(path,*args,**named_args,&)-macro","html_id":"link(path,*args,**named_args,&amp;)-macro","name":"link","doc":"Helper DSL macro for creating `LINK` actions.\n\nThe first argument is the path that the action should handle; which maps to path on the HTTP method annotation.\nThe second argument is a variable amount of arguments with a syntax similar to Crystal's `record`.\nThere are also a few optional named arguments that map to the corresponding field on the HTTP method annotation.\n\nThe macro simply defines a method based on the options passed to it.  Additional annotations, such as for query params\nor a param converter can simply be added on top of the macro.\n\n### Optional Named Arguments\n- `return_type` - The return type to set for the action.  Defaults to `String` if not provided.\n- `constraints` - Any constraints that should be applied to the route.\n\n### Example\n\n```\nclass ExampleController < ART::Controller\n  link \"values/:value1/:value2\", value1 : Int32, value2 : Float64, constraints: {\"value1\" => /\\d+/, \"value2\" => /\\d+\\.\\d+/} do\n    \"Value1: #{value1} - Value2: #{value2}\"\n  end\nend\n```","summary":"<p>Helper DSL macro for creating <code>LINK</code> actions.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(path, *args, **named_args, &)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/controller.cr#L269","def":{"name":"link","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},"visibility":"Public","body":"        @[ARTA::Link(path: \n{{ path }}\n, constraints: \n{{ named_args[:constraints] }}\n)]\n        def link_\n{{ (path.gsub(/\\W/, \"_\")).id }}\n(\n{{ *args }}\n) : \n{{ named_args[:return_type] || String }}\n\n          \n{{ yield }}\n\n        \nend\n      \n"}},{"id":"patch(path,*args,**named_args,&)-macro","html_id":"patch(path,*args,**named_args,&amp;)-macro","name":"patch","doc":"Helper DSL macro for creating `PATCH` actions.\n\nThe first argument is the path that the action should handle; which maps to path on the HTTP method annotation.\nThe second argument is a variable amount of arguments with a syntax similar to Crystal's `record`.\nThere are also a few optional named arguments that map to the corresponding field on the HTTP method annotation.\n\nThe macro simply defines a method based on the options passed to it.  Additional annotations, such as for query params\nor a param converter can simply be added on top of the macro.\n\n### Optional Named Arguments\n- `return_type` - The return type to set for the action.  Defaults to `String` if not provided.\n- `constraints` - Any constraints that should be applied to the route.\n\n### Example\n\n```\nclass ExampleController < ART::Controller\n  patch \"values/:value1/:value2\", value1 : Int32, value2 : Float64, constraints: {\"value1\" => /\\d+/, \"value2\" => /\\d+\\.\\d+/} do\n    \"Value1: #{value1} - Value2: #{value2}\"\n  end\nend\n```","summary":"<p>Helper DSL macro for creating <code>PATCH</code> actions.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(path, *args, **named_args, &)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/controller.cr#L269","def":{"name":"patch","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},"visibility":"Public","body":"        @[ARTA::Patch(path: \n{{ path }}\n, constraints: \n{{ named_args[:constraints] }}\n)]\n        def patch_\n{{ (path.gsub(/\\W/, \"_\")).id }}\n(\n{{ *args }}\n) : \n{{ named_args[:return_type] || String }}\n\n          \n{{ yield }}\n\n        \nend\n      \n"}},{"id":"post(path,*args,**named_args,&)-macro","html_id":"post(path,*args,**named_args,&amp;)-macro","name":"post","doc":"Helper DSL macro for creating `POST` actions.\n\nThe first argument is the path that the action should handle; which maps to path on the HTTP method annotation.\nThe second argument is a variable amount of arguments with a syntax similar to Crystal's `record`.\nThere are also a few optional named arguments that map to the corresponding field on the HTTP method annotation.\n\nThe macro simply defines a method based on the options passed to it.  Additional annotations, such as for query params\nor a param converter can simply be added on top of the macro.\n\n### Optional Named Arguments\n- `return_type` - The return type to set for the action.  Defaults to `String` if not provided.\n- `constraints` - Any constraints that should be applied to the route.\n\n### Example\n\n```\nclass ExampleController < ART::Controller\n  post \"values/:value1/:value2\", value1 : Int32, value2 : Float64, constraints: {\"value1\" => /\\d+/, \"value2\" => /\\d+\\.\\d+/} do\n    \"Value1: #{value1} - Value2: #{value2}\"\n  end\nend\n```","summary":"<p>Helper DSL macro for creating <code>POST</code> actions.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(path, *args, **named_args, &)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/controller.cr#L269","def":{"name":"post","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},"visibility":"Public","body":"        @[ARTA::Post(path: \n{{ path }}\n, constraints: \n{{ named_args[:constraints] }}\n)]\n        def post_\n{{ (path.gsub(/\\W/, \"_\")).id }}\n(\n{{ *args }}\n) : \n{{ named_args[:return_type] || String }}\n\n          \n{{ yield }}\n\n        \nend\n      \n"}},{"id":"put(path,*args,**named_args,&)-macro","html_id":"put(path,*args,**named_args,&amp;)-macro","name":"put","doc":"Helper DSL macro for creating `PUT` actions.\n\nThe first argument is the path that the action should handle; which maps to path on the HTTP method annotation.\nThe second argument is a variable amount of arguments with a syntax similar to Crystal's `record`.\nThere are also a few optional named arguments that map to the corresponding field on the HTTP method annotation.\n\nThe macro simply defines a method based on the options passed to it.  Additional annotations, such as for query params\nor a param converter can simply be added on top of the macro.\n\n### Optional Named Arguments\n- `return_type` - The return type to set for the action.  Defaults to `String` if not provided.\n- `constraints` - Any constraints that should be applied to the route.\n\n### Example\n\n```\nclass ExampleController < ART::Controller\n  put \"values/:value1/:value2\", value1 : Int32, value2 : Float64, constraints: {\"value1\" => /\\d+/, \"value2\" => /\\d+\\.\\d+/} do\n    \"Value1: #{value1} - Value2: #{value2}\"\n  end\nend\n```","summary":"<p>Helper DSL macro for creating <code>PUT</code> actions.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(path, *args, **named_args, &)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/controller.cr#L269","def":{"name":"put","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},"visibility":"Public","body":"        @[ARTA::Put(path: \n{{ path }}\n, constraints: \n{{ named_args[:constraints] }}\n)]\n        def put_\n{{ (path.gsub(/\\W/, \"_\")).id }}\n(\n{{ *args }}\n) : \n{{ named_args[:return_type] || String }}\n\n          \n{{ yield }}\n\n        \nend\n      \n"}},{"id":"render(template)-macro","html_id":"render(template)-macro","name":"render","doc":"Renders a template.\n\nUses `ECR` to render the *template*, creating an `ART::Response` with its rendered content and adding a `text/html` `content-type` header.\n\nThe response can be modified further before returning it if needed.\n\nVariables used within the template must be defined within the action's body manually if they are not provided within the action's arguments.\n\n```\n# greeting.ecr\nGreetings, <%= name %>!\n\n# example_controller.cr\nclass ExampleController < ART::Controller\n  @[ARTA::Get(\"/:name\")]\n  def greet(name : String) : ART::Response\n    render \"greeting.ecr\"\n  end\nend\n\nART.run\n\n# GET /Fred # => Greetings, Fred!\n```","summary":"<p>Renders a template.</p>","abstract":false,"args":[{"name":"template","doc":null,"default_value":"","external_name":"template","restriction":""}],"args_string":"(template)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/controller.cr#L226","def":{"name":"render","args":[{"name":"template","doc":null,"default_value":"","external_name":"template","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    Athena::Routing::Response.new ECR.render(\n{{ template }}\n), headers: HTTP::Headers\n{\"content-type\" => \"text/html\"}\n  \n"}},{"id":"render(template,layout)-macro","html_id":"render(template,layout)-macro","name":"render","doc":"Renders a template within a layout.\n```\n# layout.ecr\n<h1>Content:</h1> <%= content -%>\n\n# greeting.ecr\nGreetings, <%= name %>!\n\n# example_controller.cr\nclass ExampleController < ART::Controller\n  @[ARTA::Get(\"/:name\")]\n  def greet(name : String) : ART::Response\n    render \"greeting.ecr\", \"layout.ecr\"\n  end\nend\n\nART.run\n\n# GET /Fred # => <h1>Content:</h1> Greetings, Fred!\n```","summary":"<p>Renders a template within a layout.</p>","abstract":false,"args":[{"name":"template","doc":null,"default_value":"","external_name":"template","restriction":""},{"name":"layout","doc":null,"default_value":"","external_name":"layout","restriction":""}],"args_string":"(template, layout)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/controller.cr#L250","def":{"name":"render","args":[{"name":"template","doc":null,"default_value":"","external_name":"template","restriction":""},{"name":"layout","doc":null,"default_value":"","external_name":"layout","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    content = ECR.render \n{{ template }}\n\n    \n{{ @type }}\n.render \n{{ layout }}\n\n  \n"}},{"id":"unlink(path,*args,**named_args,&)-macro","html_id":"unlink(path,*args,**named_args,&amp;)-macro","name":"unlink","doc":"Helper DSL macro for creating `UNLINK` actions.\n\nThe first argument is the path that the action should handle; which maps to path on the HTTP method annotation.\nThe second argument is a variable amount of arguments with a syntax similar to Crystal's `record`.\nThere are also a few optional named arguments that map to the corresponding field on the HTTP method annotation.\n\nThe macro simply defines a method based on the options passed to it.  Additional annotations, such as for query params\nor a param converter can simply be added on top of the macro.\n\n### Optional Named Arguments\n- `return_type` - The return type to set for the action.  Defaults to `String` if not provided.\n- `constraints` - Any constraints that should be applied to the route.\n\n### Example\n\n```\nclass ExampleController < ART::Controller\n  unlink \"values/:value1/:value2\", value1 : Int32, value2 : Float64, constraints: {\"value1\" => /\\d+/, \"value2\" => /\\d+\\.\\d+/} do\n    \"Value1: #{value1} - Value2: #{value2}\"\n  end\nend\n```","summary":"<p>Helper DSL macro for creating <code>UNLINK</code> actions.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(path, *args, **named_args, &)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/controller.cr#L269","def":{"name":"unlink","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},"visibility":"Public","body":"        @[ARTA::Unlink(path: \n{{ path }}\n, constraints: \n{{ named_args[:constraints] }}\n)]\n        def unlink_\n{{ (path.gsub(/\\W/, \"_\")).id }}\n(\n{{ *args }}\n) : \n{{ named_args[:return_type] || String }}\n\n          \n{{ yield }}\n\n        \nend\n      \n"}}],"types":[]},{"html_id":"athena/Athena/Routing/ErrorRenderer","path":"Athena/Routing/ErrorRenderer.html","kind":"struct","full_name":"Athena::Routing::ErrorRenderer","name":"ErrorRenderer","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Routing/ErrorRendererInterface","kind":"module","full_name":"Athena::Routing::ErrorRendererInterface","name":"ErrorRendererInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/error_renderer.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/error_renderer.cr#L3"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Routing/ErrorRendererInterface","kind":"module","full_name":"Athena::Routing::ErrorRendererInterface","name":"ErrorRendererInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"The default `ART::ErrorRendererInterface`, JSON serializes the exception.","summary":"<p>The default <code><a href=\"../../Athena/Routing/ErrorRendererInterface.html\">ART::ErrorRendererInterface</a></code>, JSON serializes the exception.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/error_renderer.cr#L3","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"render(exception:Exception):ART::Response-instance-method","html_id":"render(exception:Exception):ART::Response-instance-method","name":"render","doc":"Renders the given *exception* into an `ART::Response`.","summary":"<p>Renders the given <em>exception</em> into an <code><a href=\"../../Athena/Routing/Response.html\">ART::Response</a></code>.</p>","abstract":false,"args":[{"name":"exception","doc":null,"default_value":"","external_name":"exception","restriction":"::Exception"}],"args_string":"(exception : Exception) : ART::Response","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/error_renderer.cr#L7","def":{"name":"render","args":[{"name":"exception","doc":null,"default_value":"","external_name":"exception","restriction":"::Exception"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ART::Response","visibility":"Public","body":"if exception.is_a?(ART::Exceptions::HTTPException)\n  status = exception.status\n  headers = exception.headers\nelse\n  status = HTTP::Status::INTERNAL_SERVER_ERROR\n  headers = HTTP::Headers.new\nend\nheaders[\"content-type\"] = \"application/json; charset=UTF-8\"\nART::Response.new(exception.to_json, status, headers)\n"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/ErrorRendererInterface","path":"Athena/Routing/ErrorRendererInterface.html","kind":"module","full_name":"Athena::Routing::ErrorRendererInterface","name":"ErrorRendererInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/error_renderer_interface.cr","line_number":51,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/error_renderer_interface.cr#L51"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Routing/ErrorRenderer","kind":"struct","full_name":"Athena::Routing::ErrorRenderer","name":"ErrorRenderer"}],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"An `ART::ErrorRendererInterface` converts an `::Exception` into an `ART::Response`.\n\nBy default, exceptions are JSON serialized via `ART::ErrorRenderer`.  However, it can be overridden\nto allow rendering errors differently, such as via HTML.\n\n```\nrequire \"athena\"\n\n# Alias this service to be used when the `ART::ErrorRendererInterface` type is encountered.\n@[ADI::Register(alias: ART::ErrorRendererInterface)]\nstruct Athena::Routing::CustomErrorRenderer\n  include Athena::Routing::ErrorRendererInterface\n\n  # :inherit:\n  def render(exception : ::Exception) : ART::Response\n    if exception.is_a? ART::Exceptions::HTTPException\n      status = exception.status\n      headers = exception.headers\n    else\n      status = HTTP::Status::INTERNAL_SERVER_ERROR\n      headers = HTTP::Headers.new\n    end\n\n    body = <<-HTML\n      <html>\n        <head>\n          <title>Uh oh</title>\n        </head>\n        <body>\n          <h1>Uh oh, something went wrong</h1>\n        </body>\n      </html>\n    HTML\n\n    headers[\"content-type\"] = \"text/html\"\n\n    ART::Response.new body, status, headers\n  end\nend\n\nclass TestController < ART::Controller\n  get \"/\" do\n    raise \"some error\"\n  end\nend\n\nART.run\n\n# GET / # =>   <html><head><title>Uh oh</title></head><body><h1>Uh oh, something went wrong</h1></body></html>\n```","summary":"<p>An <code><a href=\"../../Athena/Routing/ErrorRendererInterface.html\">ART::ErrorRendererInterface</a></code> converts an <code>::Exception</code> into an <code><a href=\"../../Athena/Routing/Response.html\">ART::Response</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"render(exception:Exception):ART::Response-instance-method","html_id":"render(exception:Exception):ART::Response-instance-method","name":"render","doc":"Renders the given *exception* into an `ART::Response`.","summary":"<p>Renders the given <em>exception</em> into an <code><a href=\"../../Athena/Routing/Response.html\">ART::Response</a></code>.</p>","abstract":true,"args":[{"name":"exception","doc":null,"default_value":"","external_name":"exception","restriction":"::Exception"}],"args_string":"(exception : Exception) : ART::Response","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/error_renderer_interface.cr#L53","def":{"name":"render","args":[{"name":"exception","doc":null,"default_value":"","external_name":"exception","restriction":"::Exception"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ART::Response","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Events","path":"Athena/Routing/Events.html","kind":"module","full_name":"Athena::Routing::Events","name":"Events","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/athena.cr","line_number":54,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/athena.cr#L54"},{"filename":"src/events/request_aware.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/events/request_aware.cr#L2"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"The `AED::Event` that are emitted via `Athena::EventDispatcher` to handle a request during its life-cycle.\nCustom events can also be defined and dispatched within a controller, listener, or some other service.\n\nSee each specific event and the [external documentation](https://athenaframework.org/components/event_dispatcher/) for more information.","summary":"<p>The <code><a href=\"../../Athena/EventDispatcher/Event.html\">AED::Event</a></code> that are emitted via <code><a href=\"../../Athena/EventDispatcher.html\">Athena::EventDispatcher</a></code> to handle a request during its life-cycle.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Routing/Events/Action","path":"Athena/Routing/Events/Action.html","kind":"class","full_name":"Athena::Routing::Events::Action","name":"Action","abstract":false,"superclass":{"html_id":"athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"},"ancestors":[{"html_id":"athena/Athena/Routing/Events/RequestAware","kind":"module","full_name":"Athena::Routing::Events::RequestAware","name":"RequestAware"},{"html_id":"athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"},{"html_id":"athena/Athena/EventDispatcher/StoppableEvent","kind":"module","full_name":"Athena::EventDispatcher::StoppableEvent","name":"StoppableEvent"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/events/action_event.cr","line_number":6,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/events/action_event.cr#L6"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Routing/Events/RequestAware","kind":"module","full_name":"Athena::Routing::Events::RequestAware","name":"RequestAware"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Events","kind":"module","full_name":"Athena::Routing::Events","name":"Events"},"doc":"Emitted after `ART::Events::Request` and the related `ART::Action` has been resolved, but before it has been executed.\n\nSee the [external documentation](https://athenaframework.org/components/#2-action-event) for more information.","summary":"<p>Emitted after <code><a href=\"../../../Athena/Routing/Events/Request.html\">ART::Events::Request</a></code> and the related <code><a href=\"../../../Athena/Routing/Action.html\">ART::Action</a></code> has been resolved, but before it has been executed.</p>","class_methods":[],"constructors":[{"id":"new(request:HTTP::Request,action:ART::ActionBase)-class-method","html_id":"new(request:HTTP::Request,action:ART::ActionBase)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"action","doc":null,"default_value":"","external_name":"action","restriction":"ART::ActionBase"}],"args_string":"(request : HTTP::Request, action : ART::ActionBase)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/events/action_event.cr#L12","def":{"name":"new","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"action","doc":null,"default_value":"","external_name":"action","restriction":"ART::ActionBase"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(request, action)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"action:ART::ActionBase-instance-method","html_id":"action:ART::ActionBase-instance-method","name":"action","doc":"The related `ART::Action` that will be used to handle the current request.","summary":"<p>The related <code><a href=\"../../../Athena/Routing/Action.html\">ART::Action</a></code> that will be used to handle the current request.</p>","abstract":false,"args":[],"args_string":" : ART::ActionBase","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/events/action_event.cr#L10","def":{"name":"action","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ART::ActionBase","visibility":"Public","body":"@action"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Events/Exception","path":"Athena/Routing/Events/Exception.html","kind":"class","full_name":"Athena::Routing::Events::Exception","name":"Exception","abstract":false,"superclass":{"html_id":"athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"},"ancestors":[{"html_id":"athena/Athena/Routing/Events/RequestAware","kind":"module","full_name":"Athena::Routing::Events::RequestAware","name":"RequestAware"},{"html_id":"athena/Athena/Routing/Events/SettableResponse","kind":"module","full_name":"Athena::Routing::Events::SettableResponse","name":"SettableResponse"},{"html_id":"athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"},{"html_id":"athena/Athena/EventDispatcher/StoppableEvent","kind":"module","full_name":"Athena::EventDispatcher::StoppableEvent","name":"StoppableEvent"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/events/exception_event.cr","line_number":9,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/events/exception_event.cr#L9"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Routing/Events/RequestAware","kind":"module","full_name":"Athena::Routing::Events::RequestAware","name":"RequestAware"},{"html_id":"athena/Athena/Routing/Events/SettableResponse","kind":"module","full_name":"Athena::Routing::Events::SettableResponse","name":"SettableResponse"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Events","kind":"module","full_name":"Athena::Routing::Events","name":"Events"},"doc":"Emitted when an exception occurs.  See `ART::Exceptions` for more information on how exception handling works in Athena.\n\nThis event can be listened on to recover from errors or to modify the exception before it's rendered.\n\nSee the [external documentation](https://athenaframework.org/components/#8-exception-handling) for more information.","summary":"<p>Emitted when an exception occurs.</p>","class_methods":[],"constructors":[{"id":"new(request:HTTP::Request,exception:::Exception)-class-method","html_id":"new(request:HTTP::Request,exception:::Exception)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"exception","doc":null,"default_value":"","external_name":"exception","restriction":"::Exception"}],"args_string":"(request : HTTP::Request, exception : ::Exception)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/events/exception_event.cr#L18","def":{"name":"new","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"exception","doc":null,"default_value":"","external_name":"exception","restriction":"::Exception"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(request, exception)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"exception:::Exception-instance-method","html_id":"exception:::Exception-instance-method","name":"exception","doc":"The `::Exception` associated with `self`.\n\nCan be replaced by an `ART::Listeners::Error`.","summary":"<p>The <code>::Exception</code> associated with <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : ::Exception","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/events/exception_event.cr#L16","def":{"name":"exception","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Exception","visibility":"Public","body":"@exception"}},{"id":"exception=(exception:::Exception)-instance-method","html_id":"exception=(exception:::Exception)-instance-method","name":"exception=","doc":"The `::Exception` associated with `self`.\n\nCan be replaced by an `ART::Listeners::Error`.","summary":"<p>The <code>::Exception</code> associated with <code>self</code>.</p>","abstract":false,"args":[{"name":"exception","doc":null,"default_value":"","external_name":"exception","restriction":"::Exception"}],"args_string":"(exception : ::Exception)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/events/exception_event.cr#L16","def":{"name":"exception=","args":[{"name":"exception","doc":null,"default_value":"","external_name":"exception","restriction":"::Exception"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@exception = exception"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Events/Request","path":"Athena/Routing/Events/Request.html","kind":"class","full_name":"Athena::Routing::Events::Request","name":"Request","abstract":false,"superclass":{"html_id":"athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"},"ancestors":[{"html_id":"athena/Athena/Routing/Events/RequestAware","kind":"module","full_name":"Athena::Routing::Events::RequestAware","name":"RequestAware"},{"html_id":"athena/Athena/Routing/Events/SettableResponse","kind":"module","full_name":"Athena::Routing::Events::SettableResponse","name":"SettableResponse"},{"html_id":"athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"},{"html_id":"athena/Athena/EventDispatcher/StoppableEvent","kind":"module","full_name":"Athena::EventDispatcher::StoppableEvent","name":"StoppableEvent"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/events/request_event.cr","line_number":13,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/events/request_event.cr#L13"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Routing/Events/RequestAware","kind":"module","full_name":"Athena::Routing::Events::RequestAware","name":"RequestAware"},{"html_id":"athena/Athena/Routing/Events/SettableResponse","kind":"module","full_name":"Athena::Routing::Events::SettableResponse","name":"SettableResponse"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Events","kind":"module","full_name":"Athena::Routing::Events","name":"Events"},"doc":"Emitted very early in the request's life-cycle; before the corresponding `ART::Action` (if any) has been resolved.\n\nThis event can be listened on in order to:\n* Add information to the request, via its `ART::ParameterBag`\n* Return a response immediately if there is enough information available; `ART::Listeners::CORS` is an example of this\n\nNOTE: If your listener logic requires that the the corresponding `ART::Action` has been resolved, use `ART::Events::Action` instead.\n\nSee the [external documentation](https://athenaframework.org/components/#1-request-event) for more information.","summary":"<p>Emitted very early in the request's life-cycle; before the corresponding <code><a href=\"../../../Athena/Routing/Action.html\">ART::Action</a></code> (if any) has been resolved.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Events/RequestAware","path":"Athena/Routing/Events/RequestAware.html","kind":"module","full_name":"Athena::Routing::Events::RequestAware","name":"RequestAware","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/events/request_aware.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/events/request_aware.cr#L2"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Routing/Events/Action","kind":"class","full_name":"Athena::Routing::Events::Action","name":"Action"},{"html_id":"athena/Athena/Routing/Events/Exception","kind":"class","full_name":"Athena::Routing::Events::Exception","name":"Exception"},{"html_id":"athena/Athena/Routing/Events/Request","kind":"class","full_name":"Athena::Routing::Events::Request","name":"Request"},{"html_id":"athena/Athena/Routing/Events/Response","kind":"class","full_name":"Athena::Routing::Events::Response","name":"Response"},{"html_id":"athena/Athena/Routing/Events/Terminate","kind":"class","full_name":"Athena::Routing::Events::Terminate","name":"Terminate"},{"html_id":"athena/Athena/Routing/Events/View","kind":"class","full_name":"Athena::Routing::Events::View","name":"View"}],"namespace":{"html_id":"athena/Athena/Routing/Events","kind":"module","full_name":"Athena::Routing::Events","name":"Events"},"doc":"Represents an event that has access to the current request object.","summary":"<p>Represents an event that has access to the current request object.</p>","class_methods":[],"constructors":[{"id":"new(request:HTTP::Request)-class-method","html_id":"new(request:HTTP::Request)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"args_string":"(request : HTTP::Request)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/events/request_aware.cr#L6","def":{"name":"new","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(request)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"request:HTTP::Request-instance-method","html_id":"request:HTTP::Request-instance-method","name":"request","doc":"Returns the current request object.","summary":"<p>Returns the current request object.</p>","abstract":false,"args":[],"args_string":" : HTTP::Request","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/events/request_aware.cr#L4","def":{"name":"request","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::Request","visibility":"Public","body":"@request"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Events/Response","path":"Athena/Routing/Events/Response.html","kind":"class","full_name":"Athena::Routing::Events::Response","name":"Response","abstract":false,"superclass":{"html_id":"athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"},"ancestors":[{"html_id":"athena/Athena/Routing/Events/RequestAware","kind":"module","full_name":"Athena::Routing::Events::RequestAware","name":"RequestAware"},{"html_id":"athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"},{"html_id":"athena/Athena/EventDispatcher/StoppableEvent","kind":"module","full_name":"Athena::EventDispatcher::StoppableEvent","name":"StoppableEvent"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/events/response_event.cr","line_number":9,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/events/response_event.cr#L9"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Routing/Events/RequestAware","kind":"module","full_name":"Athena::Routing::Events::RequestAware","name":"RequestAware"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Events","kind":"module","full_name":"Athena::Routing::Events","name":"Events"},"doc":"Emitted after the route's action has been executed, but before the response has been returned to the client.\n\nThis event can be listened on to modify the response object further before it is returned;\nsuch as adding headers/cookies, compressing the response, etc.\n\nSee the [external documentation](https://athenaframework.org/components/#5-response-event) for more information.","summary":"<p>Emitted after the route's action has been executed, but before the response has been returned to the client.</p>","class_methods":[],"constructors":[{"id":"new(request:HTTP::Request,response:ART::Response)-class-method","html_id":"new(request:HTTP::Request,response:ART::Response)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"ART::Response"}],"args_string":"(request : HTTP::Request, response : ART::Response)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/events/response_event.cr#L15","def":{"name":"new","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"ART::Response"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(request, response)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"response:ART::Response-instance-method","html_id":"response:ART::Response-instance-method","name":"response","doc":"The response object.","summary":"<p>The response object.</p>","abstract":false,"args":[],"args_string":" : ART::Response","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/events/response_event.cr#L13","def":{"name":"response","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ART::Response","visibility":"Public","body":"@response"}},{"id":"response=(response:ART::Response)-instance-method","html_id":"response=(response:ART::Response)-instance-method","name":"response=","doc":"The response object.","summary":"<p>The response object.</p>","abstract":false,"args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"ART::Response"}],"args_string":"(response : ART::Response)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/events/response_event.cr#L13","def":{"name":"response=","args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"ART::Response"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@response = response"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Events/SettableResponse","path":"Athena/Routing/Events/SettableResponse.html","kind":"module","full_name":"Athena::Routing::Events::SettableResponse","name":"SettableResponse","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/events/settable_response.cr","line_number":4,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/events/settable_response.cr#L4"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Routing/Events/Exception","kind":"class","full_name":"Athena::Routing::Events::Exception","name":"Exception"},{"html_id":"athena/Athena/Routing/Events/Request","kind":"class","full_name":"Athena::Routing::Events::Request","name":"Request"},{"html_id":"athena/Athena/Routing/Events/View","kind":"class","full_name":"Athena::Routing::Events::View","name":"View"}],"namespace":{"html_id":"athena/Athena/Routing/Events","kind":"module","full_name":"Athena::Routing::Events","name":"Events"},"doc":"Represents an event where an `ART::Response` can be set on `self` to handle the original `HTTP::Request`.\n\nNOTE: Once `#response=` is called, propagation stops.  Or in other words, listeners with lower priority will not be executed.","summary":"<p>Represents an event where an <code><a href=\"../../../Athena/Routing/Response.html\">ART::Response</a></code> can be set on <code>self</code> to handle the original <code><a href=\"../../../HTTP/Request.html\">HTTP::Request</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"response:ART::Response?-instance-method","html_id":"response:ART::Response?-instance-method","name":"response","doc":"The response object, if any.","summary":"<p>The response object, if any.</p>","abstract":false,"args":[],"args_string":" : ART::Response?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/events/settable_response.cr#L6","def":{"name":"response","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ART::Response | ::Nil","visibility":"Public","body":"@response"}},{"id":"response=(response:ART::Response):Nil-instance-method","html_id":"response=(response:ART::Response):Nil-instance-method","name":"response=","doc":"Sets the *response* that will be returned for the current `HTTP::Request` being handled.\n\nPropagation of `self` will stop once `#response=` is called.","summary":"<p>Sets the <em>response</em> that will be returned for the current <code><a href=\"../../../HTTP/Request.html\">HTTP::Request</a></code> being handled.</p>","abstract":false,"args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"ART::Response"}],"args_string":"(response : ART::Response) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/events/settable_response.cr#L11","def":{"name":"response=","args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"ART::Response"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@response = response\nstop_propagation\n"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Events/Terminate","path":"Athena/Routing/Events/Terminate.html","kind":"class","full_name":"Athena::Routing::Events::Terminate","name":"Terminate","abstract":false,"superclass":{"html_id":"athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"},"ancestors":[{"html_id":"athena/Athena/Routing/Events/RequestAware","kind":"module","full_name":"Athena::Routing::Events::RequestAware","name":"RequestAware"},{"html_id":"athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"},{"html_id":"athena/Athena/EventDispatcher/StoppableEvent","kind":"module","full_name":"Athena::EventDispatcher::StoppableEvent","name":"StoppableEvent"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/events/terminate_event.cr","line_number":8,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/events/terminate_event.cr#L8"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Routing/Events/RequestAware","kind":"module","full_name":"Athena::Routing::Events::RequestAware","name":"RequestAware"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Events","kind":"module","full_name":"Athena::Routing::Events","name":"Events"},"doc":"Emitted very late in the request's life-cycle, after the response has been sent.\n\nThis event can be listened on to perform tasks that are not required to finish before the response is sent; such as sending emails, or other \"heavy\" tasks.\n\nSee the [external documentation](https://athenaframework.org/components/#7-terminate-event) for more information.","summary":"<p>Emitted very late in the request's life-cycle, after the response has been sent.</p>","class_methods":[],"constructors":[{"id":"new(request:HTTP::Request,response:ART::Response)-class-method","html_id":"new(request:HTTP::Request,response:ART::Response)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"ART::Response"}],"args_string":"(request : HTTP::Request, response : ART::Response)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/events/terminate_event.cr#L14","def":{"name":"new","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"ART::Response"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(request, response)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"response:ART::Response-instance-method","html_id":"response:ART::Response-instance-method","name":"response","doc":"The response object.","summary":"<p>The response object.</p>","abstract":false,"args":[],"args_string":" : ART::Response","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/events/terminate_event.cr#L12","def":{"name":"response","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ART::Response","visibility":"Public","body":"@response"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Events/View","path":"Athena/Routing/Events/View.html","kind":"class","full_name":"Athena::Routing::Events::View","name":"View","abstract":false,"superclass":{"html_id":"athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"},"ancestors":[{"html_id":"athena/Athena/Routing/Events/RequestAware","kind":"module","full_name":"Athena::Routing::Events::RequestAware","name":"RequestAware"},{"html_id":"athena/Athena/Routing/Events/SettableResponse","kind":"module","full_name":"Athena::Routing::Events::SettableResponse","name":"SettableResponse"},{"html_id":"athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"},{"html_id":"athena/Athena/EventDispatcher/StoppableEvent","kind":"module","full_name":"Athena::EventDispatcher::StoppableEvent","name":"StoppableEvent"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/events/view_event.cr","line_number":9,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/events/view_event.cr#L9"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Routing/Events/RequestAware","kind":"module","full_name":"Athena::Routing::Events::RequestAware","name":"RequestAware"},{"html_id":"athena/Athena/Routing/Events/SettableResponse","kind":"module","full_name":"Athena::Routing::Events::SettableResponse","name":"SettableResponse"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Events","kind":"module","full_name":"Athena::Routing::Events","name":"Events"},"doc":"Emitted after the route's action has been executed, but only if it does _NOT_ return an `ART::Response`.\n\nThis event can be listened on to handle converting a non `ART::Response` into an `ART::Response`.\n\nSee `ART::Listeners::View` and the [external documentation](https://athenaframework.org/components/#4-view-event) for more information.","summary":"<p>Emitted after the route's action has been executed, but only if it does <em>NOT</em> return an <code><a href=\"../../../Athena/Routing/Response.html\">ART::Response</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(request:HTTP::Request,action_result:_)-class-method","html_id":"new(request:HTTP::Request,action_result:_)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"action_result","doc":null,"default_value":"","external_name":"action_result","restriction":"_"}],"args_string":"(request : HTTP::Request, action_result : _)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/events/view_event.cr#L21","def":{"name":"new","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"action_result","doc":null,"default_value":"","external_name":"action_result","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(request, action_result)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"action_result-instance-method","html_id":"action_result-instance-method","name":"action_result","doc":"Returns the value returned from the related controller action.","summary":"<p>Returns the value returned from the related controller action.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/events/view_event.cr#L28","def":{"name":"action_result","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@result.data"}},{"id":"action_result=(value:_):Nil-instance-method","html_id":"action_result=(value:_):Nil-instance-method","name":"action_result=","doc":"Overrides the return value of the related controller action.\n\nCan be used to mutate the controller action's returned value within a listener context;\nsuch as for pagination.","summary":"<p>Overrides the return value of the related controller action.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"args_string":"(value : _) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/events/view_event.cr#L36","def":{"name":"action_result=","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@result = ResultContainer.new(value)"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Routing/Exceptions","path":"Athena/Routing/Exceptions.html","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/athena.cr","line_number":65,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/athena.cr#L65"},{"filename":"src/exceptions/http_exception.cr","line_number":17,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/http_exception.cr#L17"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Exception handling in Athena is similar to exception handling in any Crystal program, with the addition of a new unique exception type, `ART::Exceptions::HTTPException`.\n\nWhen an exception is raised, Athena emits the `ART::Events::Exception` event to allow an opportunity for it to be handled.  If the exception goes unhandled, i.e. no listener set\nan `ART::Response` on the event, then the request is finished and the exception is reraised.  Otherwise, that response is returned, setting the status and merging the headers on the exceptions\nif it is an `ART::Exceptions::HTTPException`. See `ART::Listeners::Error` and `ART::ErrorRendererInterface` for more information on how exceptions are handled by default.\n\nTo provide the best response to the client, non `ART::Exceptions::HTTPException` should be rescued and converted into a corresponding `ART::Exceptions::HTTPException`.\nCustom HTTP errors can also be defined by inheriting from `ART::Exceptions::HTTPException` or a child type.  A use case for this could be allowing for additional data/context to be included\nwithin the exception that ultimately could be used in a `ART::Events::Exception` listener.","summary":"<p>Exception handling in Athena is similar to exception handling in any Crystal program, with the addition of a new unique exception type, <code><a href=\"../../Athena/Routing/Exceptions/HTTPException.html\">ART::Exceptions::HTTPException</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Routing/Exceptions/BadGateway","path":"Athena/Routing/Exceptions/BadGateway.html","kind":"class","full_name":"Athena::Routing::Exceptions::BadGateway","name":"BadGateway","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/exceptions/bad_gateway.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/bad_gateway.cr#L3"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/bad_gateway.cr#L4","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/BadRequest","path":"Athena/Routing/Exceptions/BadRequest.html","kind":"class","full_name":"Athena::Routing::Exceptions::BadRequest","name":"BadRequest","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/exceptions/bad_request.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/bad_request.cr#L3"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/bad_request.cr#L4","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/Conflict","path":"Athena/Routing/Exceptions/Conflict.html","kind":"class","full_name":"Athena::Routing::Exceptions::Conflict","name":"Conflict","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/exceptions/conflict.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/conflict.cr#L3"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/conflict.cr#L4","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/Forbidden","path":"Athena/Routing/Exceptions/Forbidden.html","kind":"class","full_name":"Athena::Routing::Exceptions::Forbidden","name":"Forbidden","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/exceptions/forbidden.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/forbidden.cr#L3"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/forbidden.cr#L4","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/Gone","path":"Athena/Routing/Exceptions/Gone.html","kind":"class","full_name":"Athena::Routing::Exceptions::Gone","name":"Gone","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/exceptions/gone.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/gone.cr#L3"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/gone.cr#L4","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","path":"Athena/Routing/Exceptions/HTTPException.html","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException","abstract":false,"superclass":{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/exceptions/http_exception.cr","line_number":17,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/http_exception.cr#L17"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Routing/Exceptions/BadGateway","kind":"class","full_name":"Athena::Routing::Exceptions::BadGateway","name":"BadGateway"},{"html_id":"athena/Athena/Routing/Exceptions/BadRequest","kind":"class","full_name":"Athena::Routing::Exceptions::BadRequest","name":"BadRequest"},{"html_id":"athena/Athena/Routing/Exceptions/Conflict","kind":"class","full_name":"Athena::Routing::Exceptions::Conflict","name":"Conflict"},{"html_id":"athena/Athena/Routing/Exceptions/Forbidden","kind":"class","full_name":"Athena::Routing::Exceptions::Forbidden","name":"Forbidden"},{"html_id":"athena/Athena/Routing/Exceptions/Gone","kind":"class","full_name":"Athena::Routing::Exceptions::Gone","name":"Gone"},{"html_id":"athena/Athena/Routing/Exceptions/LengthRequired","kind":"class","full_name":"Athena::Routing::Exceptions::LengthRequired","name":"LengthRequired"},{"html_id":"athena/Athena/Routing/Exceptions/MethodNotAllowed","kind":"class","full_name":"Athena::Routing::Exceptions::MethodNotAllowed","name":"MethodNotAllowed"},{"html_id":"athena/Athena/Routing/Exceptions/NotAcceptable","kind":"class","full_name":"Athena::Routing::Exceptions::NotAcceptable","name":"NotAcceptable"},{"html_id":"athena/Athena/Routing/Exceptions/NotFound","kind":"class","full_name":"Athena::Routing::Exceptions::NotFound","name":"NotFound"},{"html_id":"athena/Athena/Routing/Exceptions/NotImplemented","kind":"class","full_name":"Athena::Routing::Exceptions::NotImplemented","name":"NotImplemented"},{"html_id":"athena/Athena/Routing/Exceptions/PreconditionFailed","kind":"class","full_name":"Athena::Routing::Exceptions::PreconditionFailed","name":"PreconditionFailed"},{"html_id":"athena/Athena/Routing/Exceptions/ServiceUnavailable","kind":"class","full_name":"Athena::Routing::Exceptions::ServiceUnavailable","name":"ServiceUnavailable"},{"html_id":"athena/Athena/Routing/Exceptions/TooManyRequests","kind":"class","full_name":"Athena::Routing::Exceptions::TooManyRequests","name":"TooManyRequests"},{"html_id":"athena/Athena/Routing/Exceptions/Unauthorized","kind":"class","full_name":"Athena::Routing::Exceptions::Unauthorized","name":"Unauthorized"},{"html_id":"athena/Athena/Routing/Exceptions/UnprocessableEntity","kind":"class","full_name":"Athena::Routing::Exceptions::UnprocessableEntity","name":"UnprocessableEntity"},{"html_id":"athena/Athena/Routing/Exceptions/UnsupportedMediaType","kind":"class","full_name":"Athena::Routing::Exceptions::UnsupportedMediaType","name":"UnsupportedMediaType"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":"Represents an HTTP error.\n\nEach child represents a specific HTTP error with the associated status code.\nAlso optionally allows adding headers to the resulting response.\n\nCan be used directly/inherited from to represent non-typical HTTP errors/codes.","summary":"<p>Represents an HTTP error.</p>","class_methods":[],"constructors":[{"id":"new(status:HTTP::Status,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(status:HTTP::Status,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":"Instantiates `self` with the given *status* and *message*.\n\nOptionally includes *cause*, and *headers*.","summary":"<p>Instantiates <code>self</code> with the given <em>status</em> and <em>message</em>.</p>","abstract":false,"args":[{"name":"status","doc":null,"default_value":"","external_name":"status","restriction":"HTTP::Status"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(status : HTTP::Status, message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/http_exception.cr#L29","def":{"name":"new","args":[{"name":"status","doc":null,"default_value":"","external_name":"status","restriction":"HTTP::Status"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(status, message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(status_code:Int32,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(status_code:Int32,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":"Instantiates `self` with the given *status_code* and *message*.\n\nOptionally includes *cause*, and *headers*.","summary":"<p>Instantiates <code>self</code> with the given <em>status_code</em> and <em>message</em>.</p>","abstract":false,"args":[{"name":"status_code","doc":null,"default_value":"","external_name":"status_code","restriction":"Int32"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(status_code : Int32, message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/http_exception.cr#L36","def":{"name":"new","args":[{"name":"status_code","doc":null,"default_value":"","external_name":"status_code","restriction":"Int32"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(HTTP::Status.new(status_code), message, cause, headers)"}}],"instance_methods":[{"id":"headers:HTTP::Headers-instance-method","html_id":"headers:HTTP::Headers-instance-method","name":"headers","doc":"Any HTTP response headers associated with `self`.\n\nSome HTTP errors use response headers to give additional information about `self`.","summary":"<p>Any HTTP response headers associated with <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : HTTP::Headers","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/http_exception.cr#L24","def":{"name":"headers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::Headers","visibility":"Public","body":"@headers"}},{"id":"headers=(headers:HTTP::Headers)-instance-method","html_id":"headers=(headers:HTTP::Headers)-instance-method","name":"headers=","doc":"Any HTTP response headers associated with `self`.\n\nSome HTTP errors use response headers to give additional information about `self`.","summary":"<p>Any HTTP response headers associated with <code>self</code>.</p>","abstract":false,"args":[{"name":"headers","doc":null,"default_value":"","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(headers : HTTP::Headers)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/http_exception.cr#L24","def":{"name":"headers=","args":[{"name":"headers","doc":null,"default_value":"","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@headers = headers"}},{"id":"status:HTTP::Status-instance-method","html_id":"status:HTTP::Status-instance-method","name":"status","doc":"The `HTTP::Status` associated with `self`.","summary":"<p>The <code>HTTP::Status</code> associated with <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : HTTP::Status","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/http_exception.cr#L19","def":{"name":"status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::Status","visibility":"Public","body":"@status"}},{"id":"status_code:Int32-instance-method","html_id":"status_code:Int32-instance-method","name":"status_code","doc":"Returns the HTTP status code of `#status`.","summary":"<p>Returns the HTTP status code of <code><a href=\"../../../Athena/Routing/Exceptions/HTTPException.html#status:HTTP::Status-instance-method\">#status</a></code>.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/http_exception.cr#L41","def":{"name":"status_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@status.value"}},{"id":"to_json(builder:JSON::Builder):Nil-instance-method","html_id":"to_json(builder:JSON::Builder):Nil-instance-method","name":"to_json","doc":"Serializes `self` to JSON in the format of `{\"code\":400,\"message\":\"Exception message\"}`","summary":"<p>Serializes <code>self</code> to JSON in the format of <code>{\"code\":400,\"message\":\"Exception message\"}</code></p>","abstract":false,"args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"JSON::Builder"}],"args_string":"(builder : JSON::Builder) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/http_exception.cr#L46","def":{"name":"to_json","args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"builder.object do\n  builder.field(\"code\", self.status_code)\n  builder.field(\"message\", @message)\nend"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/InvalidParameter","path":"Athena/Routing/Exceptions/InvalidParameter.html","kind":"class","full_name":"Athena::Routing::Exceptions::InvalidParameter","name":"InvalidParameter","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/UnprocessableEntity","kind":"class","full_name":"Athena::Routing::Exceptions::UnprocessableEntity","name":"UnprocessableEntity"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/UnprocessableEntity","kind":"class","full_name":"Athena::Routing::Exceptions::UnprocessableEntity","name":"UnprocessableEntity"},{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/exceptions/invalid_parameter.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/invalid_parameter.cr#L3"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(parameter:ART::Params::ParamInterface,violations:AVD::Violation::ConstraintViolationListInterface,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(parameter:ART::Params::ParamInterface,violations:AVD::Violation::ConstraintViolationListInterface,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"parameter","doc":null,"default_value":"","external_name":"parameter","restriction":"ART::Params::ParamInterface"},{"name":"violations","doc":null,"default_value":"","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationListInterface"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(parameter : ART::Params::ParamInterface, violations : AVD::Violation::ConstraintViolationListInterface, message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/invalid_parameter.cr#L19","def":{"name":"new","args":[{"name":"parameter","doc":null,"default_value":"","external_name":"parameter","restriction":"ART::Params::ParamInterface"},{"name":"violations","doc":null,"default_value":"","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationListInterface"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(parameter, violations, message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"with_violations(parameter:ART::Params::ParamInterface,violations:AVD::Violation::ConstraintViolationListInterface):self-class-method","html_id":"with_violations(parameter:ART::Params::ParamInterface,violations:AVD::Violation::ConstraintViolationListInterface):self-class-method","name":"with_violations","doc":null,"summary":null,"abstract":false,"args":[{"name":"parameter","doc":null,"default_value":"","external_name":"parameter","restriction":"ART::Params::ParamInterface"},{"name":"violations","doc":null,"default_value":"","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationListInterface"}],"args_string":"(parameter : ART::Params::ParamInterface, violations : AVD::Violation::ConstraintViolationListInterface) : <span class=\"k\">self</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/invalid_parameter.cr#L7","def":{"name":"with_violations","args":[{"name":"parameter","doc":null,"default_value":"","external_name":"parameter","restriction":"ART::Params::ParamInterface"},{"name":"violations","doc":null,"default_value":"","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationListInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"message = String.build do |str|\n  violations.each do |violation|\n    invalid_value = violation.invalid_value\n    str.puts(\"Parameter '#{parameter.name}#{violation.property_path}' of value '#{invalid_value}' violated a constraint: '#{violation.message}'\")\n  end\nend\nnew(parameter, violations, message)\n"}}],"instance_methods":[{"id":"parameter:ART::Params::ParamInterface-instance-method","html_id":"parameter:ART::Params::ParamInterface-instance-method","name":"parameter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ART::Params::ParamInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/invalid_parameter.cr#L4","def":{"name":"parameter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ART::Params::ParamInterface","visibility":"Public","body":"@parameter"}},{"id":"violations:AVD::Violation::ConstraintViolationListInterface-instance-method","html_id":"violations:AVD::Violation::ConstraintViolationListInterface-instance-method","name":"violations","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : AVD::Violation::ConstraintViolationListInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/invalid_parameter.cr#L5","def":{"name":"violations","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationListInterface","visibility":"Public","body":"@violations"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/LengthRequired","path":"Athena/Routing/Exceptions/LengthRequired.html","kind":"class","full_name":"Athena::Routing::Exceptions::LengthRequired","name":"LengthRequired","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/exceptions/length_required.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/length_required.cr#L3"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/length_required.cr#L4","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/MethodNotAllowed","path":"Athena/Routing/Exceptions/MethodNotAllowed.html","kind":"class","full_name":"Athena::Routing::Exceptions::MethodNotAllowed","name":"MethodNotAllowed","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/exceptions/method_not_allowed.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/method_not_allowed.cr#L3"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/method_not_allowed.cr#L4","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/NotAcceptable","path":"Athena/Routing/Exceptions/NotAcceptable.html","kind":"class","full_name":"Athena::Routing::Exceptions::NotAcceptable","name":"NotAcceptable","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/exceptions/not_acceptable.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/not_acceptable.cr#L3"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/not_acceptable.cr#L4","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/NotFound","path":"Athena/Routing/Exceptions/NotFound.html","kind":"class","full_name":"Athena::Routing::Exceptions::NotFound","name":"NotFound","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/exceptions/not_found.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/not_found.cr#L3"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/not_found.cr#L4","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/NotImplemented","path":"Athena/Routing/Exceptions/NotImplemented.html","kind":"class","full_name":"Athena::Routing::Exceptions::NotImplemented","name":"NotImplemented","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/exceptions/not_implemented.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/not_implemented.cr#L3"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/not_implemented.cr#L4","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/PreconditionFailed","path":"Athena/Routing/Exceptions/PreconditionFailed.html","kind":"class","full_name":"Athena::Routing::Exceptions::PreconditionFailed","name":"PreconditionFailed","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/exceptions/precondition_failed.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/precondition_failed.cr#L3"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/precondition_failed.cr#L4","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/ServiceUnavailable","path":"Athena/Routing/Exceptions/ServiceUnavailable.html","kind":"class","full_name":"Athena::Routing::Exceptions::ServiceUnavailable","name":"ServiceUnavailable","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/exceptions/service_unavailable.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/service_unavailable.cr#L3"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,retry_after:Number|String|Nil=nil,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,retry_after:Number|String|Nil=nil,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":"See `Athena::Routing::Exceptions::HTTPException#new`.\n\nIf *retry_after* is provided, adds a `retry-after` header that represents the number of seconds or HTTP-date after which the request may be retried.","summary":"<p>See <code><a href=\"../../../Athena/Routing/Exceptions/HTTPException.html#new(status:HTTP::Status,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method\">Athena::Routing::Exceptions::HTTPException#new</a></code>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"retry_after","doc":null,"default_value":"nil","external_name":"retry_after","restriction":"Number | String | Nil"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, retry_after : Number | String | Nil = <span class=\"n\">nil</span>, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/service_unavailable.cr#L7","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"retry_after","doc":null,"default_value":"nil","external_name":"retry_after","restriction":"Number | String | Nil"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, retry_after, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/TooManyRequests","path":"Athena/Routing/Exceptions/TooManyRequests.html","kind":"class","full_name":"Athena::Routing::Exceptions::TooManyRequests","name":"TooManyRequests","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/exceptions/too_many_requests.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/too_many_requests.cr#L3"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,retry_after:Number|String|Nil=nil,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,retry_after:Number|String|Nil=nil,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":"See `Athena::Routing::Exceptions::HTTPException#new`.\n\nIf *retry_after* is provided, adds a `retry-after` header that represents the number of seconds or HTTP-date after which the request may be retried.","summary":"<p>See <code><a href=\"../../../Athena/Routing/Exceptions/HTTPException.html#new(status:HTTP::Status,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method\">Athena::Routing::Exceptions::HTTPException#new</a></code>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"retry_after","doc":null,"default_value":"nil","external_name":"retry_after","restriction":"Number | String | Nil"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, retry_after : Number | String | Nil = <span class=\"n\">nil</span>, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/too_many_requests.cr#L7","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"retry_after","doc":null,"default_value":"nil","external_name":"retry_after","restriction":"Number | String | Nil"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, retry_after, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/Unauthorized","path":"Athena/Routing/Exceptions/Unauthorized.html","kind":"class","full_name":"Athena::Routing::Exceptions::Unauthorized","name":"Unauthorized","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/exceptions/unauthorized.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/unauthorized.cr#L3"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,challenge:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,challenge:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":"See `Athena::Routing::Exceptions::HTTPException#new`.\n\nIncludes a `www-authenticate` header with the provided *challenge*.","summary":"<p>See <code><a href=\"../../../Athena/Routing/Exceptions/HTTPException.html#new(status:HTTP::Status,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method\">Athena::Routing::Exceptions::HTTPException#new</a></code>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"challenge","doc":null,"default_value":"","external_name":"challenge","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, challenge : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/unauthorized.cr#L7","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"challenge","doc":null,"default_value":"","external_name":"challenge","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, challenge, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/UnprocessableEntity","path":"Athena/Routing/Exceptions/UnprocessableEntity.html","kind":"class","full_name":"Athena::Routing::Exceptions::UnprocessableEntity","name":"UnprocessableEntity","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/exceptions/unprocessable_entity.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/unprocessable_entity.cr#L3"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Routing/Exceptions/InvalidParameter","kind":"class","full_name":"Athena::Routing::Exceptions::InvalidParameter","name":"InvalidParameter"},{"html_id":"athena/Athena/Validator/Exceptions/ValidationFailed","kind":"class","full_name":"Athena::Validator::Exceptions::ValidationFailed","name":"ValidationFailed"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/unprocessable_entity.cr#L4","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/UnsupportedMediaType","path":"Athena/Routing/Exceptions/UnsupportedMediaType.html","kind":"class","full_name":"Athena::Routing::Exceptions::UnsupportedMediaType","name":"UnsupportedMediaType","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/exceptions/unsupported_media_type.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/unsupported_media_type.cr#L3"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/exceptions/unsupported_media_type.cr#L4","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Routing/Listeners","path":"Athena/Routing/Listeners.html","kind":"module","full_name":"Athena::Routing::Listeners","name":"Listeners","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/athena.cr","line_number":70,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/athena.cr#L70"},{"filename":"src/listeners/cors_listener.cr","line_number":6,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/listeners/cors_listener.cr#L6"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"TAG","name":"TAG","value":"\"athena.event_dispatcher.listener\"","doc":"The tag name for Athena event listeners.","summary":"<p>The tag name for Athena event listeners.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"The `AED::EventListenerInterface` that act upon `ART::Events` to handle a request.  Custom listeners can also be defined, see `AED::EventListenerInterface`.\n\nSee each listener and the [external documentation](https://athenaframework.org/components/event_dispatcher/) for more information.","summary":"<p>The <code><a href=\"../../Athena/EventDispatcher/EventListenerInterface.html\">AED::EventListenerInterface</a></code> that act upon <code><a href=\"../../Athena/Routing/Events.html\">ART::Events</a></code> to handle a request.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Routing/Listeners/CORS","path":"Athena/Routing/Listeners/CORS.html","kind":"struct","full_name":"Athena::Routing::Listeners::CORS","name":"CORS","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/EventDispatcher/EventListenerInterface","kind":"module","full_name":"Athena::EventDispatcher::EventListenerInterface","name":"EventListenerInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/listeners/cors_listener.cr","line_number":6,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/listeners/cors_listener.cr#L6"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"SAFELISTED_HEADERS","name":"SAFELISTED_HEADERS","value":"[\"accept\", \"accept-language\", \"content-language\", \"content-type\", \"origin\"]","doc":"The [CORS-safelisted request-headers](https://fetch.spec.whatwg.org/#cors-safelisted-request-header).","summary":"<p>The <a href=\"https://fetch.spec.whatwg.org/#cors-safelisted-request-header\" target=\"_blank\">CORS-safelisted request-headers</a>.</p>"},{"id":"SAFELISTED_METHODS","name":"SAFELISTED_METHODS","value":"[\"GET\", \"POST\", \"HEAD\"]","doc":"The [CORS-safelisted methods](https://fetch.spec.whatwg.org/#cors-safelisted-method).","summary":"<p>The <a href=\"https://fetch.spec.whatwg.org/#cors-safelisted-method\" target=\"_blank\">CORS-safelisted methods</a>.</p>"}],"included_modules":[{"html_id":"athena/Athena/EventDispatcher/EventListenerInterface","kind":"module","full_name":"Athena::EventDispatcher::EventListenerInterface","name":"EventListenerInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Listeners","kind":"module","full_name":"Athena::Routing::Listeners","name":"Listeners"},"doc":"Handles [Cross-Origin Resource Sharing](https://enable-cors.org) (CORS).\n\nHandles CORS preflight `OPTIONS` requests as well as adding CORS headers to each response.\nSee `ART::Config::CORS` for information on configuring the listener.","summary":"<p>Handles <a href=\"https://enable-cors.org\" target=\"_blank\">Cross-Origin Resource Sharing</a> (CORS).</p>","class_methods":[{"id":"subscribed_events:AED::SubscribedEvents-class-method","html_id":"subscribed_events:AED::SubscribedEvents-class-method","name":"subscribed_events","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : AED::SubscribedEvents","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/listeners/cors_listener.cr#L88","def":{"name":"subscribed_events","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AED::SubscribedEvents","visibility":"Public","body":"AED::SubscribedEvents {ART::Events::Request => 250, ART::Events::Response => 0}"}}],"constructors":[{"id":"new(configuration_resolver:ACF::ConfigurationResolverInterface)-class-method","html_id":"new(configuration_resolver:ACF::ConfigurationResolverInterface)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"configuration_resolver","doc":null,"default_value":"","external_name":"configuration_resolver","restriction":"ACF::ConfigurationResolverInterface"}],"args_string":"(configuration_resolver : ACF::ConfigurationResolverInterface)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/listeners/cors_listener.cr#L95","def":{"name":"new","args":[{"name":"configuration_resolver","doc":null,"default_value":"","external_name":"configuration_resolver","restriction":"ACF::ConfigurationResolverInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(configuration_resolver)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(event:ART::Events::Request,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","html_id":"call(event:ART::Events::Request,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::Request"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"args_string":"(event : ART::Events::Request, dispatcher : AED::EventDispatcherInterface) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/listeners/cors_listener.cr#L97","def":{"name":"call","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::Request"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"request = event.request\nrequest_headers = RequestHeaders.new(request.headers)\nif config = @configuration_resolver.resolve(ART::Config::CORS)\nelse\n  return\nend\nif request.headers.has_key?(\"origin\")\nelse\n  return\nend\nif (request.method == \"OPTIONS\") && request_headers.has_request_method?\n  return event.response = set_preflight_response(config, event.request)\nend\nif check_origin(config, event.request)\nelse\n  return\nend\nevent.request.attributes.set(ALLOW_SET_ORIGIN, true, Bool)\n"}},{"id":"call(event:ART::Events::Response,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","html_id":"call(event:ART::Events::Response,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::Response"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"args_string":"(event : ART::Events::Response, dispatcher : AED::EventDispatcherInterface) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/listeners/cors_listener.cr#L118","def":{"name":"call","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::Response"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if event.request.attributes.get?(ALLOW_SET_ORIGIN)\nelse\n  return\nend\nif config = @configuration_resolver.resolve(ART::Config::CORS)\nelse\n  return\nend\nrequest_headers = RequestHeaders.new(event.request.headers)\nresponse_headers = ResponseHeaders.new(event.response.headers)\nresponse_headers.allow_origin = request_headers.origin\nresponse_headers.allow_credentials = config.allow_credentials\nresponse_headers.expose_headers = config.expose_headers\n"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Listeners/Error","path":"Athena/Routing/Listeners/Error.html","kind":"struct","full_name":"Athena::Routing::Listeners::Error","name":"Error","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/EventDispatcher/EventListenerInterface","kind":"module","full_name":"Athena::EventDispatcher::EventListenerInterface","name":"EventListenerInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/listeners/error_listener.cr","line_number":28,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/listeners/error_listener.cr#L28"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/EventDispatcher/EventListenerInterface","kind":"module","full_name":"Athena::EventDispatcher::EventListenerInterface","name":"EventListenerInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Listeners","kind":"module","full_name":"Athena::Routing::Listeners","name":"Listeners"},"doc":"Handles an exception by converting it into an `ART::Response` via an `ART::ErrorRendererInterface`.\n\nThis listener defines a `log_exception` protected method that determines how the exception gets logged.\nNon `ART::Exceptions::HTTPException`s and server errors are logged as errors.\nValidation errors (`ART::Exceptions::UnprocessableEntity`) are logged as notice.\nEverything else is logged as a warning.\nThe method can be redefined if different logic is desired.\n\n```\nstruct ART::Listeners::Error\n  # :inherit:\n  protected def log_exception(exception : Exception, & : -> String) : Nil\n    # Don't log anything if an exception is some specific type.\n    return if exception.is_a? MyException\n\n    # Exception types could also include modules to act as interfaces to determine their level, E.g. `include NoticeException`.\n    if exception.is_a? NoticeException\n      LOGGER.notice(exception: exception) { yield }\n      return\n    end\n\n    # Otherwise fallback to the default implementation.\n    previous_def\n  end\nend\n```","summary":"<p>Handles an exception by converting it into an <code><a href=\"../../../Athena/Routing/Response.html\">ART::Response</a></code> via an <code><a href=\"../../../Athena/Routing/ErrorRendererInterface.html\">ART::ErrorRendererInterface</a></code>.</p>","class_methods":[{"id":"subscribed_events:AED::SubscribedEvents-class-method","html_id":"subscribed_events:AED::SubscribedEvents-class-method","name":"subscribed_events","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : AED::SubscribedEvents","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/listeners/error_listener.cr#L31","def":{"name":"subscribed_events","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AED::SubscribedEvents","visibility":"Public","body":"AED::SubscribedEvents {ART::Events::Exception => -50}"}}],"constructors":[{"id":"new(error_renderer:ART::ErrorRendererInterface)-class-method","html_id":"new(error_renderer:ART::ErrorRendererInterface)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"error_renderer","doc":null,"default_value":"","external_name":"error_renderer","restriction":"ART::ErrorRendererInterface"}],"args_string":"(error_renderer : ART::ErrorRendererInterface)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/listeners/error_listener.cr#L37","def":{"name":"new","args":[{"name":"error_renderer","doc":null,"default_value":"","external_name":"error_renderer","restriction":"ART::ErrorRendererInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(error_renderer)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(event:ART::Events::Exception,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","html_id":"call(event:ART::Events::Exception,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::Exception"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"args_string":"(event : ART::Events::Exception, dispatcher : AED::EventDispatcherInterface) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/listeners/error_listener.cr#L39","def":{"name":"call","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::Exception"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"begin\n  exception = event.exception\n  log_exception(exception) do\n    \"Uncaught exception #{exception.inspect} at #{exception.backtrace?.try(&.first)}\"\n  end\n  event.response = @error_renderer.render(event.exception)\nrescue ex : Exception\n  log_exception(ex) do\n    \"Exception raised when handling an exception #{ex.inspect} at #{ex.backtrace?.try(&.first)}\"\n  end\n  raise(ex)\nend"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Listeners/ParamConverter","path":"Athena/Routing/Listeners/ParamConverter.html","kind":"struct","full_name":"Athena::Routing::Listeners::ParamConverter","name":"ParamConverter","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/EventDispatcher/EventListenerInterface","kind":"module","full_name":"Athena::EventDispatcher::EventListenerInterface","name":"EventListenerInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/listeners/param_converter_listener.cr","line_number":5,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/listeners/param_converter_listener.cr#L5"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/EventDispatcher/EventListenerInterface","kind":"module","full_name":"Athena::EventDispatcher::EventListenerInterface","name":"EventListenerInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Listeners","kind":"module","full_name":"Athena::Routing::Listeners","name":"Listeners"},"doc":"Applies any `ART::ParamConverterInterface` defined on a given `ART::Action`.\n\nInjects all `ART::ParamConverterInterface` tagged with `ART::ParamConverterInterface::TAG`.","summary":"<p>Applies any <code><a href=\"../../../Athena/Routing/ParamConverterInterface.html\">ART::ParamConverterInterface</a></code> defined on a given <code><a href=\"../../../Athena/Routing/Action.html\">ART::Action</a></code>.</p>","class_methods":[{"id":"subscribed_events:AED::SubscribedEvents-class-method","html_id":"subscribed_events:AED::SubscribedEvents-class-method","name":"subscribed_events","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : AED::SubscribedEvents","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/listeners/param_converter_listener.cr#L8","def":{"name":"subscribed_events","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AED::SubscribedEvents","visibility":"Public","body":"AED::SubscribedEvents {ART::Events::Action => -250}"}}],"constructors":[{"id":"new(param_converters:Array(ART::ParamConverterInterface))-class-method","html_id":"new(param_converters:Array(ART::ParamConverterInterface))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"param_converters","doc":null,"default_value":"","external_name":"param_converters","restriction":"Array(ART::ParamConverterInterface)"}],"args_string":"(param_converters : Array(ART::ParamConverterInterface))","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/listeners/param_converter_listener.cr#L16","def":{"name":"new","args":[{"name":"param_converters","doc":null,"default_value":"","external_name":"param_converters","restriction":"Array(ART::ParamConverterInterface)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(param_converters)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(event:ART::Events::Action,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","html_id":"call(event:ART::Events::Action,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::Action"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"args_string":"(event : ART::Events::Action, dispatcher : AED::EventDispatcherInterface) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/listeners/param_converter_listener.cr#L22","def":{"name":"call","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::Action"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"event.action.param_converters.each do |configuration|\n  @param_converters[configuration.converter].apply(event.request, configuration)\nend"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Listeners/ParamFetcher","path":"Athena/Routing/Listeners/ParamFetcher.html","kind":"struct","full_name":"Athena::Routing::Listeners::ParamFetcher","name":"ParamFetcher","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/EventDispatcher/EventListenerInterface","kind":"module","full_name":"Athena::EventDispatcher::EventListenerInterface","name":"EventListenerInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/listeners/param_fetcher_listener.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/listeners/param_fetcher_listener.cr#L2"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/EventDispatcher/EventListenerInterface","kind":"module","full_name":"Athena::EventDispatcher::EventListenerInterface","name":"EventListenerInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Listeners","kind":"module","full_name":"Athena::Routing::Listeners","name":"Listeners"},"doc":null,"summary":null,"class_methods":[{"id":"subscribed_events:AED::SubscribedEvents-class-method","html_id":"subscribed_events:AED::SubscribedEvents-class-method","name":"subscribed_events","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : AED::SubscribedEvents","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/listeners/param_fetcher_listener.cr#L5","def":{"name":"subscribed_events","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AED::SubscribedEvents","visibility":"Public","body":"AED::SubscribedEvents {ART::Events::Action => 5}"}}],"constructors":[{"id":"new(param_fetcher:ART::Params::ParamFetcherInterface)-class-method","html_id":"new(param_fetcher:ART::Params::ParamFetcherInterface)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"param_fetcher","doc":null,"default_value":"","external_name":"param_fetcher","restriction":"ART::Params::ParamFetcherInterface"}],"args_string":"(param_fetcher : ART::Params::ParamFetcherInterface)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/listeners/param_fetcher_listener.cr#L11","def":{"name":"new","args":[{"name":"param_fetcher","doc":null,"default_value":"","external_name":"param_fetcher","restriction":"ART::Params::ParamFetcherInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(param_fetcher)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(event:ART::Events::Action,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","html_id":"call(event:ART::Events::Action,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::Action"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"args_string":"(event : ART::Events::Action, dispatcher : AED::EventDispatcherInterface) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/listeners/param_fetcher_listener.cr#L13","def":{"name":"call","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::Action"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"request = event.request\n@param_fetcher.each do |name, value|\n  if (request.attributes.has?(name)) && (!request.attributes.get(name).nil?)\n    raise(ArgumentError.new(\"Parameter '#{name}' conflicts with a path parameter for route '#{request.action.name}'.\"))\n  end\n  request.attributes.set(name, value)\nend\n"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Listeners/Routing","path":"Athena/Routing/Listeners/Routing.html","kind":"struct","full_name":"Athena::Routing::Listeners::Routing","name":"Routing","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/EventDispatcher/EventListenerInterface","kind":"module","full_name":"Athena::EventDispatcher::EventListenerInterface","name":"EventListenerInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/listeners/routing_listener.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/listeners/routing_listener.cr#L3"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/EventDispatcher/EventListenerInterface","kind":"module","full_name":"Athena::EventDispatcher::EventListenerInterface","name":"EventListenerInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Listeners","kind":"module","full_name":"Athena::Routing::Listeners","name":"Listeners"},"doc":"Sets the related `ART::Action` on the current request via an `ART::RequestMatcherInterface`.","summary":"<p>Sets the related <code><a href=\"../../../Athena/Routing/Action.html\">ART::Action</a></code> on the current request via an <code><a href=\"../../../Athena/Routing/RequestMatcherInterface.html\">ART::RequestMatcherInterface</a></code>.</p>","class_methods":[{"id":"subscribed_events:AED::SubscribedEvents-class-method","html_id":"subscribed_events:AED::SubscribedEvents-class-method","name":"subscribed_events","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : AED::SubscribedEvents","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/listeners/routing_listener.cr#L6","def":{"name":"subscribed_events","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AED::SubscribedEvents","visibility":"Public","body":"AED::SubscribedEvents {ART::Events::Request => 25}"}}],"constructors":[{"id":"new(matcher:ART::RequestMatcherInterface)-class-method","html_id":"new(matcher:ART::RequestMatcherInterface)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"matcher","doc":null,"default_value":"","external_name":"matcher","restriction":"ART::RequestMatcherInterface"}],"args_string":"(matcher : ART::RequestMatcherInterface)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/listeners/routing_listener.cr#L12","def":{"name":"new","args":[{"name":"matcher","doc":null,"default_value":"","external_name":"matcher","restriction":"ART::RequestMatcherInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(matcher)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(event:ART::Events::Request,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","html_id":"call(event:ART::Events::Request,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","name":"call","doc":"Assigns the resolved `ART::Action` and path parameters to the request.\n\nThe resolved route is dupped to avoid mutating the master copy in the singleton.","summary":"<p>Assigns the resolved <code><a href=\"../../../Athena/Routing/Action.html\">ART::Action</a></code> and path parameters to the request.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::Request"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"args_string":"(event : ART::Events::Request, dispatcher : AED::EventDispatcherInterface) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/listeners/routing_listener.cr#L17","def":{"name":"call","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::Request"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"request = event.request\nroute = @matcher.match(request)\nLOGGER.info(&.emit(\"Matched route #{request.path}\", uri: request.path, method: request.method, path_params: route.params, query_params: request.query_params.to_h))\nrequest.action = route.payload.not_nil!.dup\nroute.params.not_nil!.each do |key, value|\n  event.request.attributes.set(key, value)\nend\n"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Listeners/View","path":"Athena/Routing/Listeners/View.html","kind":"struct","full_name":"Athena::Routing::Listeners::View","name":"View","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/EventDispatcher/EventListenerInterface","kind":"module","full_name":"Athena::EventDispatcher::EventListenerInterface","name":"EventListenerInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/listeners/view_listener.cr","line_number":10,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/listeners/view_listener.cr#L10"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/EventDispatcher/EventListenerInterface","kind":"module","full_name":"Athena::EventDispatcher::EventListenerInterface","name":"EventListenerInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Listeners","kind":"module","full_name":"Athena::Routing::Listeners","name":"Listeners"},"doc":"The view listener attempts to resolve a non `ART::Response` into an `ART::Response`.\nCurrently this is achieved by JSON serializing the controller action's resulting value;\neither via `Object#to_json` or `ASR::Serializer`, depending on what type the resulting value is.\n\nIn the future this listener will handle executing the correct view handler based on the\nregistered formats and the format that the initial `HTTP::Request` requires.\n\nTODO: Implement a format negotiation algorithm.","summary":"<p>The view listener attempts to resolve a non <code><a href=\"../../../Athena/Routing/Response.html\">ART::Response</a></code> into an <code><a href=\"../../../Athena/Routing/Response.html\">ART::Response</a></code>.</p>","class_methods":[{"id":"subscribed_events:AED::SubscribedEvents-class-method","html_id":"subscribed_events:AED::SubscribedEvents-class-method","name":"subscribed_events","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : AED::SubscribedEvents","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/listeners/view_listener.cr#L13","def":{"name":"subscribed_events","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AED::SubscribedEvents","visibility":"Public","body":"AED::SubscribedEvents {ART::Events::View => 25}"}}],"constructors":[{"id":"new(serializer:ASR::SerializerInterface)-class-method","html_id":"new(serializer:ASR::SerializerInterface)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"serializer","doc":null,"default_value":"","external_name":"serializer","restriction":"ASR::SerializerInterface"}],"args_string":"(serializer : ASR::SerializerInterface)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/listeners/view_listener.cr#L19","def":{"name":"new","args":[{"name":"serializer","doc":null,"default_value":"","external_name":"serializer","restriction":"ASR::SerializerInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(serializer)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(event:ART::Events::View,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","html_id":"call(event:ART::Events::View,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::View"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"args_string":"(event : ART::Events::View, dispatcher : AED::EventDispatcherInterface) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/listeners/view_listener.cr#L21","def":{"name":"call","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::View"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"action = event.request.action\nview_context = action.view_context\nif action.return_type == Nil\n  return event.response = ART::Response.new(status: view_context.has_custom_status? ? view_context.status : HTTP::Status::NO_CONTENT, headers: get_headers)\nend\nresult = event.action_result\ndata = if result.is_a?(JSON::Serializable) && (!result.is_a?(ASR::Serializable))\n  result.to_json\nelse\n  context = ASR::SerializationContext.new\n  view_context.serialization_groups.try do |groups|\n    context.groups = groups\n  end\n  view_context.version.try do |version|\n    context.version = version\n  end\n  context.emit_nil = view_context.emit_nil\n  @serializer.serialize(result, :json, context)\nend\nevent.response = ART::Response.new(data, view_context.status, get_headers)\n"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Routing/ParamConverterInterface","path":"Athena/Routing/ParamConverterInterface.html","kind":"struct","full_name":"Athena::Routing::ParamConverterInterface","name":"ParamConverterInterface","abstract":true,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/param_converter_interface.cr","line_number":97,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/param_converter_interface.cr#L97"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"TAG","name":"TAG","value":"\"athena.param_converter\"","doc":"The tag name to apply to `self` in order for it to be registered with `ART::Listeners::ParamConverter`.","summary":"<p>The tag name to apply to <code>self</code> in order for it to be registered with <code><a href=\"../../Athena/Routing/Listeners/ParamConverter.html\">ART::Listeners::ParamConverter</a></code>.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Routing/TimeConverter","kind":"struct","full_name":"Athena::Routing::TimeConverter","name":"TimeConverter"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"A param converter allows applying custom logic in order to convert a primitive request parameter into a more complex type.\n\nA few common examples could be converting a date-time string into a `Time` object,\nconverting a user's id into an actual `User` object, or deserializing a request body into an instance of T.\n\n### Examples\n\nDefining a custom param converter requires the usage of two (optionally three) things:\n\n1. An implementation of `self` to define the conversion logic.\n1. The `ARTA::ParamConverter` annotation applied to an action to specify what argument should be converted, and what converter should be used.\n1. An optional `ART::ParamConverterInterface::ConfigurationInterface` instance to define extra configuration options that can be used within the `ARTA::ParamConverter` annotation.\n\nParam converters are registered as services, and as such, may use any other registered services as a dependency via DI.\n\n```\nrequire \"athena\"\n\n# Create a param converter struct to contain our conversion logic.\n@[ADI::Register]\nstruct MultiplyConverter < ART::ParamConverterInterface\n  # :inherit:\n  def apply(request : HTTP::Request, configuration : Configuration) : Nil\n    arg_name = configuration.name\n\n    # No need to continue if the request does not have a value for this argument.\n    # The converter could also be setup to only set a value if it hasn't been set already.\n    return unless request.attributes.has? arg_name\n\n    # Retieve the argument from the request's attributes as an Int32.\n    # Converters should also handle any errors that may occur,\n    # such as type conversion, validation, or business logic errors.\n    value = request.attributes.get arg_name, Int32\n\n    # Override the argument's value within the request attributes, restricted to `Int32` values.\n    request.attributes.set arg_name, value * 2, Int32\n  end\nend\n\nclass ParamConverterController < ART::Controller\n  # Use the ARTA::ParamConverter annotation to specify we want to use a param converter for the `num` argument, and that we want to use the `MultiplyConverter` for the conversion.\n  @[ARTA::Get(path: \"/multiply/:num\")]\n  @[ARTA::ParamConverter(\"num\", converter: MultiplyConverter)]\n  def multiply(num : Int32) : Int32\n    num\n  end\nend\n\nART.run\n\n# GET /multiply/3 # => 6\n```\n\n#### Additional Configuration\nBy default, the *configuration* argument to `#apply` contains the name of the argument that should be converted, and a reference to the class of `self`.\nHowever, it can be augmented with additional data by using the `ART::ParamConverterInterface.configuration` macro.\n\nFor example, lets enhance the previous example to allow specifying the multiplier, versus it being hard-coded as `2`.\n\n```\nrequire \"athena\"\n\n@[ADI::Register]\nstruct MultiplyConverter < ART::ParamConverterInterface\n  # Use the `configuration` macro to define the configuration object that `self` should use.\n  # Adds an additional argument to allow specifying the multiplier.\n  #\n  # Configuration data can be made optional by setting default values.\n  configuration by : Int32\n\n  # :inherit:\n  def apply(request : HTTP::Request, configuration : Configuration) : Nil\n    arg_name = configuration.name\n\n    return unless request.attributes.has? arg_name\n\n    value = request.attributes.get arg_name, Int32\n\n    # Use the multiplier from the configuration object.\n    request.attributes.set arg_name, value * configuration.by, Int32\n  end\nend\n\nclass ParamConverterController < ART::Controller\n  # Specify the multiplier to use for the conversion; in this case `4`.\n  @[ARTA::Get(path: \"/multiply/:num\")]\n  @[ARTA::ParamConverter(\"num\", converter: MultiplyConverter, by: 4)]\n  def multiply(num : Int32) : Int32\n    num\n  end\nend\n\nART.run\n\n# GET /multiply/3 # => 12\n```","summary":"<p>A param converter allows applying custom logic in order to convert a primitive request parameter into a more complex type.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/param_converter_interface.cr#L97","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"apply(request:HTTP::Request,configuration:Configuration):Nil-instance-method","html_id":"apply(request:HTTP::Request,configuration:Configuration):Nil-instance-method","name":"apply","doc":"Applies the conversion logic based on the provided *request* and *configuration*.\n\nMost commonly this involves setting/overriding a value stored in the request's `ART::ParameterBag` via `request.attributes`.","summary":"<p>Applies the conversion logic based on the provided <em>request</em> and <em>configuration</em>.</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"configuration","doc":null,"default_value":"","external_name":"configuration","restriction":"Configuration"}],"args_string":"(request : HTTP::Request, configuration : Configuration) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/param_converter_interface.cr#L126","def":{"name":"apply","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"configuration","doc":null,"default_value":"","external_name":"configuration","restriction":"Configuration"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"{% if @type < ART::ParamConverterInterface %}\n      # Manually check this in order to allow a global overload\n      {% @type.raise(\"abstract `def Athena::Routing::ParamConverterInterface#apply(request : HTTP::Request, configuration : Configuration)` must be implemented by #{@type}\") %}\n    {% end %}"}}],"macros":[{"id":"configuration(*args)-macro","html_id":"configuration(*args)-macro","name":"configuration","doc":"Helper macro for defining an `ART::ParamConverterInterface::ConfigurationInterface`; similar to the `record` macro.\nAccepts a variable amount of variable names, types, and optionally default values.\n\nSee the \"Additional Configuration\" example of `ParamConverterInterface` for more information.","summary":"<p>Helper macro for defining an <code><a href=\"../../Athena/Routing/ParamConverterInterface/ConfigurationInterface.html\">ART::ParamConverterInterface::ConfigurationInterface</a></code>; similar to the <code>record</code> macro.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/param_converter_interface.cr#L140","def":{"name":"configuration","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"block_arg":null,"visibility":"Public","body":"    struct Configuration < ConfigurationInterface\n      \n{% for arg in args %}\n        getter {{ arg }}\n      {% end %}\n\n\n      def initialize(\n        name : String,\n        converter : ART::ParamConverterInterface.class,\n        \n{% for arg in args %}\n          @{{ arg }},\n        {% end %}\n\n      )\n        super name, converter\n      \nend\n    \nend\n  \n"}}],"types":[{"html_id":"athena/Athena/Routing/ParamConverterInterface/Configuration","path":"Athena/Routing/ParamConverterInterface/Configuration.html","kind":"struct","full_name":"Athena::Routing::ParamConverterInterface::Configuration","name":"Configuration","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/ParamConverterInterface/ConfigurationInterface","kind":"struct","full_name":"Athena::Routing::ParamConverterInterface::ConfigurationInterface","name":"ConfigurationInterface"},"ancestors":[{"html_id":"athena/Athena/Routing/ParamConverterInterface/ConfigurationInterface","kind":"struct","full_name":"Athena::Routing::ParamConverterInterface::ConfigurationInterface","name":"ConfigurationInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/param_converter_interface.cr","line_number":121,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/param_converter_interface.cr#L121"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/ParamConverterInterface","kind":"struct","full_name":"Athena::Routing::ParamConverterInterface","name":"ParamConverterInterface"},"doc":"The default `ART::ParamConverterInterface::ConfigurationInterface` object to use\nif one was not defined via the `ART::ParamConverterInterface.configuration` macro.","summary":"<p>The default <code><a href=\"../../../Athena/Routing/ParamConverterInterface/ConfigurationInterface.html\">ART::ParamConverterInterface::ConfigurationInterface</a></code> object to use if one was not defined via the <code><a href=\"../../../Athena/Routing/ParamConverterInterface.html#configuration(*args)-macro\">ART::ParamConverterInterface.configuration</a></code> macro.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/ParamConverterInterface/ConfigurationInterface","path":"Athena/Routing/ParamConverterInterface/ConfigurationInterface.html","kind":"struct","full_name":"Athena::Routing::ParamConverterInterface::ConfigurationInterface","name":"ConfigurationInterface","abstract":true,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/param_converter_interface.cr","line_number":109,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/param_converter_interface.cr#L109"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Routing/ParamConverterInterface/Configuration","kind":"struct","full_name":"Athena::Routing::ParamConverterInterface::Configuration","name":"Configuration"},{"html_id":"athena/Athena/Routing/TimeConverter/Configuration","kind":"struct","full_name":"Athena::Routing::TimeConverter::Configuration","name":"Configuration"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/ParamConverterInterface","kind":"struct","full_name":"Athena::Routing::ParamConverterInterface","name":"ParamConverterInterface"},"doc":"Allows defining extra configuration data that can be supplied within the `ARTA::ParamConverter` annotation.\nBy default this type includes the name of the argument that should be converted and the\nthe `ART::ParamConverterInterface` that should be used for the conversion.\n\nSee the \"Additional Configuration\" example of `ParamConverterInterface` for more information.","summary":"<p>Allows defining extra configuration data that can be supplied within the <code><a href=\"../../../Athena/Routing/Annotations/ParamConverter.html\">ARTA::ParamConverter</a></code> annotation.</p>","class_methods":[],"constructors":[{"id":"new(name:String,converter:ART::ParamConverterInterface.class)-class-method","html_id":"new(name:String,converter:ART::ParamConverterInterface.class)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"converter","doc":null,"default_value":"","external_name":"converter","restriction":"ART::ParamConverterInterface.class"}],"args_string":"(name : String, converter : <span class=\"t\">ART</span><span class=\"t\">::</span><span class=\"t\">ParamConverterInterface</span>.<span class=\"k\">class</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/param_converter_interface.cr#L116","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"converter","doc":null,"default_value":"","external_name":"converter","restriction":"ART::ParamConverterInterface.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, converter)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"converter:ART::ParamConverterInterface.class-instance-method","html_id":"converter:ART::ParamConverterInterface.class-instance-method","name":"converter","doc":"The converter class that should be used to convert the argument.","summary":"<p>The converter class that should be used to convert the argument.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">ART</span><span class=\"t\">::</span><span class=\"t\">ParamConverterInterface</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/param_converter_interface.cr#L114","def":{"name":"converter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ART::ParamConverterInterface.class","visibility":"Public","body":"@converter"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":"The name of the argument the converter should be applied to.","summary":"<p>The name of the argument the converter should be applied to.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/param_converter_interface.cr#L111","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Routing/ParameterBag","path":"Athena/Routing/ParameterBag.html","kind":"struct","full_name":"Athena::Routing::ParameterBag","name":"ParameterBag","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/parameter_bag.cr","line_number":41,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/parameter_bag.cr#L41"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"A container for storing key/value pairs.  Can be used to store arbitrary data within the context of a request.\nIt can be accessed via `HTTP::Request#attributes`.\n\n### Example\n\nFor example, an artbirary value can be stored in the attributes, and later provided as an action argument.\n\n```\nrequire \"athena\"\n\n# Define a request listener to add our value before the action is executed.\n@[ADI::Register]\nstruct TestListener\n  include AED::EventListenerInterface\n\n  def self.subscribed_events : AED::SubscribedEvents\n    AED::SubscribedEvents{\n      ART::Events::Request => 0,\n    }\n  end\n\n  def call(event : ART::Events::Request, dispatcher : AED::EventDispatcherInterface) : Nil\n    # Store our value within the request's attributes, restricted to a `String`.\n    event.request.attributes.set \"my_arg\", \"foo\", String\n  end\nend\n\nclass ExampleController < ART::Controller\n  # Define an action argument with the same name of the argument stored in attributes.\n  #\n  # The argument is resolved via `ART::Arguments::Resolvers::RequestAttribute`.\n  get \"/\", my_arg : String do\n    my_arg\n  end\nend\n\nART.run\n\n# GET / # => \"foo\"\n```","summary":"<p>A container for storing key/value pairs.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/parameter_bag.cr#L41","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"get(name:String,_type:Int8.class):Int8-instance-method","html_id":"get(name:String,_type:Int8.class):Int8-instance-method","name":"get","doc":"Returns the value of the parameter with the provided *name* as a `Int8`.","summary":"<p>Returns the value of the parameter with the provided <em>name</em> as a <code>Int8</code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Int8.class"}],"args_string":"(name : String, _type : <span class=\"t\">Int8</span>.<span class=\"k\">class</span>) : Int8","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/parameter_bag.cr#L67","def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Int8.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int8","visibility":"Public","body":"(Int8.from_parameter(self.get(name))).as(Int8)"}},{"id":"get(name:String,_type:Bool.class):Bool-instance-method","html_id":"get(name:String,_type:Bool.class):Bool-instance-method","name":"get","doc":"Returns the value of the parameter with the provided *name* as a `Bool`.","summary":"<p>Returns the value of the parameter with the provided <em>name</em> as a <code>Bool</code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Bool.class"}],"args_string":"(name : String, _type : <span class=\"t\">Bool</span>.<span class=\"k\">class</span>) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/parameter_bag.cr#L67","def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Bool.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(Bool.from_parameter(self.get(name))).as(Bool)"}},{"id":"get(name:String,_type:String.class):String-instance-method","html_id":"get(name:String,_type:String.class):String-instance-method","name":"get","doc":"Returns the value of the parameter with the provided *name* as a `String`.","summary":"<p>Returns the value of the parameter with the provided <em>name</em> as a <code>String</code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"String.class"}],"args_string":"(name : String, _type : <span class=\"t\">String</span>.<span class=\"k\">class</span>) : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/parameter_bag.cr#L67","def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"String.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"(String.from_parameter(self.get(name))).as(String)"}},{"id":"get(name:String,_type:Float32.class):Float32-instance-method","html_id":"get(name:String,_type:Float32.class):Float32-instance-method","name":"get","doc":"Returns the value of the parameter with the provided *name* as a `Float32`.","summary":"<p>Returns the value of the parameter with the provided <em>name</em> as a <code>Float32</code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Float32.class"}],"args_string":"(name : String, _type : <span class=\"t\">Float32</span>.<span class=\"k\">class</span>) : Float32","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/parameter_bag.cr#L67","def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Float32.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":"(Float32.from_parameter(self.get(name))).as(Float32)"}},{"id":"get(name:String,_type:Float64.class):Float64-instance-method","html_id":"get(name:String,_type:Float64.class):Float64-instance-method","name":"get","doc":"Returns the value of the parameter with the provided *name* as a `Float64`.","summary":"<p>Returns the value of the parameter with the provided <em>name</em> as a <code>Float64</code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Float64.class"}],"args_string":"(name : String, _type : <span class=\"t\">Float64</span>.<span class=\"k\">class</span>) : Float64","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/parameter_bag.cr#L67","def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Float64.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"(Float64.from_parameter(self.get(name))).as(Float64)"}},{"id":"get(name:String,_type:Int128.class):Int128-instance-method","html_id":"get(name:String,_type:Int128.class):Int128-instance-method","name":"get","doc":"Returns the value of the parameter with the provided *name* as a `Int128`.","summary":"<p>Returns the value of the parameter with the provided <em>name</em> as a <code>Int128</code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Int128.class"}],"args_string":"(name : String, _type : <span class=\"t\">Int128</span>.<span class=\"k\">class</span>) : Int128","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/parameter_bag.cr#L67","def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Int128.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int128","visibility":"Public","body":"(Int128.from_parameter(self.get(name))).as(Int128)"}},{"id":"get(name:String,_type:Int16.class):Int16-instance-method","html_id":"get(name:String,_type:Int16.class):Int16-instance-method","name":"get","doc":"Returns the value of the parameter with the provided *name* as a `Int16`.","summary":"<p>Returns the value of the parameter with the provided <em>name</em> as a <code>Int16</code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Int16.class"}],"args_string":"(name : String, _type : <span class=\"t\">Int16</span>.<span class=\"k\">class</span>) : Int16","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/parameter_bag.cr#L67","def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Int16.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int16","visibility":"Public","body":"(Int16.from_parameter(self.get(name))).as(Int16)"}},{"id":"get(name:String,_type:Int32.class):Int32-instance-method","html_id":"get(name:String,_type:Int32.class):Int32-instance-method","name":"get","doc":"Returns the value of the parameter with the provided *name* as a `Int32`.","summary":"<p>Returns the value of the parameter with the provided <em>name</em> as a <code>Int32</code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Int32.class"}],"args_string":"(name : String, _type : <span class=\"t\">Int32</span>.<span class=\"k\">class</span>) : Int32","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/parameter_bag.cr#L67","def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Int32.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"(Int32.from_parameter(self.get(name))).as(Int32)"}},{"id":"get(name:String,_type:Int64.class):Int64-instance-method","html_id":"get(name:String,_type:Int64.class):Int64-instance-method","name":"get","doc":"Returns the value of the parameter with the provided *name* as a `Int64`.","summary":"<p>Returns the value of the parameter with the provided <em>name</em> as a <code>Int64</code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Int64.class"}],"args_string":"(name : String, _type : <span class=\"t\">Int64</span>.<span class=\"k\">class</span>) : Int64","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/parameter_bag.cr#L67","def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Int64.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"(Int64.from_parameter(self.get(name))).as(Int64)"}},{"id":"get(name:String)-instance-method","html_id":"get(name:String)-instance-method","name":"get","doc":"Returns the value of the parameter with the provided *name*.\n\nRaises a `KeyError` if no parameter with that name exists.","summary":"<p>Returns the value of the parameter with the provided <em>name</em>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/parameter_bag.cr#L63","def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(@parameters.fetch(name) do\n  raise(KeyError.new(\"No parameter exists with the name '#{name}'.\"))\nend).value"}},{"id":"get(name:String,_type:UInt128.class):UInt128-instance-method","html_id":"get(name:String,_type:UInt128.class):UInt128-instance-method","name":"get","doc":"Returns the value of the parameter with the provided *name* as a `UInt128`.","summary":"<p>Returns the value of the parameter with the provided <em>name</em> as a <code>UInt128</code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"UInt128.class"}],"args_string":"(name : String, _type : <span class=\"t\">UInt128</span>.<span class=\"k\">class</span>) : UInt128","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/parameter_bag.cr#L67","def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"UInt128.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt128","visibility":"Public","body":"(UInt128.from_parameter(self.get(name))).as(UInt128)"}},{"id":"get(name:String,_type:UInt16.class):UInt16-instance-method","html_id":"get(name:String,_type:UInt16.class):UInt16-instance-method","name":"get","doc":"Returns the value of the parameter with the provided *name* as a `UInt16`.","summary":"<p>Returns the value of the parameter with the provided <em>name</em> as a <code>UInt16</code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"UInt16.class"}],"args_string":"(name : String, _type : <span class=\"t\">UInt16</span>.<span class=\"k\">class</span>) : UInt16","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/parameter_bag.cr#L67","def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"UInt16.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt16","visibility":"Public","body":"(UInt16.from_parameter(self.get(name))).as(UInt16)"}},{"id":"get(name:String,_type:UInt32.class):UInt32-instance-method","html_id":"get(name:String,_type:UInt32.class):UInt32-instance-method","name":"get","doc":"Returns the value of the parameter with the provided *name* as a `UInt32`.","summary":"<p>Returns the value of the parameter with the provided <em>name</em> as a <code>UInt32</code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"UInt32.class"}],"args_string":"(name : String, _type : <span class=\"t\">UInt32</span>.<span class=\"k\">class</span>) : UInt32","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/parameter_bag.cr#L67","def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"UInt32.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"(UInt32.from_parameter(self.get(name))).as(UInt32)"}},{"id":"get(name:String,_type:UInt64.class):UInt64-instance-method","html_id":"get(name:String,_type:UInt64.class):UInt64-instance-method","name":"get","doc":"Returns the value of the parameter with the provided *name* as a `UInt64`.","summary":"<p>Returns the value of the parameter with the provided <em>name</em> as a <code>UInt64</code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"UInt64.class"}],"args_string":"(name : String, _type : <span class=\"t\">UInt64</span>.<span class=\"k\">class</span>) : UInt64","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/parameter_bag.cr#L67","def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"UInt64.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"(UInt64.from_parameter(self.get(name))).as(UInt64)"}},{"id":"get(name:String,_type:UInt8.class):UInt8-instance-method","html_id":"get(name:String,_type:UInt8.class):UInt8-instance-method","name":"get","doc":"Returns the value of the parameter with the provided *name* as a `UInt8`.","summary":"<p>Returns the value of the parameter with the provided <em>name</em> as a <code>UInt8</code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"UInt8.class"}],"args_string":"(name : String, _type : <span class=\"t\">UInt8</span>.<span class=\"k\">class</span>) : UInt8","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/parameter_bag.cr#L67","def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"UInt8.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt8","visibility":"Public","body":"(UInt8.from_parameter(self.get(name))).as(UInt8)"}},{"id":"get?(name:String)-instance-method","html_id":"get?(name:String)-instance-method","name":"get?","doc":"Returns the value of the parameter with the provided *name* if it exists, otherwise `nil`.","summary":"<p>Returns the value of the parameter with the provided <em>name</em> if it exists, otherwise <code>nil</code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/parameter_bag.cr#L56","def":{"name":"get?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@parameters[name]?.try(&.value)"}},{"id":"has?(name:String):Bool-instance-method","html_id":"has?(name:String):Bool-instance-method","name":"has?","doc":"Returns `true` if a parameter with the provided *name* exists, otherwise `false`.","summary":"<p>Returns <code>true</code> if a parameter with the provided <em>name</em> exists, otherwise <code>false</code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/parameter_bag.cr#L51","def":{"name":"has?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@parameters.has_key?(name)"}},{"id":"remove(name:String):Nil-instance-method","html_id":"remove(name:String):Nil-instance-method","name":"remove","doc":"Removes the parameter with the provided *name*.","summary":"<p>Removes the parameter with the provided <em>name</em>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/parameter_bag.cr#L85","def":{"name":"remove","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@parameters.delete(name)"}},{"id":"set(name:String,value:_,type:T.class):NilforallT-instance-method","html_id":"set(name:String,value:_,type:T.class):NilforallT-instance-method","name":"set","doc":"Sets a parameter with the provided *name* to *value*, restricted to the given *type*.","summary":"<p>Sets a parameter with the provided <em>name</em> to <em>value</em>, restricted to the given <em>type</em>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"T.class"}],"args_string":"(name : String, value : _, type : <span class=\"t\">T</span>.<span class=\"k\">class</span>) : Nil forall T","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/parameter_bag.cr#L80","def":{"name":"set","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@parameters[name] = Parameter(T).new(value)"}},{"id":"set(name:String,value:T):NilforallT-instance-method","html_id":"set(name:String,value:T):NilforallT-instance-method","name":"set","doc":"Sets a parameter with the provided *name* to *value*.","summary":"<p>Sets a parameter with the provided <em>name</em> to <em>value</em>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(name : String, value : T) : Nil forall T","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/parameter_bag.cr#L75","def":{"name":"set","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"self.set(name, value, T)"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Params","path":"Athena/Routing/Params.html","kind":"module","full_name":"Athena::Routing::Params","name":"Params","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/athena.cr","line_number":98,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/athena.cr#L98"},{"filename":"src/params/param_interface.cr","line_number":4,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/param_interface.cr#L4"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Namespace for types related to request parameter processing.\n\nSee `ARTA::QueryParam` and `ARTA::RequestParam`.","summary":"<p>Namespace for types related to request parameter processing.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Routing/Params/Param","path":"Athena/Routing/Params/Param.html","kind":"struct","full_name":"Athena::Routing::Params::Param","name":"Param","abstract":true,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/params/param.cr","line_number":4,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/param.cr#L4"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Routing/Params/ScalarParam","kind":"struct","full_name":"Athena::Routing::Params::ScalarParam","name":"ScalarParam"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Params","kind":"module","full_name":"Athena::Routing::Params","name":"Params"},"doc":"Base implementation of `ART::Params::ParamInterface`.","summary":"<p>Base implementation of <code><a href=\"../../../Athena/Routing/Params/ParamInterface.html\">ART::Params::ParamInterface</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(name:String,has_default:Bool=false,incompatibles:Array(String)?=nil,strict:Bool=true,nilable:Bool=false,key:String?=nil,description:String?=nil)-class-method","html_id":"new(name:String,has_default:Bool=false,incompatibles:Array(String)?=nil,strict:Bool=true,nilable:Bool=false,key:String?=nil,description:String?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"has_default","doc":null,"default_value":"false","external_name":"has_default","restriction":"Bool"},{"name":"incompatibles","doc":null,"default_value":"nil","external_name":"incompatibles","restriction":"Array(String) | ::Nil"},{"name":"strict","doc":null,"default_value":"true","external_name":"strict","restriction":"Bool"},{"name":"nilable","doc":null,"default_value":"false","external_name":"nilable","restriction":"Bool"},{"name":"key","doc":null,"default_value":"nil","external_name":"key","restriction":"String | ::Nil"},{"name":"description","doc":null,"default_value":"nil","external_name":"description","restriction":"String | ::Nil"}],"args_string":"(name : String, has_default : Bool = <span class=\"n\">false</span>, incompatibles : Array(String)? = <span class=\"n\">nil</span>, strict : Bool = <span class=\"n\">true</span>, nilable : Bool = <span class=\"n\">false</span>, key : String? = <span class=\"n\">nil</span>, description : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/param.cr#L23","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"has_default","doc":null,"default_value":"false","external_name":"has_default","restriction":"Bool"},{"name":"incompatibles","doc":null,"default_value":"nil","external_name":"incompatibles","restriction":"Array(String) | ::Nil"},{"name":"strict","doc":null,"default_value":"true","external_name":"strict","restriction":"Bool"},{"name":"nilable","doc":null,"default_value":"false","external_name":"nilable","restriction":"Bool"},{"name":"key","doc":null,"default_value":"nil","external_name":"key","restriction":"String | ::Nil"},{"name":"description","doc":null,"default_value":"nil","external_name":"description","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, has_default, incompatibles, strict, nilable, key, description)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"constraints:Array(AVD::Constraint)-instance-method","html_id":"constraints:Array(AVD::Constraint)-instance-method","name":"constraints","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[],"args_string":" : Array(AVD::Constraint)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/param.cr#L35","def":{"name":"constraints","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(AVD::Constraint)","visibility":"Public","body":"constraints = [] of AVD::Constraint\nif self.nilable?\nelse\n  constraints << AVD::Constraints::NotNil.new\nend\nconstraints\n"}},{"id":"description:String?-instance-method","html_id":"description:String?-instance-method","name":"description","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/param.cr#L9","def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@description"}},{"id":"has_default?:Bool-instance-method","html_id":"has_default?:Bool-instance-method","name":"has_default?","doc":"If this argument has a default value.","summary":"<p>If this argument has a default value.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/param.cr#L18","def":{"name":"has_default?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@has_default"}},{"id":"incompatibles:Array(String)?-instance-method","html_id":"incompatibles:Array(String)?-instance-method","name":"incompatibles","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[],"args_string":" : Array(String)?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/param.cr#L12","def":{"name":"incompatibles","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String) | ::Nil","visibility":"Public","body":"@incompatibles"}},{"id":"key:String-instance-method","html_id":"key:String-instance-method","name":"key","doc":"Returns the key that should be used to access `self` from a given request.\n\nDefaults to `#name`, but may be customized.  See the \"Key\" section of `ARTA::QueryParam`.","summary":"<p>Returns the key that should be used to access <code>self</code> from a given request.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/param.cr#L48","def":{"name":"key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@key || @name"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/param.cr#L6","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}},{"id":"nilable?:Bool-instance-method","html_id":"nilable?:Bool-instance-method","name":"nilable?","doc":"If `nil` is a valid value for the param.","summary":"<p>If <code>nil</code> is a valid value for the param.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/param.cr#L21","def":{"name":"nilable?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@nilable"}},{"id":"strict?:Bool-instance-method","html_id":"strict?:Bool-instance-method","name":"strict?","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/param.cr#L15","def":{"name":"strict?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@strict"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Params/ParamFetcher","path":"Athena/Routing/Params/ParamFetcher.html","kind":"class","full_name":"Athena::Routing::Params::ParamFetcher","name":"ParamFetcher","abstract":false,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Athena/Routing/Params/ParamFetcherInterface","kind":"module","full_name":"Athena::Routing::Params::ParamFetcherInterface","name":"ParamFetcherInterface"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/params/param_fetcher.cr","line_number":7,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/param_fetcher.cr#L7"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Routing/Params/ParamFetcherInterface","kind":"module","full_name":"Athena::Routing::Params::ParamFetcherInterface","name":"ParamFetcherInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Params","kind":"module","full_name":"Athena::Routing::Params","name":"Params"},"doc":"Basic implementation of `ART::Params::ParamFetcherInterface`.\n\nNOTE: May only be used _after_ the related `ART::Action` has been resolved.","summary":"<p>Basic implementation of <code><a href=\"../../../Athena/Routing/Params/ParamFetcherInterface.html\">ART::Params::ParamFetcherInterface</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(request_store:ART::RequestStore,validator:AVD::Validator::ValidatorInterface)-class-method","html_id":"new(request_store:ART::RequestStore,validator:AVD::Validator::ValidatorInterface)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"request_store","doc":null,"default_value":"","external_name":"request_store","restriction":"ART::RequestStore"},{"name":"validator","doc":null,"default_value":"","external_name":"validator","restriction":"AVD::Validator::ValidatorInterface"}],"args_string":"(request_store : ART::RequestStore, validator : AVD::Validator::ValidatorInterface)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/param_fetcher.cr#L16","def":{"name":"new","args":[{"name":"request_store","doc":null,"default_value":"","external_name":"request_store","restriction":"ART::RequestStore"},{"name":"validator","doc":null,"default_value":"","external_name":"validator","restriction":"AVD::Validator::ValidatorInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(request_store, validator)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"each(strict:Bool?=nil,&):Nil-instance-method","html_id":"each(strict:Bool?=nil,&):Nil-instance-method","name":"each","doc":"Yields the name and value of each `ART::Params::ParamInterface` related to the current `ART::Action#params`.\n\nOptionally allows determing if the params should be validated strictly.  See the \"Strict\" section of `ARTA::QueryParam`.","summary":"<p>Yields the name and value of each <code><a href=\"../../../Athena/Routing/Params/ParamInterface.html\">ART::Params::ParamInterface</a></code> related to the current <code><a href=\"../../../Athena/Routing/Action.html#params:Array(ART::Params::ParamInterface)-instance-method\">ART::Action#params</a></code>.</p>","abstract":false,"args":[{"name":"strict","doc":null,"default_value":"nil","external_name":"strict","restriction":"Bool | ::Nil"}],"args_string":"(strict : Bool? = <span class=\"n\">nil</span>, &) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/param_fetcher.cr#L26","def":{"name":"each","args":[{"name":"strict","doc":null,"default_value":"nil","external_name":"strict","restriction":"Bool | ::Nil"}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"self.params.each_key do |key|\n  yield key, self.get(key, strict)\nend"}},{"id":"get(name:String,strict:Bool?=nil)-instance-method","html_id":"get(name:String,strict:Bool?=nil)-instance-method","name":"get","doc":"Returns the value of the parameter with the provided *name*.\n\nOptionally allows determing if the params should be validated strictly.  See the \"Strict\" section of `ARTA::QueryParam`.","summary":"<p>Returns the value of the parameter with the provided <em>name</em>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"strict","doc":null,"default_value":"nil","external_name":"strict","restriction":"Bool | ::Nil"}],"args_string":"(name : String, strict : Bool? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/param_fetcher.cr#L33","def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"strict","doc":null,"default_value":"nil","external_name":"strict","restriction":"Bool | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"param = self.params.fetch(name) do\n  raise(KeyError.new(\"Unknown parameter '#{name}'.\"))\nend\ndefault = param.default\nself.validate_param(param, param.extract_value(self.request, default), strict.nil? ? param.strict? : strict, default)\n"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Params/ParamFetcherInterface","path":"Athena/Routing/Params/ParamFetcherInterface.html","kind":"module","full_name":"Athena::Routing::Params::ParamFetcherInterface","name":"ParamFetcherInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/params/param_fetcher_interface.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/param_fetcher_interface.cr#L2"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Routing/Params/ParamFetcher","kind":"class","full_name":"Athena::Routing::Params::ParamFetcher","name":"ParamFetcher"}],"namespace":{"html_id":"athena/Athena/Routing/Params","kind":"module","full_name":"Athena::Routing::Params","name":"Params"},"doc":"Provides an API to fetch parameters from the current request.","summary":"<p>Provides an API to fetch parameters from the current request.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"each(strict:Bool?=nil,&:String,_->Nil):Nil-instance-method","html_id":"each(strict:Bool?=nil,&:String,_->Nil):Nil-instance-method","name":"each","doc":"Yields the name and value of each `ART::Params::ParamInterface` related to the current `ART::Action#params`.\n\nOptionally allows determing if the params should be validated strictly.  See the \"Strict\" section of `ARTA::QueryParam`.","summary":"<p>Yields the name and value of each <code><a href=\"../../../Athena/Routing/Params/ParamInterface.html\">ART::Params::ParamInterface</a></code> related to the current <code><a href=\"../../../Athena/Routing/Action.html#params:Array(ART::Params::ParamInterface)-instance-method\">ART::Action#params</a></code>.</p>","abstract":true,"args":[{"name":"strict","doc":null,"default_value":"nil","external_name":"strict","restriction":"Bool | ::Nil"}],"args_string":"(strict : Bool? = <span class=\"n\">nil</span>, & : String, _ -> Nil) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/param_fetcher_interface.cr#L11","def":{"name":"each","args":[{"name":"strict","doc":null,"default_value":"nil","external_name":"strict","restriction":"Bool | ::Nil"}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(String, _ -> Nil)"},"return_type":"Nil","visibility":"Public","body":""}},{"id":"get(name:String,strict:Bool?=nil)-instance-method","html_id":"get(name:String,strict:Bool?=nil)-instance-method","name":"get","doc":"Returns the value of the parameter with the provided *name*.\n\nOptionally allows determing if the params should be validated strictly.  See the \"Strict\" section of `ARTA::QueryParam`.","summary":"<p>Returns the value of the parameter with the provided <em>name</em>.</p>","abstract":true,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"strict","doc":null,"default_value":"nil","external_name":"strict","restriction":"Bool | ::Nil"}],"args_string":"(name : String, strict : Bool? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/param_fetcher_interface.cr#L6","def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"strict","doc":null,"default_value":"nil","external_name":"strict","restriction":"Bool | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Params/ParamInterface","path":"Athena/Routing/Params/ParamInterface.html","kind":"module","full_name":"Athena::Routing::Params::ParamInterface","name":"ParamInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/params/param_interface.cr","line_number":4,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/param_interface.cr#L4"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Routing/Params/QueryParam","kind":"struct","full_name":"Athena::Routing::Params::QueryParam(T)","name":"QueryParam"},{"html_id":"athena/Athena/Routing/Params/RequestParam","kind":"struct","full_name":"Athena::Routing::Params::RequestParam(T)","name":"RequestParam"}],"namespace":{"html_id":"athena/Athena/Routing/Params","kind":"module","full_name":"Athena::Routing::Params","name":"Params"},"doc":"Represents a request parameter; e.x. query param, form data, a file, etc.\n\nSee `ARTA::QueryParam` and `ARTA::RequestParam`.","summary":"<p>Represents a request parameter; e.x.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"constraints:Array(AVD::Constraint)-instance-method","html_id":"constraints:Array(AVD::Constraint)-instance-method","name":"constraints","doc":"Returns the `AVD::Constraint`s that should be used to validate the parameter's value.","summary":"<p>Returns the <code><a href=\"../../../Athena/Validator/Constraint.html\">AVD::Constraint</a></code>s that should be used to validate the parameter's value.</p>","abstract":true,"args":[],"args_string":" : Array(AVD::Constraint)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/param_interface.cr#L19","def":{"name":"constraints","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(AVD::Constraint)","visibility":"Public","body":""}},{"id":"default-instance-method","html_id":"default-instance-method","name":"default","doc":"Returns the value that should be used if `#strict?` is false and the parameter was not provided, defaulting to `nil`.","summary":"<p>Returns the value that should be used if <code><a href=\"../../../Athena/Routing/Params/ParamInterface.html#strict?:Bool-instance-method\">#strict?</a></code> is false and the parameter was not provided, defaulting to <code>nil</code>.</p>","abstract":true,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/param_interface.cr#L9","def":{"name":"default","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"description:String?-instance-method","html_id":"description:String?-instance-method","name":"description","doc":"Returns a human readable summary of what the parameter is used for.\nIn the future this may be used to supplement auto generated endpoint documentation.","summary":"<p>Returns a human readable summary of what the parameter is used for.</p>","abstract":true,"args":[],"args_string":" : String?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/param_interface.cr#L13","def":{"name":"description","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":""}},{"id":"extract_value(request:HTTP::Request,default:_=nil)-instance-method","html_id":"extract_value(request:HTTP::Request,default:_=nil)-instance-method","name":"extract_value","doc":"Returns the `self`'s value from the provided *request*, or *default* if it was not present.","summary":"<p>Returns the <code>self</code>'s value from the provided <em>request</em>, or <em>default</em> if it was not present.</p>","abstract":true,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"_"}],"args_string":"(request : HTTP::Request, default : _ = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/param_interface.cr#L25","def":{"name":"extract_value","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"incompatibles:Array(String)?-instance-method","html_id":"incompatibles:Array(String)?-instance-method","name":"incompatibles","doc":"Returns the parameters that may not be present at the same time as `self`.  See the \"Incompatibilities\" section of `ARTA::QueryParam`.","summary":"<p>Returns the parameters that may not be present at the same time as <code>self</code>.</p>","abstract":true,"args":[],"args_string":" : Array(String)?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/param_interface.cr#L16","def":{"name":"incompatibles","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String) | ::Nil","visibility":"Public","body":""}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":"Returns the name of the parameter, maps to the controller action argument name.","summary":"<p>Returns the name of the parameter, maps to the controller action argument name.</p>","abstract":true,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/param_interface.cr#L6","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}},{"id":"strict?:Bool-instance-method","html_id":"strict?:Bool-instance-method","name":"strict?","doc":"Denotes whether `self` should be processed strictly.  See the \"Strict\" section of `ARTA::QueryParam`.","summary":"<p>Denotes whether <code>self</code> should be processed strictly.</p>","abstract":true,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/param_interface.cr#L22","def":{"name":"strict?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Params/QueryParam","path":"Athena/Routing/Params/QueryParam.html","kind":"struct","full_name":"Athena::Routing::Params::QueryParam(T)","name":"QueryParam","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Params/ScalarParam","kind":"struct","full_name":"Athena::Routing::Params::ScalarParam","name":"ScalarParam"},"ancestors":[{"html_id":"athena/Athena/Routing/Params/ParamInterface","kind":"module","full_name":"Athena::Routing::Params::ParamInterface","name":"ParamInterface"},{"html_id":"athena/Athena/Routing/Params/ScalarParam","kind":"struct","full_name":"Athena::Routing::Params::ScalarParam","name":"ScalarParam"},{"html_id":"athena/Athena/Routing/Params/Param","kind":"struct","full_name":"Athena::Routing::Params::Param","name":"Param"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/params/query_param.cr","line_number":4,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/query_param.cr#L4"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Routing/Params/ParamInterface","kind":"module","full_name":"Athena::Routing::Params::ParamInterface","name":"ParamInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Params","kind":"module","full_name":"Athena::Routing::Params","name":"Params"},"doc":"Represents a request's query parameter.  See `ARTA::QueryParam`.","summary":"<p>Represents a request's query parameter.</p>","class_methods":[],"constructors":[{"id":"new(name:String,has_default:Bool=false,incompatibles:Array(String)?=nil,requirements:AVD::Constraint|Array(AVD::Constraint)|Regex|Nil=nil,map:Bool=false,is_nilable:Bool=false,strict:Bool=true,key:String?=nil,description:String?=nil,default:T?=nil,type:T.class=T,converter:Nil?=nil)-class-method","html_id":"new(name:String,has_default:Bool=false,incompatibles:Array(String)?=nil,requirements:AVD::Constraint|Array(AVD::Constraint)|Regex|Nil=nil,map:Bool=false,is_nilable:Bool=false,strict:Bool=true,key:String?=nil,description:String?=nil,default:T?=nil,type:T.class=T,converter:Nil?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"has_default","doc":null,"default_value":"false","external_name":"has_default","restriction":"Bool"},{"name":"incompatibles","doc":null,"default_value":"nil","external_name":"incompatibles","restriction":"Array(String) | ::Nil"},{"name":"requirements","doc":null,"default_value":"nil","external_name":"requirements","restriction":"AVD::Constraint | Array(AVD::Constraint) | Regex | Nil"},{"name":"map","doc":null,"default_value":"false","external_name":"map","restriction":"Bool"},{"name":"is_nilable","doc":null,"default_value":"false","external_name":"is_nilable","restriction":"Bool"},{"name":"strict","doc":null,"default_value":"true","external_name":"strict","restriction":"Bool"},{"name":"key","doc":null,"default_value":"nil","external_name":"key","restriction":"String | ::Nil"},{"name":"description","doc":null,"default_value":"nil","external_name":"description","restriction":"String | ::Nil"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"T | ::Nil"},{"name":"type","doc":null,"default_value":"T","external_name":"type","restriction":"T.class"},{"name":"converter","doc":null,"default_value":"nil","external_name":"converter","restriction":"Nil | ::Nil"}],"args_string":"(name : String, has_default : Bool = <span class=\"n\">false</span>, incompatibles : Array(String)? = <span class=\"n\">nil</span>, requirements : AVD::Constraint | Array(AVD::Constraint) | Regex | Nil = <span class=\"n\">nil</span>, map : Bool = <span class=\"n\">false</span>, is_nilable : Bool = <span class=\"n\">false</span>, strict : Bool = <span class=\"n\">true</span>, key : String? = <span class=\"n\">nil</span>, description : String? = <span class=\"n\">nil</span>, default : T? = <span class=\"n\">nil</span>, type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">T</span>, converter : Nil? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/query_param.cr#L8","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"has_default","doc":null,"default_value":"false","external_name":"has_default","restriction":"Bool"},{"name":"incompatibles","doc":null,"default_value":"nil","external_name":"incompatibles","restriction":"Array(String) | ::Nil"},{"name":"requirements","doc":null,"default_value":"nil","external_name":"requirements","restriction":"AVD::Constraint | Array(AVD::Constraint) | Regex | Nil"},{"name":"map","doc":null,"default_value":"false","external_name":"map","restriction":"Bool"},{"name":"is_nilable","doc":null,"default_value":"false","external_name":"is_nilable","restriction":"Bool"},{"name":"strict","doc":null,"default_value":"true","external_name":"strict","restriction":"Bool"},{"name":"key","doc":null,"default_value":"nil","external_name":"key","restriction":"String | ::Nil"},{"name":"description","doc":null,"default_value":"nil","external_name":"description","restriction":"String | ::Nil"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"T | ::Nil"},{"name":"type","doc":null,"default_value":"T","external_name":"type","restriction":"T.class"},{"name":"converter","doc":null,"default_value":"nil","external_name":"converter","restriction":"Nil | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = QueryParam(T).allocate\n_.initialize(name, has_default, incompatibles, requirements, map, is_nilable, strict, key, description, default, type, converter)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"default:T?-instance-method","html_id":"default:T?-instance-method","name":"default","doc":"Returns the value that should be used if `#strict?` is false and the parameter was not provided, defaulting to `nil`.","summary":"<p>Returns the value that should be used if <code>#strict?</code> is false and the parameter was not provided, defaulting to <code>nil</code>.</p>","abstract":false,"args":[],"args_string":" : T?","source_link":null,"def":{"name":"default","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T | ::Nil","visibility":"Public","body":"@default"}},{"id":"extract_value(request:HTTP::Request,default:_=nil)-instance-method","html_id":"extract_value(request:HTTP::Request,default:_=nil)-instance-method","name":"extract_value","doc":"Returns the `self`'s value from the provided *request*, or *default* if it was not present.","summary":"<p>Returns the <code>self</code>'s value from the provided <em>request</em>, or <em>default</em> if it was not present.</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"_"}],"args_string":"(request : HTTP::Request, default : _ = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/query_param.cr#L11","def":{"name":"extract_value","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"query_params = request.query_params\nif query_params.has_key?(self.key)\nelse\n  return default\nend\nif self.type <= Array\n  query_params.fetch_all(self.key)\nelse\n  query_params[self.key]\nend\n"}},{"id":"type:T.class-instance-method","html_id":"type:T.class-instance-method","name":"type","doc":"The type of the parameter, i.e. what its type restriction is.","summary":"<p>The type of the parameter, i.e.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">T</span>.<span class=\"k\">class</span>","source_link":null,"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T.class","visibility":"Public","body":"@type"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Params/RequestParam","path":"Athena/Routing/Params/RequestParam.html","kind":"struct","full_name":"Athena::Routing::Params::RequestParam(T)","name":"RequestParam","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Params/ScalarParam","kind":"struct","full_name":"Athena::Routing::Params::ScalarParam","name":"ScalarParam"},"ancestors":[{"html_id":"athena/Athena/Routing/Params/ParamInterface","kind":"module","full_name":"Athena::Routing::Params::ParamInterface","name":"ParamInterface"},{"html_id":"athena/Athena/Routing/Params/ScalarParam","kind":"struct","full_name":"Athena::Routing::Params::ScalarParam","name":"ScalarParam"},{"html_id":"athena/Athena/Routing/Params/Param","kind":"struct","full_name":"Athena::Routing::Params::Param","name":"Param"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/params/request_param.cr","line_number":4,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/request_param.cr#L4"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Routing/Params/ParamInterface","kind":"module","full_name":"Athena::Routing::Params::ParamInterface","name":"ParamInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Params","kind":"module","full_name":"Athena::Routing::Params","name":"Params"},"doc":"Represents form data with a request's body.  See `ARTA::RequestParam`.","summary":"<p>Represents form data with a request's body.</p>","class_methods":[],"constructors":[{"id":"new(name:String,has_default:Bool=false,incompatibles:Array(String)?=nil,requirements:AVD::Constraint|Array(AVD::Constraint)|Regex|Nil=nil,map:Bool=false,is_nilable:Bool=false,strict:Bool=true,key:String?=nil,description:String?=nil,default:T?=nil,type:T.class=T,converter:Nil?=nil)-class-method","html_id":"new(name:String,has_default:Bool=false,incompatibles:Array(String)?=nil,requirements:AVD::Constraint|Array(AVD::Constraint)|Regex|Nil=nil,map:Bool=false,is_nilable:Bool=false,strict:Bool=true,key:String?=nil,description:String?=nil,default:T?=nil,type:T.class=T,converter:Nil?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"has_default","doc":null,"default_value":"false","external_name":"has_default","restriction":"Bool"},{"name":"incompatibles","doc":null,"default_value":"nil","external_name":"incompatibles","restriction":"Array(String) | ::Nil"},{"name":"requirements","doc":null,"default_value":"nil","external_name":"requirements","restriction":"AVD::Constraint | Array(AVD::Constraint) | Regex | Nil"},{"name":"map","doc":null,"default_value":"false","external_name":"map","restriction":"Bool"},{"name":"is_nilable","doc":null,"default_value":"false","external_name":"is_nilable","restriction":"Bool"},{"name":"strict","doc":null,"default_value":"true","external_name":"strict","restriction":"Bool"},{"name":"key","doc":null,"default_value":"nil","external_name":"key","restriction":"String | ::Nil"},{"name":"description","doc":null,"default_value":"nil","external_name":"description","restriction":"String | ::Nil"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"T | ::Nil"},{"name":"type","doc":null,"default_value":"T","external_name":"type","restriction":"T.class"},{"name":"converter","doc":null,"default_value":"nil","external_name":"converter","restriction":"Nil | ::Nil"}],"args_string":"(name : String, has_default : Bool = <span class=\"n\">false</span>, incompatibles : Array(String)? = <span class=\"n\">nil</span>, requirements : AVD::Constraint | Array(AVD::Constraint) | Regex | Nil = <span class=\"n\">nil</span>, map : Bool = <span class=\"n\">false</span>, is_nilable : Bool = <span class=\"n\">false</span>, strict : Bool = <span class=\"n\">true</span>, key : String? = <span class=\"n\">nil</span>, description : String? = <span class=\"n\">nil</span>, default : T? = <span class=\"n\">nil</span>, type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">T</span>, converter : Nil? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/request_param.cr#L8","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"has_default","doc":null,"default_value":"false","external_name":"has_default","restriction":"Bool"},{"name":"incompatibles","doc":null,"default_value":"nil","external_name":"incompatibles","restriction":"Array(String) | ::Nil"},{"name":"requirements","doc":null,"default_value":"nil","external_name":"requirements","restriction":"AVD::Constraint | Array(AVD::Constraint) | Regex | Nil"},{"name":"map","doc":null,"default_value":"false","external_name":"map","restriction":"Bool"},{"name":"is_nilable","doc":null,"default_value":"false","external_name":"is_nilable","restriction":"Bool"},{"name":"strict","doc":null,"default_value":"true","external_name":"strict","restriction":"Bool"},{"name":"key","doc":null,"default_value":"nil","external_name":"key","restriction":"String | ::Nil"},{"name":"description","doc":null,"default_value":"nil","external_name":"description","restriction":"String | ::Nil"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"T | ::Nil"},{"name":"type","doc":null,"default_value":"T","external_name":"type","restriction":"T.class"},{"name":"converter","doc":null,"default_value":"nil","external_name":"converter","restriction":"Nil | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = RequestParam(T).allocate\n_.initialize(name, has_default, incompatibles, requirements, map, is_nilable, strict, key, description, default, type, converter)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"default:T?-instance-method","html_id":"default:T?-instance-method","name":"default","doc":"Returns the value that should be used if `#strict?` is false and the parameter was not provided, defaulting to `nil`.","summary":"<p>Returns the value that should be used if <code>#strict?</code> is false and the parameter was not provided, defaulting to <code>nil</code>.</p>","abstract":false,"args":[],"args_string":" : T?","source_link":null,"def":{"name":"default","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T | ::Nil","visibility":"Public","body":"@default"}},{"id":"extract_value(request:HTTP::Request,default:_=nil)-instance-method","html_id":"extract_value(request:HTTP::Request,default:_=nil)-instance-method","name":"extract_value","doc":"Returns the `self`'s value from the provided *request*, or *default* if it was not present.","summary":"<p>Returns the <code>self</code>'s value from the provided <em>request</em>, or <em>default</em> if it was not present.</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"_"}],"args_string":"(request : HTTP::Request, default : _ = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/request_param.cr#L11","def":{"name":"extract_value","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"request_data = request.request_data\nif request_data.has_key?(self.key)\nelse\n  return default\nend\nif self.type <= Array\n  request_data.fetch_all(self.key)\nelse\n  request_data[self.key]\nend\n"}},{"id":"type:T.class-instance-method","html_id":"type:T.class-instance-method","name":"type","doc":"The type of the parameter, i.e. what its type restriction is.","summary":"<p>The type of the parameter, i.e.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">T</span>.<span class=\"k\">class</span>","source_link":null,"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T.class","visibility":"Public","body":"@type"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Params/ScalarParam","path":"Athena/Routing/Params/ScalarParam.html","kind":"struct","full_name":"Athena::Routing::Params::ScalarParam","name":"ScalarParam","abstract":true,"superclass":{"html_id":"athena/Athena/Routing/Params/Param","kind":"struct","full_name":"Athena::Routing::Params::Param","name":"Param"},"ancestors":[{"html_id":"athena/Athena/Routing/Params/Param","kind":"struct","full_name":"Athena::Routing::Params::Param","name":"Param"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/params/scalar_param.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/scalar_param.cr#L2"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Routing/Params/QueryParam","kind":"struct","full_name":"Athena::Routing::Params::QueryParam(T)","name":"QueryParam"},{"html_id":"athena/Athena/Routing/Params/RequestParam","kind":"struct","full_name":"Athena::Routing::Params::RequestParam(T)","name":"RequestParam"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Params","kind":"module","full_name":"Athena::Routing::Params","name":"Params"},"doc":"Extension of `ART::Params::Param` that allows for more granular validation of scalar parameters.","summary":"<p>Extension of <code><a href=\"../../../Athena/Routing/Params/Param.html\">ART::Params::Param</a></code> that allows for more granular validation of scalar parameters.</p>","class_methods":[],"constructors":[{"id":"new(name:String,has_default:Bool=false,incompatibles:Array(String)?=nil,requirements:AVD::Constraint|Array(AVD::Constraint)|Regex|Nil=nil,map:Bool=false,strict:Bool=true,nilable:Bool=false,key:String?=nil,description:String?=nil)-class-method","html_id":"new(name:String,has_default:Bool=false,incompatibles:Array(String)?=nil,requirements:AVD::Constraint|Array(AVD::Constraint)|Regex|Nil=nil,map:Bool=false,strict:Bool=true,nilable:Bool=false,key:String?=nil,description:String?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"has_default","doc":null,"default_value":"false","external_name":"has_default","restriction":"Bool"},{"name":"incompatibles","doc":null,"default_value":"nil","external_name":"incompatibles","restriction":"Array(String) | ::Nil"},{"name":"requirements","doc":null,"default_value":"nil","external_name":"requirements","restriction":"AVD::Constraint | Array(AVD::Constraint) | Regex | Nil"},{"name":"map","doc":null,"default_value":"false","external_name":"map","restriction":"Bool"},{"name":"strict","doc":null,"default_value":"true","external_name":"strict","restriction":"Bool"},{"name":"nilable","doc":null,"default_value":"false","external_name":"nilable","restriction":"Bool"},{"name":"key","doc":null,"default_value":"nil","external_name":"key","restriction":"String | ::Nil"},{"name":"description","doc":null,"default_value":"nil","external_name":"description","restriction":"String | ::Nil"}],"args_string":"(name : String, has_default : Bool = <span class=\"n\">false</span>, incompatibles : Array(String)? = <span class=\"n\">nil</span>, requirements : AVD::Constraint | Array(AVD::Constraint) | Regex | Nil = <span class=\"n\">nil</span>, map : Bool = <span class=\"n\">false</span>, strict : Bool = <span class=\"n\">true</span>, nilable : Bool = <span class=\"n\">false</span>, key : String? = <span class=\"n\">nil</span>, description : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/scalar_param.cr#L13","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"has_default","doc":null,"default_value":"false","external_name":"has_default","restriction":"Bool"},{"name":"incompatibles","doc":null,"default_value":"nil","external_name":"incompatibles","restriction":"Array(String) | ::Nil"},{"name":"requirements","doc":null,"default_value":"nil","external_name":"requirements","restriction":"AVD::Constraint | Array(AVD::Constraint) | Regex | Nil"},{"name":"map","doc":null,"default_value":"false","external_name":"map","restriction":"Bool"},{"name":"strict","doc":null,"default_value":"true","external_name":"strict","restriction":"Bool"},{"name":"nilable","doc":null,"default_value":"false","external_name":"nilable","restriction":"Bool"},{"name":"key","doc":null,"default_value":"nil","external_name":"key","restriction":"String | ::Nil"},{"name":"description","doc":null,"default_value":"nil","external_name":"description","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, has_default, incompatibles, requirements, map, strict, nilable, key, description)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"constraints:Array(AVD::Constraint)-instance-method","html_id":"constraints:Array(AVD::Constraint)-instance-method","name":"constraints","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[],"args_string":" : Array(AVD::Constraint)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/scalar_param.cr#L28","def":{"name":"constraints","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(AVD::Constraint)","visibility":"Public","body":"constraints = super()\ncase (requirements = @requirements)\nwhen Array(AVD::Constraint)\n  constraints.concat(requirements)\nwhen AVD::Constraint\n  constraints << requirements\nwhen Regex\n  constraints << (AVD::Constraints::Regex.new(::Regex.new(\"^#{requirements}$\"), message: \"Parameter '#{@name}' value does not match requirements: {{ pattern }}\"))\nend\nif @map\n  constraints = [AVD::Constraints::All.new(constraints)] of AVD::Constraint\n  if self.nilable?\n  else\n    constraints << AVD::Constraints::NotNil.new\n  end\nend\nconstraints\n"}},{"id":"map?:Bool-instance-method","html_id":"map?:Bool-instance-method","name":"map?","doc":"Denotes whether the `#requirements` should be applied to the whole value, or to each item a part of the value.\n\nSee the \"Map\" section of `ARTA::QueryParam`.","summary":"<p>Denotes whether the <code><a href=\"../../../Athena/Routing/Params/ScalarParam.html#requirements:AVD::Constraint%7CArray(AVD::Constraint)%7CRegex%7CNil-instance-method\">#requirements</a></code> should be applied to the whole value, or to each item a part of the value.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/scalar_param.cr#L11","def":{"name":"map?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@map"}},{"id":"requirements:AVD::Constraint|Array(AVD::Constraint)|Regex|Nil-instance-method","html_id":"requirements:AVD::Constraint|Array(AVD::Constraint)|Regex|Nil-instance-method","name":"requirements","doc":"Returns the requirements that the value is required to pass in order to be considered valid.\n\nSee the \"Requirements\" section of `ARTA::QueryParam`.","summary":"<p>Returns the requirements that the value is required to pass in order to be considered valid.</p>","abstract":false,"args":[],"args_string":" : AVD::Constraint | Array(AVD::Constraint) | Regex | Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/params/scalar_param.cr#L6","def":{"name":"requirements","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Constraint | Array(AVD::Constraint) | Regex | Nil","visibility":"Public","body":"@requirements"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Routing/RedirectResponse","path":"Athena/Routing/RedirectResponse.html","kind":"class","full_name":"Athena::Routing::RedirectResponse","name":"RedirectResponse","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Response","kind":"class","full_name":"Athena::Routing::Response","name":"Response"},"ancestors":[{"html_id":"athena/Athena/Routing/Response","kind":"class","full_name":"Athena::Routing::Response","name":"Response"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/redirect_response.cr","line_number":21,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/redirect_response.cr#L21"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Represents an HTTP response that does a redirect.\n\nCan be used as an easier way to handle redirects as well as providing type safety that a route should redirect.\n\n```\nrequire \"athena\"\n\nclass RedirectController < ART::Controller\n  @[ARTA::Get(path: \"/go_to_crystal\")]\n  def redirect_to_crystal : ART::RedirectResponse\n    ART::RedirectResponse.new \"https://crystal-lang.org\"\n  end\nend\n\nART.run\n\n# GET /go_to_crystal # => (redirected to https://crystal-lang.org)\n```","summary":"<p>Represents an HTTP response that does a redirect.</p>","class_methods":[],"constructors":[{"id":"new(url:String,status:HTTP::Status|Int32=HTTP::Status::FOUND,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(url:String,status:HTTP::Status|Int32=HTTP::Status::FOUND,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":"Creates a response that should redirect to the provided *url* with the provided *status*, defaults to 302.\n\nAn ArgumentError is raised if *url* is blank, or if *status* is not a valid redirection status code.","summary":"<p>Creates a response that should redirect to the provided <em>url</em> with the provided <em>status</em>, defaults to 302.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"},{"name":"status","doc":null,"default_value":"HTTP::Status::FOUND","external_name":"status","restriction":"HTTP::Status | Int32"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(url : String, status : HTTP::Status | Int32 = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Status</span><span class=\"t\">::</span><span class=\"t\">FOUND</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/redirect_response.cr#L28","def":{"name":"new","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"},{"name":"status","doc":null,"default_value":"HTTP::Status::FOUND","external_name":"status","restriction":"HTTP::Status | Int32"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(url, status, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"url:String-instance-method","html_id":"url:String-instance-method","name":"url","doc":"The url that the request will be redirected to.","summary":"<p>The url that the request will be redirected to.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/redirect_response.cr#L23","def":{"name":"url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@url"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/RequestMatcherInterface","path":"Athena/Routing/RequestMatcherInterface.html","kind":"module","full_name":"Athena::Routing::RequestMatcherInterface","name":"RequestMatcherInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/routing/request_matcher_interface.cr","line_number":1,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/routing/request_matcher_interface.cr#L1"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Routing/RouterInterface","kind":"module","full_name":"Athena::Routing::RouterInterface","name":"RouterInterface"}],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"match(request:HTTP::Request):Amber::Router::RoutedResult(Athena::Routing::ActionBase)-instance-method","html_id":"match(request:HTTP::Request):Amber::Router::RoutedResult(Athena::Routing::ActionBase)-instance-method","name":"match","doc":"Matches the provided *request* with its related `ART::Action`.","summary":"<p>Matches the provided <em>request</em> with its related <code><a href=\"../../Athena/Routing/Action.html\">ART::Action</a></code>.</p>","abstract":true,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"args_string":"(request : HTTP::Request) : Amber::Router::RoutedResult(Athena::Routing::ActionBase)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/routing/request_matcher_interface.cr#L3","def":{"name":"match","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Amber::Router::RoutedResult(Athena::Routing::ActionBase)","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/RequestStore","path":"Athena/Routing/RequestStore.html","kind":"class","full_name":"Athena::Routing::RequestStore","name":"RequestStore","abstract":false,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/request_store.cr","line_number":22,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/request_store.cr#L22"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Stores the current `HTTP::Request` object.\n\nCan be injected to access the request from a non controller context.\n\n```\nrequire \"athena\"\n\n@[ADI::Register(public: true)]\nclass ExampleController < ART::Controller\n  def initialize(@request_store : ART::RequestStore); end\n\n  get \"/\" do\n    @request_store.method\n  end\nend\n\nART.run\n\n# GET / # => GET\n```","summary":"<p>Stores the current <code><a href=\"../../HTTP/Request.html\">HTTP::Request</a></code> object.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"request:HTTP::Request-instance-method","html_id":"request:HTTP::Request-instance-method","name":"request","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HTTP::Request","source_link":null,"def":{"name":"request","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::Request","visibility":"Public","body":"if (value = @request).nil?\n  ::raise(NilAssertionError.new(\"Athena::Routing::RequestStore#request cannot be nil\"))\nelse\n  value\nend"}},{"id":"request=(request:HTTP::Request)-instance-method","html_id":"request=(request:HTTP::Request)-instance-method","name":"request=","doc":null,"summary":null,"abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"args_string":"(request : HTTP::Request)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/request_store.cr#L23","def":{"name":"request=","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@request = request"}},{"id":"request?:HTTP::Request?-instance-method","html_id":"request?:HTTP::Request?-instance-method","name":"request?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HTTP::Request?","source_link":null,"def":{"name":"request?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::Request | ::Nil","visibility":"Public","body":"@request"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Response","path":"Athena/Routing/Response.html","kind":"class","full_name":"Athena::Routing::Response","name":"Response","abstract":false,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/response.cr","line_number":7,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/response.cr#L7"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Routing/RedirectResponse","kind":"class","full_name":"Athena::Routing::RedirectResponse","name":"RedirectResponse"},{"html_id":"athena/Athena/Routing/StreamedResponse","kind":"class","full_name":"Athena::Routing::StreamedResponse","name":"StreamedResponse"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Represents an `HTTP` response that should be returned to the client.\n\nContains the content, status, and headers that should be applied to the actual `HTTP::Server::Response`.\nThis type is used to allow the content, status, and headers to be mutated by `ART::Listeners` before being returned to the client.\n\nThe `#content` is written all at once to the server response's `IO`.","summary":"<p>Represents an <code>HTTP</code> response that should be returned to the client.</p>","class_methods":[],"constructors":[{"id":"new(content:String?=nil,status:HTTP::Status|Int32=HTTP::Status::OK,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(content:String?=nil,status:HTTP::Status|Int32=HTTP::Status::OK,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":"Creates a new response with optional *content*, *status*, and *headers* arguments.","summary":"<p>Creates a new response with optional <em>content</em>, <em>status</em>, and <em>headers</em> arguments.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"nil","external_name":"content","restriction":"String | ::Nil"},{"name":"status","doc":null,"default_value":"HTTP::Status::OK","external_name":"status","restriction":"HTTP::Status | Int32"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(content : String? = <span class=\"n\">nil</span>, status : HTTP::Status | Int32 = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Status</span><span class=\"t\">::</span><span class=\"t\">OK</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/response.cr#L94","def":{"name":"new","args":[{"name":"content","doc":null,"default_value":"nil","external_name":"content","restriction":"String | ::Nil"},{"name":"status","doc":null,"default_value":"HTTP::Status::OK","external_name":"status","restriction":"HTTP::Status | Int32"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(content, status, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"content:String-instance-method","html_id":"content:String-instance-method","name":"content","doc":"Returns the contents of this response.","summary":"<p>Returns the contents of this response.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/response.cr#L91","def":{"name":"content","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@content"}},{"id":"content=(content:String?)-instance-method","html_id":"content=(content:String?)-instance-method","name":"content=","doc":"Sets the response content.","summary":"<p>Sets the response content.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | ::Nil"}],"args_string":"(content : String?)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/response.cr#L100","def":{"name":"content=","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@content = content || \"\""}},{"id":"headers:HTTP::Headers-instance-method","html_id":"headers:HTTP::Headers-instance-method","name":"headers","doc":"Returns the response headers of this response.","summary":"<p>Returns the response headers of this response.</p>","abstract":false,"args":[],"args_string":" : HTTP::Headers","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/response.cr#L88","def":{"name":"headers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::Headers","visibility":"Public","body":"@headers"}},{"id":"send(context:HTTP::Server::Context):Nil-instance-method","html_id":"send(context:HTTP::Server::Context):Nil-instance-method","name":"send","doc":"Sends `self` to the client based on the provided *context*.\n\nHow the content gets written can be customized via an `ART::Response::Writer`.","summary":"<p>Sends <code>self</code> to the client based on the provided <em>context</em>.</p>","abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"HTTP::Server::Context"}],"args_string":"(context : HTTP::Server::Context) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/response.cr#L107","def":{"name":"send","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"HTTP::Server::Context"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"self.prepare(context.request)\ncontext.response.headers.merge!(@headers)\ncontext.response.status = @status\nself.write(context.response)\ncontext.response.close\n"}},{"id":"status:HTTP::Status-instance-method","html_id":"status:HTTP::Status-instance-method","name":"status","doc":"Returns the `HTTP::Status` of this response.","summary":"<p>Returns the <code>HTTP::Status</code> of this response.</p>","abstract":false,"args":[],"args_string":" : HTTP::Status","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/response.cr#L85","def":{"name":"status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::Status","visibility":"Public","body":"@status"}},{"id":"status=(code:HTTP::Status|Int32):Nil-instance-method","html_id":"status=(code:HTTP::Status|Int32):Nil-instance-method","name":"status=","doc":"Sets the status of this response.","summary":"<p>Sets the status of this response.</p>","abstract":false,"args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"HTTP::Status | Int32"}],"args_string":"(code : HTTP::Status | Int32) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/response.cr#L124","def":{"name":"status=","args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"HTTP::Status | Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@status = HTTP::Status.new(code)"}},{"id":"writer=(writer:ART::Response::Writer)-instance-method","html_id":"writer=(writer:ART::Response::Writer)-instance-method","name":"writer=","doc":"See `ART::Response::Writer`.","summary":"<p>See <code><a href=\"../../Athena/Routing/Response/Writer.html\">ART::Response::Writer</a></code>.</p>","abstract":false,"args":[{"name":"writer","doc":null,"default_value":"","external_name":"writer","restriction":"ART::Response::Writer"}],"args_string":"(writer : ART::Response::Writer)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/response.cr#L82","def":{"name":"writer=","args":[{"name":"writer","doc":null,"default_value":"","external_name":"writer","restriction":"ART::Response::Writer"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@writer = writer"}}],"macros":[],"types":[{"html_id":"athena/Athena/Routing/Response/DirectWriter","path":"Athena/Routing/Response/DirectWriter.html","kind":"struct","full_name":"Athena::Routing::Response::DirectWriter","name":"DirectWriter","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Response/Writer","kind":"struct","full_name":"Athena::Routing::Response::Writer","name":"Writer"},"ancestors":[{"html_id":"athena/Athena/Routing/Response/Writer","kind":"struct","full_name":"Athena::Routing::Response::Writer","name":"Writer"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/response.cr","line_number":72,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/response.cr#L72"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Response","kind":"class","full_name":"Athena::Routing::Response","name":"Response"},"doc":"The default `ART::Response::Writer` for an `ART::Response`.\n\nWrites directly to the *output* `IO`.","summary":"<p>The default <code><a href=\"../../../Athena/Routing/Response/Writer.html\">ART::Response::Writer</a></code> for an <code><a href=\"../../../Athena/Routing/Response.html\">ART::Response</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"write(output:IO,&:IO->Nil):Nil-instance-method","html_id":"write(output:IO,&:IO->Nil):Nil-instance-method","name":"write","doc":"Accepts an *output* `IO` that the content of the response should be written to.\n\nThe *output* `IO` is yielded directly.","summary":"<p>Accepts an <em>output</em> <code>IO</code> that the content of the response should be written to.</p>","abstract":false,"args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"args_string":"(output : IO, & : IO -> Nil) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/response.cr#L76","def":{"name":"write","args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(IO -> Nil)"},"return_type":"Nil","visibility":"Public","body":"yield output"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Response/Writer","path":"Athena/Routing/Response/Writer.html","kind":"struct","full_name":"Athena::Routing::Response::Writer","name":"Writer","abstract":true,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/response.cr","line_number":64,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/response.cr#L64"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Routing/Response/DirectWriter","kind":"struct","full_name":"Athena::Routing::Response::DirectWriter","name":"DirectWriter"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Response","kind":"class","full_name":"Athena::Routing::Response","name":"Response"},"doc":"Determines how the content of an `ART::Response` will be written to the requests' response `IO`.\n\nBy default the content is written directly to the requests' response `IO` via `ART::Response::DirectWriter`.\nHowever, custom writers can be implemented to customize that behavior.  The most common use case would be for compression.\n\nWriters can also be defined as services and injected into a listener if they require additional external dependencies.\n\n### Example\n\n```\nrequire \"athena\"\nrequire \"compress/gzip\"\n\n# Define a custom writer to gzip the response\nstruct GzipWriter < ART::Response::Writer\n  def write(output : IO, & : IO -> Nil) : Nil\n    Compress::Gzip::Writer.open(output) do |gzip_io|\n      yield gzip_io\n    end\n  end\nend\n\n# Define a new event listener to handle applying this writer\n@[ADI::Register]\nstruct CompressionListener\n  include AED::EventListenerInterface\n\n  def self.subscribed_events : AED::SubscribedEvents\n    AED::SubscribedEvents{\n      ART::Events::Response => -256, # Listen on the Response event with a very low priority\n    }\n  end\n\n  def call(event : ART::Events::Response, dispatcher : AED::EventDispatcherInterface) : Nil\n    # If the request supports gzip encoding\n    if event.request.headers.includes_word?(\"accept-encoding\", \"gzip\")\n      # Change the `ART::Response` object's writer to be our `GzipWriter`\n      event.response.writer = GzipWriter.new\n\n      # Set the encoding of the response to gzip\n      event.response.headers[\"content-encoding\"] = \"gzip\"\n    end\n  end\nend\n\nclass ExampleController < ART::Controller\n  @[ARTA::Get(\"/users\")]\n  def users : Array(User)\n    User.all\n  end\nend\n\nART.run\n\n# GET /users # => [{\"id\":1,...},...] (gzipped)\n```","summary":"<p>Determines how the content of an <code><a href=\"../../../Athena/Routing/Response.html\">ART::Response</a></code> will be written to the requests' response <code>IO</code>.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/response.cr#L64","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"write(output:IO,&:IO->Nil):Nil-instance-method","html_id":"write(output:IO,&:IO->Nil):Nil-instance-method","name":"write","doc":"Accepts an *output* `IO` that the content of the response should be written to.","summary":"<p>Accepts an <em>output</em> <code>IO</code> that the content of the response should be written to.</p>","abstract":true,"args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"args_string":"(output : IO, & : IO -> Nil) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/response.cr#L66","def":{"name":"write","args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(IO -> Nil)"},"return_type":"Nil","visibility":"Public","body":""}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Routing/RouteCollection","path":"Athena/Routing/RouteCollection.html","kind":"class","full_name":"Athena::Routing::RouteCollection","name":"RouteCollection","abstract":false,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"athena/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/routing/route_collection.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/routing/route_collection.cr#L3"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"athena/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Routing/Spec/MockRouteCollection","kind":"class","full_name":"Athena::Routing::Spec::MockRouteCollection","name":"MockRouteCollection"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Wrapper around all the registered routes of an application.\nRoutes are cached as a class variables since they're immutable once the program has been built.","summary":"<p>Wrapper around all the registered routes of an application.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"each(&):Nil-instance-method","html_id":"each(&):Nil-instance-method","name":"each","doc":"Yields the name and `ART::Action` object for each registered route.","summary":"<p>Yields the name and <code><a href=\"../../Athena/Routing/Action.html\">ART::Action</a></code> object for each registered route.</p>","abstract":false,"args":[],"args_string":"(&) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/routing/route_collection.cr#L291","def":{"name":"each","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"self.routes.each do |k, v|\n  yield {k, v}\nend"}},{"id":"each-instance-method","html_id":"each-instance-method","name":"each","doc":"Returns an `Iterator` for each registered route.","summary":"<p>Returns an <code>Iterator</code> for each registered route.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/routing/route_collection.cr#L298","def":{"name":"each","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.routes.each"}},{"id":"get(name:String):ART::ActionBase-instance-method","html_id":"get(name:String):ART::ActionBase-instance-method","name":"get","doc":"Returns the `ART::Action` with the provided *name*.\n\nRaises a `KeyError` if a route with the provided *name* does not exist.","summary":"<p>Returns the <code><a href=\"../../Athena/Routing/Action.html\">ART::Action</a></code> with the provided <em>name</em>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : ART::ActionBase","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/routing/route_collection.cr#L310","def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ART::ActionBase","visibility":"Public","body":"self.routes.fetch(name) do\n  raise(KeyError.new(\"Unknown route: '#{name}'.\"))\nend"}},{"id":"get?(name:String):ART::ActionBase?-instance-method","html_id":"get?(name:String):ART::ActionBase?-instance-method","name":"get?","doc":"Returns the `ART::Action` with the provided *name*, or `nil` if it does not exist.","summary":"<p>Returns the <code><a href=\"../../Athena/Routing/Action.html\">ART::Action</a></code> with the provided <em>name</em>, or <code>nil</code> if it does not exist.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : ART::ActionBase?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/routing/route_collection.cr#L315","def":{"name":"get?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ART::ActionBase | ::Nil","visibility":"Public","body":"self.routes[name]?"}},{"id":"routes:Hash(String,ART::ActionBase)-instance-method","html_id":"routes:Hash(String,ART::ActionBase)-instance-method","name":"routes","doc":"Returns the routes hash.","summary":"<p>Returns the routes hash.</p>","abstract":false,"args":[],"args_string":" : Hash(String, ART::ActionBase)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/routing/route_collection.cr#L303","def":{"name":"routes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, ART::ActionBase)","visibility":"Public","body":"self.class.routes"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/RouteHandler","path":"Athena/Routing/RouteHandler.html","kind":"struct","full_name":"Athena::Routing::RouteHandler","name":"RouteHandler","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/route_handler.cr","line_number":5,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/route_handler.cr#L5"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"The entry-point into `Athena::Routing`.\n\nEmits events that handle a given request and returns the resulting `ART::Response`.","summary":"<p>The entry-point into <code><a href=\"../../Athena/Routing.html\">Athena::Routing</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(event_dispatcher:AED::EventDispatcherInterface,request_store:ART::RequestStore,argument_resolver:ART::Arguments::ArgumentResolverInterface)-class-method","html_id":"new(event_dispatcher:AED::EventDispatcherInterface,request_store:ART::RequestStore,argument_resolver:ART::Arguments::ArgumentResolverInterface)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event_dispatcher","doc":null,"default_value":"","external_name":"event_dispatcher","restriction":"AED::EventDispatcherInterface"},{"name":"request_store","doc":null,"default_value":"","external_name":"request_store","restriction":"ART::RequestStore"},{"name":"argument_resolver","doc":null,"default_value":"","external_name":"argument_resolver","restriction":"ART::Arguments::ArgumentResolverInterface"}],"args_string":"(event_dispatcher : AED::EventDispatcherInterface, request_store : ART::RequestStore, argument_resolver : ART::Arguments::ArgumentResolverInterface)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/route_handler.cr#L6","def":{"name":"new","args":[{"name":"event_dispatcher","doc":null,"default_value":"","external_name":"event_dispatcher","restriction":"AED::EventDispatcherInterface"},{"name":"request_store","doc":null,"default_value":"","external_name":"request_store","restriction":"ART::RequestStore"},{"name":"argument_resolver","doc":null,"default_value":"","external_name":"argument_resolver","restriction":"ART::Arguments::ArgumentResolverInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event_dispatcher, request_store, argument_resolver)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"handle(request:HTTP::Request):ART::Response-instance-method","html_id":"handle(request:HTTP::Request):ART::Response-instance-method","name":"handle","doc":null,"summary":null,"abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"args_string":"(request : HTTP::Request) : ART::Response","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/route_handler.cr#L13","def":{"name":"handle","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ART::Response","visibility":"Public","body":"begin\n  handle_raw(request)\nrescue ex : ::Exception\n  event = ART::Events::Exception.new(request, ex)\n  @event_dispatcher.dispatch(event)\n  exception = event.exception\n  if response = event.response\n  else\n    finish_request\n    raise(exception)\n  end\n  if exception.is_a?(ART::Exceptions::HTTPException)\n    response.status = exception.status\n    response.headers.merge!(exception.headers)\n  end\n  begin\n    finish_response(response, request)\n  rescue\n    response\n  end\nend"}},{"id":"terminate(request:HTTP::Request,response:ART::Response):Nil-instance-method","html_id":"terminate(request:HTTP::Request,response:ART::Response):Nil-instance-method","name":"terminate","doc":"Terminates a request/response lifecycle.\n\nShould be called after sending the response to the client.","summary":"<p>Terminates a request/response lifecycle.</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"ART::Response"}],"args_string":"(request : HTTP::Request, response : ART::Response) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/route_handler.cr#L42","def":{"name":"terminate","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"ART::Response"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@event_dispatcher.dispatch(ART::Events::Terminate.new(request, response))"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Router","path":"Athena/Routing/Router.html","kind":"class","full_name":"Athena::Routing::Router","name":"Router","abstract":false,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Athena/Routing/RouterInterface","kind":"module","full_name":"Athena::Routing::RouterInterface","name":"RouterInterface"},{"html_id":"athena/Athena/Routing/URLGeneratorInterface","kind":"module","full_name":"Athena::Routing::URLGeneratorInterface","name":"URLGeneratorInterface"},{"html_id":"athena/Athena/Routing/RequestMatcherInterface","kind":"module","full_name":"Athena::Routing::RequestMatcherInterface","name":"RequestMatcherInterface"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/routing/router.cr","line_number":5,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/routing/router.cr#L5"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Routing/RouterInterface","kind":"module","full_name":"Athena::Routing::RouterInterface","name":"RouterInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Default implementation of `ARTA::RouterInterface`.","summary":"<p>Default implementation of <code>ARTA::RouterInterface</code>.</p>","class_methods":[],"constructors":[{"id":"new(request_store:ART::RequestStore)-class-method","html_id":"new(request_store:ART::RequestStore)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"request_store","doc":null,"default_value":"","external_name":"request_store","restriction":"ART::RequestStore"}],"args_string":"(request_store : ART::RequestStore)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/routing/router.cr#L22","def":{"name":"new","args":[{"name":"request_store","doc":null,"default_value":"","external_name":"request_store","restriction":"ART::RequestStore"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(request_store)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"generate(route:String,params:Hash(String,_)?=nil,reference_type:ART::URLGeneratorInterface::ReferenceType=:absolute_path):String-instance-method","html_id":"generate(route:String,params:Hash(String,_)?=nil,reference_type:ART::URLGeneratorInterface::ReferenceType=:absolute_path):String-instance-method","name":"generate","doc":"Generates a URL to the provided *route* with the provided *params*.\n\nBy default the path is an `ART::URLGeneratorInterface::ReferenceType::Absolute_Path`,\nbut can be changed via the *reference_type* argument.\n\nAny *params* not related to an argument for the provided *route* will be added as query params.\n\n```\nrequire \"athena\"\n\nclass ExampleController < ART::Controller\n  @[ARTA::Get(\"/add/:value1/:value2\", name: \"add\")]\n  def add(value1 : Int32, value2 : Int32, negative : Bool = false) : Int32\n    0\n  end\n\n  @[ARTA::Get(\"/\")]\n  def get_link : String\n    \"\"\n  end\nend\n\ngenerator.generate \"add\", value1: 10, value2: 5 # => /add/10/5\n```","summary":"<p>Generates a URL to the provided <em>route</em> with the provided <em>params</em>.</p>","abstract":false,"args":[{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":"String"},{"name":"params","doc":null,"default_value":"nil","external_name":"params","restriction":"Hash(String, _) | ::Nil"},{"name":"reference_type","doc":null,"default_value":":absolute_path","external_name":"reference_type","restriction":"ART::URLGeneratorInterface::ReferenceType"}],"args_string":"(route : String, params : Hash(String, _)? = <span class=\"n\">nil</span>, reference_type : ART::URLGeneratorInterface::ReferenceType = <span class=\"n\">:absolute_path</span>) : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/routing/router.cr#L25","def":{"name":"generate","args":[{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":"String"},{"name":"params","doc":null,"default_value":"nil","external_name":"params","restriction":"Hash(String, _) | ::Nil"},{"name":"reference_type","doc":null,"default_value":":absolute_path","external_name":"reference_type","restriction":"ART::URLGeneratorInterface::ReferenceType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"self.generator.generate(route, params, reference_type)"}},{"id":"match(request:HTTP::Request):Amber::Router::RoutedResult(Athena::Routing::ActionBase)-instance-method","html_id":"match(request:HTTP::Request):Amber::Router::RoutedResult(Athena::Routing::ActionBase)-instance-method","name":"match","doc":"Matches the provided *request* with its related `ART::Action`.\n\nOPTIMIZE: Possibly raise a non `ART::Exceptions::HTTPException` here to allow caller to determine what to do.","summary":"<p>Matches the provided <em>request</em> with its related <code><a href=\"../../Athena/Routing/Action.html\">ART::Action</a></code>.</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"args_string":"(request : HTTP::Request) : Amber::Router::RoutedResult(Athena::Routing::ActionBase)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/routing/router.cr#L32","def":{"name":"match","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Amber::Router::RoutedResult(Athena::Routing::ActionBase)","visibility":"Public","body":"matching_routes = self.class.matcher.find_routes(request.path)\nif matching_routes.empty?\n  raise(ART::Exceptions::NotFound.new(\"No route found for '#{request.method} #{request.path}'\"))\nend\nsupported_methods = [] of String\nroute = matching_routes.find do |r|\n  action = r.payload.not_nil!\n  supported_methods << action.method\n  action.method == request.method\nend\nroute || (raise(ART::Exceptions::MethodNotAllowed.new(\"No route found for '#{request.method} #{request.path}': (Allow: #{supported_methods.join(\", \")})\")))\n"}},{"id":"route_collection:ART::RouteCollection-instance-method","html_id":"route_collection:ART::RouteCollection-instance-method","name":"route_collection","doc":"Returns the `ART::RouteCollection` associated with this router.","summary":"<p>Returns the <code><a href=\"../../Athena/Routing/RouteCollection.html\">ART::RouteCollection</a></code> associated with this router.</p>","abstract":false,"args":[],"args_string":" : ART::RouteCollection","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/routing/router.cr#L59","def":{"name":"route_collection","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ART::RouteCollection","visibility":"Public","body":"self.class.route_collection"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/RouterInterface","path":"Athena/Routing/RouterInterface.html","kind":"module","full_name":"Athena::Routing::RouterInterface","name":"RouterInterface","abstract":false,"superclass":null,"ancestors":[{"html_id":"athena/Athena/Routing/URLGeneratorInterface","kind":"module","full_name":"Athena::Routing::URLGeneratorInterface","name":"URLGeneratorInterface"},{"html_id":"athena/Athena/Routing/RequestMatcherInterface","kind":"module","full_name":"Athena::Routing::RequestMatcherInterface","name":"RequestMatcherInterface"}],"locations":[{"filename":"src/routing/router_interface.cr","line_number":8,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/routing/router_interface.cr#L8"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Routing/RequestMatcherInterface","kind":"module","full_name":"Athena::Routing::RequestMatcherInterface","name":"RequestMatcherInterface"},{"html_id":"athena/Athena/Routing/URLGeneratorInterface","kind":"module","full_name":"Athena::Routing::URLGeneratorInterface","name":"URLGeneratorInterface"}],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Routing/Router","kind":"class","full_name":"Athena::Routing::Router","name":"Router"}],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Interface for routing types.\n\nA router instance must also implement both `ART::RequestMatcherInterface` and `ART:URLGeneratorInterface\nas well as expose the routes via an `#route_collection` method.","summary":"<p>Interface for routing types.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"route_collection:ART::RouteCollection-instance-method","html_id":"route_collection:ART::RouteCollection-instance-method","name":"route_collection","doc":"Returns the `ART::RouteCollection` associated with this router.","summary":"<p>Returns the <code><a href=\"../../Athena/Routing/RouteCollection.html\">ART::RouteCollection</a></code> associated with this router.</p>","abstract":true,"args":[],"args_string":" : ART::RouteCollection","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/routing/router_interface.cr#L13","def":{"name":"route_collection","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ART::RouteCollection","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Spec","path":"Athena/Routing/Spec.html","kind":"module","full_name":"Athena::Routing::Spec","name":"Spec","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/spec.cr","line_number":35,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/spec.cr#L35"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"A set of testing utilities/types to aid in testing `Athena::Routing` related types.\n\n### Getting Started\n\nRequire this module in your `spec_helper.cr` file.\n\n```\n# This also requires \"spec\" and \"athena-spec\".\nrequire \"athena/spec\"\n```\n\nAdd `Athena::Spec` as a development dependency, then run a `shards install`.\nSee the individual types for more information.","summary":"<p>A set of testing utilities/types to aid in testing <code><a href=\"../../Athena/Routing.html\">Athena::Routing</a></code> related types.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Routing/Spec/AbstractBrowser","path":"Athena/Routing/Spec/AbstractBrowser.html","kind":"struct","full_name":"Athena::Routing::Spec::AbstractBrowser","name":"AbstractBrowser","abstract":true,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/spec.cr","line_number":39,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/spec.cr#L39"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Routing/Spec/HTTPBrowser","kind":"struct","full_name":"Athena::Routing::Spec::HTTPBrowser","name":"HTTPBrowser"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Spec","kind":"module","full_name":"Athena::Routing::Spec","name":"Spec"},"doc":"Simulates a browser to make requests to some destination.\n\nNOTE: Currently just acts as a client to make HTTP requests.  This type exists to allow for introduction of other functionality in the future.","summary":"<p>Simulates a browser to make requests to some destination.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/spec.cr#L39","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"request(method:String,path:String,headers:HTTP::Headers,body:String|Bytes|IO|Nil):HTTP::Server::Response-instance-method","html_id":"request(method:String,path:String,headers:HTTP::Headers,body:String|Bytes|IO|Nil):HTTP::Server::Response-instance-method","name":"request","doc":"Makes an HTTP request with the provided *method*, at the provided *path*, with the provided *body* and/or *headers* and returns the resulting response.","summary":"<p>Makes an HTTP request with the provided <em>method</em>, at the provided <em>path</em>, with the provided <em>body</em> and/or <em>headers</em> and returns the resulting response.</p>","abstract":false,"args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":"String"},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"headers","doc":null,"default_value":"","external_name":"headers","restriction":"HTTP::Headers"},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"String | Bytes | IO | Nil"}],"args_string":"(method : String, path : String, headers : HTTP::Headers, body : String | Bytes | IO | Nil) : HTTP::Server::Response","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/spec.cr#L46","def":{"name":"request","args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":"String"},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"headers","doc":null,"default_value":"","external_name":"headers","restriction":"HTTP::Headers"},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"String | Bytes | IO | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::Server::Response","visibility":"Public","body":"self.do_request(HTTP::Request.new(method, path, headers, body))"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Spec/APITestCase","path":"Athena/Routing/Spec/APITestCase.html","kind":"struct","full_name":"Athena::Routing::Spec::APITestCase","name":"APITestCase","abstract":true,"superclass":{"html_id":"athena/Athena/Routing/Spec/WebTestCase","kind":"struct","full_name":"Athena::Routing::Spec::WebTestCase","name":"WebTestCase"},"ancestors":[{"html_id":"athena/Athena/Routing/Spec/WebTestCase","kind":"struct","full_name":"Athena::Routing::Spec::WebTestCase","name":"WebTestCase"},{"html_id":"athena/Athena/Spec/TestCase","kind":"struct","full_name":"Athena::Spec::TestCase","name":"TestCase"},{"html_id":"athena/Athena/Spec/Methods","kind":"module","full_name":"Athena::Spec::Methods","name":"Methods"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/spec.cr","line_number":196,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/spec.cr#L196"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Spec","kind":"module","full_name":"Athena::Routing::Spec","name":"Spec"},"doc":"A `WebTestCase` implementation with the intent of testing API controllers.\nCan be extended to add additional application specific configuration, such as setting up an authenticated user to make the request as.\n\n## Usage\n\nSay we want to test the following controller:\n\n```\nclass ExampleController < ART::Controller\n  @[ARTA::QueryParam(\"negative\")]\n  @[ARTA::Get(\"/add/:value1/:value2\")]\n  def add(value1 : Int32, value2 : Int32, negative : Bool = false) : Int32\n    sum = value1 + value2\n    negative ? -sum : sum\n  end\nend\n```\n\nWe can define a struct inheriting from `self` to implement our test logic:\n\n```\nstruct ExampleControllerTest < ART::Spec::APITestCase\n  def test_add_positive : Nil\n    self.request(\"GET\", \"/add/5/3\").body.should eq \"8\"\n  end\n\n  def test_add_negative : Nil\n    self.request(\"GET\", \"/add/5/3?negative=true\").body.should eq \"-8\"\n  end\nend\n```\n\nThe `#request` method is used to make our requests to the API, then we run are assertions against the resulting `HTTP::Server::Response`.\nA key thing to point out is that there is no `HTTP::Server` involved, thus resulting in more performant specs.\n\nNOTE: Be sure to call `Athena::Spec.run_all` to your `spec_helper.cr` to ensure all test case instances are executed.\n\n### Mocking External Dependencies\n\nThe previous example was quite simple.  However, most likely a controller is going to have dependencies on various other services; such as an API client to make requests to a third party API.\nBy default each test will be executed with the same services as it would normally, i.e. those requests to the third party API would actually be made.\nTo solve this we can create a mock implementation of the API client and make it so that implementation is injected when the test runs.\n\n```\n# Create an example API client.\n@[ADI::Register]\nclass APIClient\n  def fetch_latest_data : String\n    # Assume this method actually makes an HTTP request to get the latest data.\n    \"DATA\"\n  end\nend\n\n# Define a mock implementation of our APIClient that does not make a request and just returns mock data.\nclass MockAPIClient < APIClient\n  def fetch_latest_data : String\n    # This could also be an instance variable that gets set when this mock is created.\n    \"MOCK_DATA\"\n  end\nend\n\n# Enable our API client to be replaced in the service container.\nclass ADI::Spec::MockableServiceContainer\n  # Use the block version of the `property` macro to use our mocked client by default, while still allowing it to be replaced at runtime.\n  #\n  # The block version of `getter` could also be used if you don't need to set it at runtime.\n  # The `setter` macro could be also if you only want to allow replacing it at runtime.\n  property(api_client) { MockAPIClient.new }\nend\n\n@[ADI::Register(public: true)]\nclass ExampleServiceController < ART::Controller\n  def initialize(@api_client : APIClient); end\n\n  @[ARTA::Post(\"/sync\")]\n  def sync_data : String\n    # Use the injected api client to get the latest data to sync.\n    data = @api_client.fetch_latest_data\n\n    # ...\n\n    data\n  end\nend\n\nstruct ExampleServiceControllerTest < ART::Spec::APITestCase\n  def initialize\n    super\n\n    # Our API client could also have been replaced at runtime;\n    # such as if you wanted provide it what data it should return on a test by test basis.\n    # self.client.container.api_client = MockAPIClient.new\n  end\n\n  def test_sync_data : Nil\n    self.request(\"POST\", \"/sync\").body.should eq %(\"MOCK_DATA\")\n  end\nend\n```\n\nNOTE: See `ADI::Spec::MockableServiceContainer` for more details on mocking services.\n\nEach `test_*` method has its own service container instance.\nAny services that are mutated/replaced within the `initialize` method will affect all `test_*` methods.\nHowever, services can also be mutated/replaced within specific `test_*` methods to scope it that particular test;\njust be sure that you do it _before_ calling `#request`.","summary":"<p>A <code><a href=\"../../../Athena/Routing/Spec/WebTestCase.html\">WebTestCase</a></code> implementation with the intent of testing API controllers.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/spec.cr#L199","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"client:AbstractBrowser-instance-method","html_id":"client:AbstractBrowser-instance-method","name":"client","doc":"Returns a reference to the `AbstractBrowser` being used for the test.","summary":"<p>Returns a reference to the <code><a href=\"../../../Athena/Routing/Spec/AbstractBrowser.html\">AbstractBrowser</a></code> being used for the test.</p>","abstract":false,"args":[],"args_string":" : AbstractBrowser","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/spec.cr#L207","def":{"name":"client","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AbstractBrowser","visibility":"Public","body":"@client.not_nil!"}},{"id":"request(method:String,path:String,body:String|Bytes|IO|Nil=nil,headers:HTTP::Headers=HTTP::Headers.new):HTTP::Server::Response-instance-method","html_id":"request(method:String,path:String,body:String|Bytes|IO|Nil=nil,headers:HTTP::Headers=HTTP::Headers.new):HTTP::Server::Response-instance-method","name":"request","doc":"See `AbstractBrowser#request`.","summary":"<p>See <code><a href=\"../../../Athena/Routing/Spec/AbstractBrowser.html#request(method:String,path:String,headers:HTTP::Headers,body:String%7CBytes%7CIO%7CNil):HTTP::Server::Response-instance-method\">AbstractBrowser#request</a></code>.</p>","abstract":false,"args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":"String"},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":"String | Bytes | IO | Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(method : String, path : String, body : String | Bytes | IO | Nil = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>) : HTTP::Server::Response","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/spec.cr#L212","def":{"name":"request","args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":"String"},{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":"String | Bytes | IO | Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::Server::Response","visibility":"Public","body":"self.client.request(method, path, headers, body)"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Spec/HTTPBrowser","path":"Athena/Routing/Spec/HTTPBrowser.html","kind":"struct","full_name":"Athena::Routing::Spec::HTTPBrowser","name":"HTTPBrowser","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Spec/AbstractBrowser","kind":"struct","full_name":"Athena::Routing::Spec::AbstractBrowser","name":"AbstractBrowser"},"ancestors":[{"html_id":"athena/Athena/Routing/Spec/AbstractBrowser","kind":"struct","full_name":"Athena::Routing::Spec::AbstractBrowser","name":"AbstractBrowser"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/spec.cr","line_number":60,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/spec.cr#L60"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Spec","kind":"module","full_name":"Athena::Routing::Spec","name":"Spec"},"doc":"Simulates a browser and makes a requests to `ART::RouteHandler`.","summary":"<p>Simulates a browser and makes a requests to <code><a href=\"../../../Athena/Routing/RouteHandler.html\">ART::RouteHandler</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"container:ADI::Spec::MockableServiceContainer-instance-method","html_id":"container:ADI::Spec::MockableServiceContainer-instance-method","name":"container","doc":"Returns a reference to an `ADI::Spec::MockableServiceContainer` to allow configuring the container before a test.","summary":"<p>Returns a reference to an <code><a href=\"../../../Athena/DependencyInjection/Spec/MockableServiceContainer.html\">ADI::Spec::MockableServiceContainer</a></code> to allow configuring the container before a test.</p>","abstract":false,"args":[],"args_string":" : ADI::Spec::MockableServiceContainer","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/spec.cr#L62","def":{"name":"container","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ADI::Spec::MockableServiceContainer","visibility":"Public","body":"ADI.container.as(ADI::Spec::MockableServiceContainer)"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Spec/MockRouteCollection","path":"Athena/Routing/Spec/MockRouteCollection.html","kind":"class","full_name":"Athena::Routing::Spec::MockRouteCollection","name":"MockRouteCollection","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/RouteCollection","kind":"class","full_name":"Athena::Routing::RouteCollection","name":"RouteCollection"},"ancestors":[{"html_id":"athena/Athena/Routing/RouteCollection","kind":"class","full_name":"Athena::Routing::RouteCollection","name":"RouteCollection"},{"html_id":"athena/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"athena/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/spec.cr","line_number":224,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/spec.cr#L224"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Spec","kind":"module","full_name":"Athena::Routing::Spec","name":"Spec"},"doc":"Test implementation of `ART::RouteCollection` that allows routes to be scoped to a specific instance and added manually.","summary":"<p>Test implementation of <code><a href=\"../../../Athena/Routing/RouteCollection.html\">ART::RouteCollection</a></code> that allows routes to be scoped to a specific instance and added manually.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"add(name:String,route:ART::ActionBase):Nil-instance-method","html_id":"add(name:String,route:ART::ActionBase):Nil-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":"ART::ActionBase"}],"args_string":"(name : String, route : ART::ActionBase) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/spec.cr#L227","def":{"name":"add","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":"ART::ActionBase"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@routes[name] = route"}},{"id":"add(route:ART::ActionBase):Nil-instance-method","html_id":"add(route:ART::ActionBase):Nil-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":"ART::ActionBase"}],"args_string":"(route : ART::ActionBase) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/spec.cr#L231","def":{"name":"add","args":[{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":"ART::ActionBase"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"self.add(route.name, route)"}},{"id":"routes:Hash(String,ART::ActionBase)-instance-method","html_id":"routes:Hash(String,ART::ActionBase)-instance-method","name":"routes","doc":"Returns the routes hash.","summary":"<p>Returns the routes hash.</p>","abstract":false,"args":[],"args_string":" : Hash(String, ART::ActionBase)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/spec.cr#L235","def":{"name":"routes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, ART::ActionBase)","visibility":"Public","body":"@routes"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Spec/WebTestCase","path":"Athena/Routing/Spec/WebTestCase.html","kind":"struct","full_name":"Athena::Routing::Spec::WebTestCase","name":"WebTestCase","abstract":true,"superclass":{"html_id":"athena/Athena/Spec/TestCase","kind":"struct","full_name":"Athena::Spec::TestCase","name":"TestCase"},"ancestors":[{"html_id":"athena/Athena/Spec/TestCase","kind":"struct","full_name":"Athena::Spec::TestCase","name":"TestCase"},{"html_id":"athena/Athena/Spec/Methods","kind":"module","full_name":"Athena::Spec::Methods","name":"Methods"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/spec.cr","line_number":83,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/spec.cr#L83"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Routing/Spec/APITestCase","kind":"struct","full_name":"Athena::Routing::Spec::APITestCase","name":"APITestCase"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Spec","kind":"module","full_name":"Athena::Routing::Spec","name":"Spec"},"doc":"Base `ASPEC::TestCase` for web based integration tests.\n\nNOTE: Currently only `API` based tests are supported.  This type exists to allow for introduction of other types in the future.","summary":"<p>Base <code><a href=\"../../../Athena/Spec/TestCase.html\">ASPEC::TestCase</a></code> for web based integration tests.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"create_client:AbstractBrowser-instance-method","html_id":"create_client:AbstractBrowser-instance-method","name":"create_client","doc":"Returns the `AbstractBrowser` instance to which requests should be made against.","summary":"<p>Returns the <code><a href=\"../../../Athena/Routing/Spec/AbstractBrowser.html\">AbstractBrowser</a></code> instance to which requests should be made against.</p>","abstract":false,"args":[],"args_string":" : AbstractBrowser","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/spec.cr#L85","def":{"name":"create_client","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AbstractBrowser","visibility":"Public","body":"HTTPBrowser.new"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Routing/StreamedResponse","path":"Athena/Routing/StreamedResponse.html","kind":"class","full_name":"Athena::Routing::StreamedResponse","name":"StreamedResponse","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Response","kind":"class","full_name":"Athena::Routing::Response","name":"Response"},"ancestors":[{"html_id":"athena/Athena/Routing/Response","kind":"class","full_name":"Athena::Routing::Response","name":"Response"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/streamed_response.cr","line_number":6,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/streamed_response.cr#L6"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Represents an `ART::Response` whose content should be streamed to the client as opposed to being written all at once.\nThis can be useful in cases where the response content is too large to fit into memory.\n\nThe content is stored in a proc that gets called when `self` is being written to the response IO.\nHow the output gets written can be customized via an `ART::Response::Writer`.","summary":"<p>Represents an <code><a href=\"../../Athena/Routing/Response.html\">ART::Response</a></code> whose content should be streamed to the client as opposed to being written all at once.</p>","class_methods":[],"constructors":[{"id":"new(status:HTTP::Status|Int32=HTTP::Status::OK,headers:HTTP::Headers=HTTP::Headers.new,&block:IO->Nil)-class-method","html_id":"new(status:HTTP::Status|Int32=HTTP::Status::OK,headers:HTTP::Headers=HTTP::Headers.new,&block:IO->Nil)-class-method","name":"new","doc":"Creates a new response with optional *status*, and *headers* arguments.\n\nThe block is captured and called when `self` is being written to the response's `IO`.\nThis can be useful to reduce memory overhead when needing to return large responses.\n\n```\nrequire \"athena\"\n\nclass ExampleController < ART::Controller\n  @[ARTA::Get(\"/users\")]\n  def users : ART::Response\n    ART::StreamedResponse.new headers: HTTP::Headers{\"content-type\" => \"application/json; charset=UTF-8\"} do |io|\n      User.all.to_json io\n    end\n  end\nend\n\nART.run\n\n# GET /users # => [{\"id\":1,...},...]\n```","summary":"<p>Creates a new response with optional <em>status</em>, and <em>headers</em> arguments.</p>","abstract":false,"args":[{"name":"status","doc":null,"default_value":"HTTP::Status::OK","external_name":"status","restriction":"HTTP::Status | Int32"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(status : HTTP::Status | Int32 = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Status</span><span class=\"t\">::</span><span class=\"t\">OK</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>, &block : IO -> Nil)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/streamed_response.cr#L30","def":{"name":"new","args":[{"name":"status","doc":null,"default_value":"HTTP::Status::OK","external_name":"status","restriction":"HTTP::Status | Int32"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(IO -> Nil)"},"return_type":"","visibility":"Public","body":"new(block, status, headers)"}},{"id":"new(callback:Proc(IO,Nil),status:HTTP::Status|Int32=HTTP::Status::OK,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(callback:Proc(IO,Nil),status:HTTP::Status|Int32=HTTP::Status::OK,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":"Creates a new response with the provided *callback* and optional *status*, and *headers* arguments.\n\nThe proc is called when `self` is being written to the response's `IO`.","summary":"<p>Creates a new response with the provided <em>callback</em> and optional <em>status</em>, and <em>headers</em> arguments.</p>","abstract":false,"args":[{"name":"callback","doc":null,"default_value":"","external_name":"callback","restriction":"Proc(IO, Nil)"},{"name":"status","doc":null,"default_value":"HTTP::Status::OK","external_name":"status","restriction":"HTTP::Status | Int32"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(callback : Proc(IO, Nil), status : HTTP::Status | Int32 = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Status</span><span class=\"t\">::</span><span class=\"t\">OK</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/streamed_response.cr#L37","def":{"name":"new","args":[{"name":"callback","doc":null,"default_value":"","external_name":"callback","restriction":"Proc(IO, Nil)"},{"name":"status","doc":null,"default_value":"HTTP::Status::OK","external_name":"status","restriction":"HTTP::Status | Int32"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(callback, status, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"content=(callback:Proc(IO,Nil))-instance-method","html_id":"content=(callback:Proc(IO,Nil))-instance-method","name":"content=","doc":"Updates the callback of `self`.","summary":"<p>Updates the callback of <code>self</code>.</p>","abstract":false,"args":[{"name":"callback","doc":null,"default_value":"","external_name":"callback","restriction":"Proc(IO, Nil)"}],"args_string":"(callback : Proc(IO, Nil))","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/streamed_response.cr#L42","def":{"name":"content=","args":[{"name":"callback","doc":null,"default_value":"","external_name":"callback","restriction":"Proc(IO, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@callback = callback"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/TimeConverter","path":"Athena/Routing/TimeConverter.html","kind":"struct","full_name":"Athena::Routing::TimeConverter","name":"TimeConverter","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/ParamConverterInterface","kind":"struct","full_name":"Athena::Routing::ParamConverterInterface","name":"ParamConverterInterface"},"ancestors":[{"html_id":"athena/Athena/Routing/ParamConverterInterface","kind":"struct","full_name":"Athena::Routing::ParamConverterInterface","name":"ParamConverterInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/time_converter.cr","line_number":33,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/time_converter.cr#L33"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Converts a date(time) string into a `Time` instance.\n\nOptionally allows specifying the *format* and *location* to use when parsing the string.\nIf no *format* is specified, defaults to [Time.rfc_3339](https://crystal-lang.org/api/Time.html#parse_rfc3339%28time:String%29-class-method).\nDefaults to `UTC` if no *location* is specified with the format.\n\nRaises an `ART::Exceptions::BadRequest` if the date(time) string could not be parsed.\n\nNOTE: The format can be anything supported via [Time::Format](https://crystal-lang.org/api/Time/Format.html).\n\n### Example\n\n```\nrequire \"athena\"\n\nclass ExampleController < ART::Controller\n  @[ARTA::Get(path: \"/event/:start_time/:end_time\")]\n  @[ARTA::ParamConverter(\"start_time\", converter: ART::TimeConverter, format: \"%F\", location: Time::Location.load(\"Europe/Berlin\"))]\n  @[ARTA::ParamConverter(\"end_time\", converter: ART::TimeConverter)]\n  def event(start_time : Time, end_time : Time) : Nil\n    start_time # => 2020-04-07 00:00:00.0 +02:00 Europe/Berlin\n    end_time   # => 2020-04-08 12:34:56.0 UTC\n  end\nend\n\nART.run\n\n# GET /event/2020-04-07/2020-04-08T12:34:56Z\n```","summary":"<p>Converts a date(time) string into a <code>Time</code> instance.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"apply(request:HTTP::Request,configuration:Configuration):Nil-instance-method","html_id":"apply(request:HTTP::Request,configuration:Configuration):Nil-instance-method","name":"apply","doc":"Applies the conversion logic based on the provided *request* and *configuration*.\n\nMost commonly this involves setting/overriding a value stored in the request's `ART::ParameterBag` via `request.attributes`.","summary":"<p>Applies the conversion logic based on the provided <em>request</em> and <em>configuration</em>.</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"configuration","doc":null,"default_value":"","external_name":"configuration","restriction":"Configuration"}],"args_string":"(request : HTTP::Request, configuration : Configuration) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/time_converter.cr#L37","def":{"name":"apply","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"configuration","doc":null,"default_value":"","external_name":"configuration","restriction":"Configuration"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"begin\n  arg_name = configuration.name\n  if request.attributes.has?(arg_name)\n  else\n    return\n  end\n  value = request.attributes.get(arg_name)\n  if value.is_a?(Time) || (!value.is_a?(String))\n    return\n  end\n  time = (  format = configuration.format) ? Time.parse(value, format, configuration.location) : Time.parse_rfc3339(value)\n  request.attributes.set(arg_name, time, Time)\nrescue ex : Time::Format::Error\n  raise(ART::Exceptions::BadRequest.new(\"Invalid date(time) for argument '#{arg_name}'.\"))\nend"}}],"macros":[],"types":[{"html_id":"athena/Athena/Routing/TimeConverter/Configuration","path":"Athena/Routing/TimeConverter/Configuration.html","kind":"struct","full_name":"Athena::Routing::TimeConverter::Configuration","name":"Configuration","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/ParamConverterInterface/ConfigurationInterface","kind":"struct","full_name":"Athena::Routing::ParamConverterInterface::ConfigurationInterface","name":"ConfigurationInterface"},"ancestors":[{"html_id":"athena/Athena/Routing/ParamConverterInterface/ConfigurationInterface","kind":"struct","full_name":"Athena::Routing::ParamConverterInterface::ConfigurationInterface","name":"ConfigurationInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/time_converter.cr","line_number":34,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/time_converter.cr#L34"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/TimeConverter","kind":"struct","full_name":"Athena::Routing::TimeConverter","name":"TimeConverter"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name:String,converter:ART::ParamConverterInterface.class,format:String?=nil,location:Time::Location=Time::Location::UTC)-class-method","html_id":"new(name:String,converter:ART::ParamConverterInterface.class,format:String?=nil,location:Time::Location=Time::Location::UTC)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"converter","doc":null,"default_value":"","external_name":"converter","restriction":"ART::ParamConverterInterface.class"},{"name":"format","doc":null,"default_value":"nil","external_name":"format","restriction":"String | ::Nil"},{"name":"location","doc":null,"default_value":"Time::Location::UTC","external_name":"location","restriction":"Time::Location"}],"args_string":"(name : String, converter : <span class=\"t\">ART</span><span class=\"t\">::</span><span class=\"t\">ParamConverterInterface</span>.<span class=\"k\">class</span>, format : String? = <span class=\"n\">nil</span>, location : Time::Location = <span class=\"t\">Time</span><span class=\"t\">::</span><span class=\"t\">Location</span><span class=\"t\">::</span><span class=\"t\">UTC</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/time_converter.cr#L34","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"converter","doc":null,"default_value":"","external_name":"converter","restriction":"ART::ParamConverterInterface.class"},{"name":"format","doc":null,"default_value":"nil","external_name":"format","restriction":"String | ::Nil"},{"name":"location","doc":null,"default_value":"Time::Location::UTC","external_name":"location","restriction":"Time::Location"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, converter, format, location)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"format:String?-instance-method","html_id":"format:String?-instance-method","name":"format","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"def":{"name":"format","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@format"}},{"id":"location:Time::Location-instance-method","html_id":"location:Time::Location-instance-method","name":"location","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Time::Location","source_link":null,"def":{"name":"location","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time::Location","visibility":"Public","body":"@location"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Routing/URLGenerator","path":"Athena/Routing/URLGenerator.html","kind":"class","full_name":"Athena::Routing::URLGenerator","name":"URLGenerator","abstract":false,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Athena/Routing/URLGeneratorInterface","kind":"module","full_name":"Athena::Routing::URLGeneratorInterface","name":"URLGeneratorInterface"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/routing/url_generator.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/routing/url_generator.cr#L2"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Routing/URLGeneratorInterface","kind":"module","full_name":"Athena::Routing::URLGeneratorInterface","name":"URLGeneratorInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Default implementation of `ART::URLGeneratorInterface`.","summary":"<p>Default implementation of <code><a href=\"../../Athena/Routing/URLGeneratorInterface.html\">ART::URLGeneratorInterface</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(routes:ART::RouteCollection,request:HTTP::Request)-class-method","html_id":"new(routes:ART::RouteCollection,request:HTTP::Request)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"routes","doc":null,"default_value":"","external_name":"routes","restriction":"ART::RouteCollection"},{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"args_string":"(routes : ART::RouteCollection, request : HTTP::Request)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/routing/url_generator.cr#L5","def":{"name":"new","args":[{"name":"routes","doc":null,"default_value":"","external_name":"routes","restriction":"ART::RouteCollection"},{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(routes, request)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"generate(route:String,params:Hash(String,_)?=nil,reference_type:ART::URLGeneratorInterface::ReferenceType=:absolute_path):String-instance-method","html_id":"generate(route:String,params:Hash(String,_)?=nil,reference_type:ART::URLGeneratorInterface::ReferenceType=:absolute_path):String-instance-method","name":"generate","doc":"Generates a URL to the provided *route* with the provided *params*.\n\nBy default the path is an `ART::URLGeneratorInterface::ReferenceType::Absolute_Path`,\nbut can be changed via the *reference_type* argument.\n\nAny *params* not related to an argument for the provided *route* will be added as query params.\n\n```\nrequire \"athena\"\n\nclass ExampleController < ART::Controller\n  @[ARTA::Get(\"/add/:value1/:value2\", name: \"add\")]\n  def add(value1 : Int32, value2 : Int32, negative : Bool = false) : Int32\n    0\n  end\n\n  @[ARTA::Get(\"/\")]\n  def get_link : String\n    \"\"\n  end\nend\n\ngenerator.generate \"add\", value1: 10, value2: 5 # => /add/10/5\n```\n\n*params* are validated to ensure they are all provided, and meet any route constraints defined on the action.\n\nOPTIMIZE: Make URL generation more robust.","summary":"<p>Generates a URL to the provided <em>route</em> with the provided <em>params</em>.</p>","abstract":false,"args":[{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":"String"},{"name":"params","doc":null,"default_value":"nil","external_name":"params","restriction":"Hash(String, _) | ::Nil"},{"name":"reference_type","doc":null,"default_value":":absolute_path","external_name":"reference_type","restriction":"ART::URLGeneratorInterface::ReferenceType"}],"args_string":"(route : String, params : Hash(String, _)? = <span class=\"n\">nil</span>, reference_type : ART::URLGeneratorInterface::ReferenceType = <span class=\"n\">:absolute_path</span>) : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/routing/url_generator.cr#L12","def":{"name":"generate","args":[{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":"String"},{"name":"params","doc":null,"default_value":"nil","external_name":"params","restriction":"Hash(String, _) | ::Nil"},{"name":"reference_type","doc":null,"default_value":":absolute_path","external_name":"reference_type","restriction":"ART::URLGeneratorInterface::ReferenceType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"route = @routes.get(route)\nfragment = params.try do |__arg0|\n  (__arg0.delete(\"_fragment\")).to_s.presence\nend\nmerged_params = route.arguments.to_h do |argument|\n  if ((!argument.has_default?) && (!argument.nilable?)) && (!params.try(&.has_key?(argument.name)))\n    raise(ArgumentError.new(\"Route argument '#{argument.name}' is not nilable and was not provided nor has a default value.\"))\n  end\n  value = (if !params.try(&.has_key?(argument.name))\n    argument.default\n  else\n    params_value = params.try(&.[](argument.name))\n    if (params_value.nil? && (!argument.nilable?)) && argument.default.nil?\n      raise(ArgumentError.new(\"Route argument '#{argument.name}' is not nilable.\"))\n    end\n    params_value\n  end).to_s\n  if requirements = route.constraints[argument.name]?\n    if value.matches?(requirements)\n    else\n      raise(ArgumentError.new(\"Route argument '#{argument.name}' for route '#{route.name}' must match '#{requirements}', got '#{value}'.\"))\n    end\n  end\n  if (param = route.params.find do |__arg4|\n    __arg4.name == argument.name\n  end) && (param.default.to_s != value)\n    next {\"\", \"\"}\n  end\n  params.try(&.delete(argument.name))\n  {\":#{argument.name}\", value}\nend\nquery = if params && (!params.empty?)\n  params.compact!\n  HTTP::Params.encode(params.transform_values do |__arg6|\n    __arg6.to_s.as(String)\n  end)\nend\nport = if (p = (@request.headers[\"Host\"]?.try do |__arg7|\n  (__arg7.split(':')).last?.try(&.to_i)\nend)) && (!(p.in?(80, 443)))\n  p\nend\nhost = {% if (compare_versions(Crystal::VERSION, \"0.36.0-0\")) >= 0 %}\n             @request.hostname\n           {% else %}\n             @request.host\n           {% end %}\nuri = URI.new(scheme: \"https\", host: host || \"localhost\", port: port, path: (route.path.gsub(/(?:(:\\w+))/, merged_params)).gsub(/\\/+$/, \"\"), query: query, fragment: fragment)\ncase reference_type\nin .absolute_path?\n  String.build do |str|\n    str << uri.path\n    if q = uri.query.presence\n      (str << '?') << q\n    end\n    if f = uri.fragment.presence\n      (str << '#') << f\n    end\n  end\nin .absolute_url?\n  uri.to_s\nin .relative_path?\n  raise(NotImplementedError.new(\"Relative path reference type is currently not supported.\"))\nin .network_path?\n  uri.scheme = nil\n  uri.to_s\nend\n"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/URLGeneratorInterface","path":"Athena/Routing/URLGeneratorInterface.html","kind":"module","full_name":"Athena::Routing::URLGeneratorInterface","name":"URLGeneratorInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/routing/url_generator_interface.cr","line_number":4,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/routing/url_generator_interface.cr#L4"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Routing/RouterInterface","kind":"module","full_name":"Athena::Routing::RouterInterface","name":"RouterInterface"},{"html_id":"athena/Athena/Routing/URLGenerator","kind":"class","full_name":"Athena::Routing::URLGenerator","name":"URLGenerator"}],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Interface for URL generation types.\n\nImplementors must define a `#generate` method that accepts the route name, any params, and what type of URL should be generated and return the URL string.","summary":"<p>Interface for URL generation types.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"generate(route:String,params:Hash(String,_)?=nil,reference_type:ART::URLGeneratorInterface::ReferenceType=:absolute_path):String-instance-method","html_id":"generate(route:String,params:Hash(String,_)?=nil,reference_type:ART::URLGeneratorInterface::ReferenceType=:absolute_path):String-instance-method","name":"generate","doc":"Generates a URL to the provided *route* with the provided *params*.\n\nBy default the path is an `ART::URLGeneratorInterface::ReferenceType::Absolute_Path`,\nbut can be changed via the *reference_type* argument.\n\nAny *params* not related to an argument for the provided *route* will be added as query params.\n\n```\nrequire \"athena\"\n\nclass ExampleController < ART::Controller\n  @[ARTA::Get(\"/add/:value1/:value2\", name: \"add\")]\n  def add(value1 : Int32, value2 : Int32, negative : Bool = false) : Int32\n    0\n  end\n\n  @[ARTA::Get(\"/\")]\n  def get_link : String\n    \"\"\n  end\nend\n\ngenerator.generate \"add\", value1: 10, value2: 5 # => /add/10/5\n```","summary":"<p>Generates a URL to the provided <em>route</em> with the provided <em>params</em>.</p>","abstract":true,"args":[{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":"String"},{"name":"params","doc":null,"default_value":"nil","external_name":"params","restriction":"Hash(String, _) | ::Nil"},{"name":"reference_type","doc":null,"default_value":":absolute_path","external_name":"reference_type","restriction":"ART::URLGeneratorInterface::ReferenceType"}],"args_string":"(route : String, params : Hash(String, _)? = <span class=\"n\">nil</span>, reference_type : ART::URLGeneratorInterface::ReferenceType = <span class=\"n\">:absolute_path</span>) : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/routing/url_generator_interface.cr#L46","def":{"name":"generate","args":[{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":"String"},{"name":"params","doc":null,"default_value":"nil","external_name":"params","restriction":"Hash(String, _) | ::Nil"},{"name":"reference_type","doc":null,"default_value":":absolute_path","external_name":"reference_type","restriction":"ART::URLGeneratorInterface::ReferenceType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}}],"macros":[],"types":[{"html_id":"athena/Athena/Routing/URLGeneratorInterface/ReferenceType","path":"Athena/Routing/URLGeneratorInterface/ReferenceType.html","kind":"enum","full_name":"Athena::Routing::URLGeneratorInterface::ReferenceType","name":"ReferenceType","abstract":false,"superclass":null,"ancestors":[{"html_id":"athena/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"athena/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/routing/url_generator_interface.cr","line_number":6,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/routing/url_generator_interface.cr#L6"}],"repository_name":"athena","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Absolute_URL","name":"Absolute_URL","value":"0","doc":"Includes an absolute URL including protocol, hostname, and path: `https://api.example.com/add/10/5`.\n\nNOTE: The generated URL's protocol is always `https`.","summary":"<p>Includes an absolute URL including protocol, hostname, and path: <code>https://api.example.com/add/10/5</code>.</p>"},{"id":"Absolute_Path","name":"Absolute_Path","value":"1","doc":"The default type, includes an absolute path from the root to the generated route: `/add/10/5`.","summary":"<p>The default type, includes an absolute path from the root to the generated route: <code>/add/10/5</code>.</p>"},{"id":"Relative_Path","name":"Relative_Path","value":"2","doc":"TODO: Implement this.","summary":"<p><span class=\"flag orange\">TODO</span>  Implement this.</p>"},{"id":"Network_Path","name":"Network_Path","value":"3","doc":"Similar to `Absolute_URL`, but reuses the current protocol: `//api.example.com/add/10/5`.","summary":"<p>Similar to <code><a href=\"../../../Athena/Routing/URLGeneratorInterface/ReferenceType.html#Absolute_URL\">Absolute_URL</a></code>, but reuses the current protocol: <code>//api.example.com/add/10/5</code>.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/URLGeneratorInterface","kind":"module","full_name":"Athena::Routing::URLGeneratorInterface","name":"URLGeneratorInterface"},"doc":"Represents the type of URLs that are able to be generated via an `ART::URLGeneratorInterface`.","summary":"<p>Represents the type of URLs that are able to be generated via an <code><a href=\"../../../Athena/Routing/URLGeneratorInterface.html\">ART::URLGeneratorInterface</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"absolute_path?-instance-method","html_id":"absolute_path?-instance-method","name":"absolute_path?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/routing/url_generator_interface.cr#L13","def":{"name":"absolute_path?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Absolute_Path"}},{"id":"absolute_url?-instance-method","html_id":"absolute_url?-instance-method","name":"absolute_url?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/routing/url_generator_interface.cr#L10","def":{"name":"absolute_url?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Absolute_URL"}},{"id":"network_path?-instance-method","html_id":"network_path?-instance-method","name":"network_path?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/routing/url_generator_interface.cr#L19","def":{"name":"network_path?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Network_Path"}},{"id":"relative_path?-instance-method","html_id":"relative_path?-instance-method","name":"relative_path?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/routing/url_generator_interface.cr#L16","def":{"name":"relative_path?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Relative_Path"}}],"macros":[],"types":[]}]}]},{"html_id":"athena/Athena/Serializer","path":"Athena/Serializer.html","kind":"module","full_name":"Athena::Serializer","name":"Serializer","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/annotations.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/annotations.cr#L3"},{"filename":"lib/athena-serializer/src/athena-serializer.cr","line_number":122,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/athena-serializer.cr#L122"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena","kind":"module","full_name":"Athena","name":"Athena"},"doc":"Athena's Serializer component, `ASR` for short, adds enhanced (de)serialization features to your project.\n\n## Getting Started\n\nThe serializer component utilizes a module to specify that a type is serializable, as well as annotations to control how it gets (de)serialized.\n\n### Installation\n\nAdd the dependency to your `shard.yml`:\n\n```yaml\ndependencies:\n  athena-serializer:\n    github: athena-framework/serializer\n    version: ~> 0.2.0\n```\n\nRun `shards install`.\n\n### Usage\n\nSee the `ASR::Annotations` namespace a complete list of annotations, as well as each annotation for more detailed information.\n\n```\n# ExclusionPolicy specifies that all properties should not be (de)serialized\n# unless exposed via the `ASRA::Expose` annotation.\n@[ASRA::ExclusionPolicy(:all)]\n@[ASRA::AccessorOrder(:alphabetical)]\nclass Example\n  include ASR::Serializable\n\n  # Groups can be used to create different \"views\" of a type.\n  @[ASRA::Expose]\n  @[ASRA::Groups(\"details\")]\n  property name : String\n\n  # The `ASRA::Name` controls the name that this property\n  # should be deserialized from or be serialized to.\n  # It can also be used to set the default serialized naming strategy on the type.\n  @[ASRA::Expose]\n  @[ASRA::Name(deserialize: \"a_prop\", serialize: \"a_prop\")]\n  property some_prop : String\n\n  # Define a custom accessor used to get the value for serialization.\n  @[ASRA::Expose]\n  @[ASRA::Groups(\"default\", \"details\")]\n  @[ASRA::Accessor(getter: get_title)]\n  property title : String\n\n  # ReadOnly properties cannot be set on deserialization\n  @[ASRA::Expose]\n  @[ASRA::ReadOnly]\n  property created_at : Time = Time.utc\n\n  # Allows the property to be set via deserialization,\n  # but not exposed when serialized.\n  @[ASRA::IgnoreOnSerialize]\n  property password : String?\n\n  # Because of the `:all` exclusion policy, and not having the `ASRA::Expose` annotation,\n  # these properties are not exposed.\n  getter first_name : String?\n  getter last_name : String?\n\n  # Runs directly after `self` is deserialized\n  @[ASRA::PostDeserialize]\n  def split_name : Nil\n    @first_name, @last_name = @name.split(' ')\n  end\n\n  # Allows using the return value of a method as a key/value in the serialized output.\n  @[ASRA::VirtualProperty]\n  def get_val : String\n    \"VAL\"\n  end\n\n  private def get_title : String\n    @title.downcase\n  end\nend\n\nobj = ASR.serializer.deserialize Example, %({\"name\":\"FIRST LAST\",\"a_prop\":\"STR\",\"title\":\"TITLE\",\"password\":\"monkey123\",\"created_at\":\"2020-10-10T12:34:56Z\"}), :json\nobj                                                                                     # => #<Example:0x7f3e3b106740 @created_at=2020-07-05 23:06:58.943298289 UTC, @name=\"FIRST LAST\", @some_prop=\"STR\", @title=\"TITLE\", @password=\"monkey123\", @first_name=\"FIRST\", @last_name=\"LAST\">\nASR.serializer.serialize obj, :json                                                     # => {\"a_prop\":\"STR\",\"created_at\":\"2020-07-05T23:06:58.94Z\",\"get_val\":\"VAL\",\"name\":\"FIRST LAST\",\"title\":\"title\"}\nASR.serializer.serialize obj, :json, ASR::SerializationContext.new.groups = [\"details\"] # => {\"name\":\"FIRST LAST\",\"title\":\"title\"}\n```","summary":"<p>Athena's Serializer component, <code><a href=\"../ASR.html\">ASR</a></code> for short, adds enhanced (de)serialization features to your project.</p>","class_methods":[{"id":"serializer-class-method","html_id":"serializer-class-method","name":"serializer","doc":"Returns an `ASR::SerializerInterface` instance for ad-hoc (de)serialization.\n\nThe serializer is cached and only instantiated once.","summary":"<p>Returns an <code><a href=\"../Athena/Serializer/SerializerInterface.html\">ASR::SerializerInterface</a></code> instance for ad-hoc (de)serialization.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/athena-serializer.cr#L126","def":{"name":"serializer","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @@serializer).nil?\n  @@serializer = (ASR::Serializer.new)\nelse\n  value\nend"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Serializer/Annotations","path":"Athena/Serializer/Annotations.html","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/annotations.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/annotations.cr#L3"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":"`Athena::Serializer` uses annotations to control how an object gets serialized and deserialized.\nThis module includes all the default serialization and deserialization annotations. The `ASRA` alias can be used as a shorthand when applying the annotations.","summary":"<p><code><a href=\"../../Athena/Serializer.html\">Athena::Serializer</a></code> uses annotations to control how an object gets serialized and deserialized.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Serializer/Annotations/Accessor","path":"Athena/Serializer/Annotations/Accessor.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::Accessor","name":"Accessor","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/annotations.cr","line_number":103,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/annotations.cr#L103"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Allows using methods/modules to control how a property is retrieved/set.\n\n## Fields\n* `getter` - A method name whose return value will be used as the serialized value.\n* `setter` - A method name that accepts the deserialized value.  Can be used to apply additional logic before setting the properties value.\n* `converter` - A module that defines a `.deserialize` method.  Can be used to share common deserialization between types.\n* `path : Tuple` - A set of keys used to navigate to a value during deserialization.  The value of the last key will be used as the property's value.\n\n## Example\n\n### Getter/Setter\n\n```\nclass AccessorExample\n  include ASR::Serializable\n\n  def initialize; end\n\n  @[ASRA::Accessor(getter: get_foo, setter: set_foo)]\n  property foo : String = \"foo\"\n\n  private def set_foo(foo : String) : String\n    @foo = foo.upcase\n  end\n\n  private def get_foo : String\n    @foo.upcase\n  end\nend\n\nASR.serializer.serialize AccessorExample.new, :json                 # => {\"foo\":\"FOO\"}\nASR.serializer.deserialize AccessorExample, %({\"foo\":\"bar\"}), :json # => #<AccessorExample:0x7f5915e25c20 @foo=\"BAR\">\n```\n\n### Converter\n\n```\nmodule ReverseConverter\n  def self.deserialize(navigator : ASR::Navigators::DeserializationNavigatorInterface, metadata : ASR::PropertyMetadataBase, data : ASR::Any) : String\n    data.as_s.reverse\n  end\nend\n\nclass ConverterExample\n  include ASR::Serializable\n\n  @[ASRA::Accessor(converter: ReverseConverter)]\n  getter str : String\nend\n\nASR.serializer.deserialize ConverterExample, %({\"str\":\"jim\"}), :json # => #<ConverterExample:0x7f9745fa6d60 @str=\"mij\">\n```\n\n### Path\n\n```\nclass Example\n  include ASR::Serializable\n\n  getter id : Int64\n\n  @[ASRA::Accessor(path: {\"stats\", \"HP\"})]\n  getter hp : Int32\n\n  @[ASRA::Accessor(path: {\"stats\", \"Attack\"})]\n  getter attack : Int32\n\n  @[ASRA::Accessor(path: {\"downs\", -1, \"last_down\"})]\n  getter last_down : Time\nend\n\nDATA = <<-JSON\n{\n  \"id\": 1,\n  \"stats\": {\n    \"HP\": 45,\n    \"Attack\": 49\n  },\n  \"downs\": [\n    {\n      \"id\": 1,\n      \"last_down\": \"2020-05-019T05:23:17Z\"\n    },\n    {\n      \"id\": 2,\n      \"last_down\": \"2020-04-07T12:34:56Z\"\n    }\n  ]\n\n}\nJSON\n\nASR.serializer.deserialize Example, DATA, :json\n# #<Example:0x7f43c4ddf580\n#  @attack=49,\n#  @hp=45,\n#  @id=1,\n#  @last_down=2020-04-07 12:34:56.0 UTC>\n```","summary":"<p>Allows using methods/modules to control how a property is retrieved/set.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/AccessorOrder","path":"Athena/Serializer/Annotations/AccessorOrder.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::AccessorOrder","name":"AccessorOrder","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/annotations.cr","line_number":174,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/annotations.cr#L174"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Can be applied to a type to control the order of properties when serialized.  Valid values: `:alphabetical`, and `:custom`.\n\nBy default properties are ordered in the order in which they are defined.\n\n## Fields\n* `order` - Used to specify the order of the properties when using `:custom` ordering.\n\n## Example\n\n```\nclass Default\n  include ASR::Serializable\n\n  def initialize; end\n\n  property a : String = \"A\"\n  property z : String = \"Z\"\n  property two : String = \"two\"\n  property one : String = \"one\"\n  property a_a : Int32 = 123\n\n  @[ASRA::VirtualProperty]\n  def get_val : String\n    \"VAL\"\n  end\nend\n\nASR.serializer.serialize Default.new, :json # => {\"a\":\"A\",\"z\":\"Z\",\"two\":\"two\",\"one\":\"one\",\"a_a\":123,\"get_val\":\"VAL\"}\n\n@[ASRA::AccessorOrder(:alphabetical)]\nclass Abc\n  include ASR::Serializable\n\n  def initialize; end\n\n  property a : String = \"A\"\n  property z : String = \"Z\"\n  property two : String = \"two\"\n  property one : String = \"one\"\n  property a_a : Int32 = 123\n\n  @[ASRA::VirtualProperty]\n  def get_val : String\n    \"VAL\"\n  end\nend\n\nASR.serializer.serialize Abc.new, :json # => {\"a\":\"A\",\"a_a\":123,\"get_val\":\"VAL\",\"one\":\"one\",\"two\":\"two\",\"z\":\"Z\"}\n\n@[ASRA::AccessorOrder(:custom, order: [\"two\", \"z\", \"get_val\", \"a\", \"one\", \"a_a\"])]\nclass Custom\n  include ASR::Serializable\n\n  def initialize; end\n\n  property a : String = \"A\"\n  property z : String = \"Z\"\n  property two : String = \"two\"\n  property one : String = \"one\"\n  property a_a : Int32 = 123\n\n  @[ASRA::VirtualProperty]\n  def get_val : String\n    \"VAL\"\n  end\nend\n\nASR.serializer.serialize Custom.new, :json # => {\"two\":\"two\",\"z\":\"Z\",\"get_val\":\"VAL\",\"a\":\"A\",\"one\":\"one\",\"a_a\":123}\n```","summary":"<p>Can be applied to a type to control the order of properties when serialized.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/Discriminator","path":"Athena/Serializer/Annotations/Discriminator.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::Discriminator","name":"Discriminator","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/annotations.cr","line_number":206,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/annotations.cr#L206"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Allows deserializing an object based on the value of a specific field.\n\n## Fields\n* `key : String` - The field that should be read from the data to determine the correct type.\n* `map : Hash | NamedTuple` - Maps the possible `key` values to their corresponding types.\n\n## Example\n\n```\n@[ASRA::Discriminator(key: \"type\", map: {point: Point, circle: Circle})]\nabstract class Shape\n  include ASR::Serializable\n\n  property type : String\nend\n\nclass Point < Shape\n  property x : Int32\n  property y : Int32\nend\n\nclass Circle < Shape\n  property x : Int32\n  property y : Int32\n  property radius : Int32\nend\n\nASR.serializer.deserialize Shape, %({\"type\":\"point\",\"x\":10,\"y\":20}), :json              # => #<Point:0x7fbbf7f8bc20 @type=\"point\", @x=10, @y=20>\nASR.serializer.deserialize Shape, %({\"type\":\"circle\",\"x\":30,\"y\":40,\"radius\":12}), :json # => #<Circle:0x7fbbf7f93c60 @radius=12, @type=\"circle\", @x=30, @y=40>\n```","summary":"<p>Allows deserializing an object based on the value of a specific field.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/Exclude","path":"Athena/Serializer/Annotations/Exclude.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::Exclude","name":"Exclude","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/annotations.cr","line_number":232,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/annotations.cr#L232"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Indicates that a property should not be serialized/deserialized when used with `:none` `ASRA::ExclusionPolicy`.\n\nAlso see, `ASRA::IgnoreOnDeserialize` and `ASRA::IgnoreOnSerialize`.\n\n## Example\n\n```\n@[ASRA::ExclusionPolicy(:none)]\nclass Example\n  include ASR::Serializable\n\n  def initialize; end\n\n  property name : String = \"Jim\"\n\n  @[ASRA::Exclude]\n  property password : String = \"monkey\"\nend\n\nASR.serializer.serialize Example.new, :json                                          # => {\"name\":\"Jim\"}\nASR.serializer.deserialize Example, %({\"name\":\"Jim\",\"password\":\"password1!\"}), :json # => #<Example:0x7f6eec4b6a60 @name=\"Jim\", @password=\"monkey\">\n```\n\nNOTE: On deserialization, the excluded property must be nilable, or have a default value.","summary":"<p>Indicates that a property should not be serialized/deserialized when used with <code>:none</code> <code><a href=\"../../../Athena/Serializer/Annotations/ExclusionPolicy.html\">ASRA::ExclusionPolicy</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/ExclusionPolicy","path":"Athena/Serializer/Annotations/ExclusionPolicy.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::ExclusionPolicy","name":"ExclusionPolicy","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/annotations.cr","line_number":237,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/annotations.cr#L237"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Defines the default exclusion policy to use on a class.  Valid values: `:none`, and `:all`.\n\nUsed with `ASRA::Expose` and `ASRA::Exclude`.","summary":"<p>Defines the default exclusion policy to use on a class.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/Expose","path":"Athena/Serializer/Annotations/Expose.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::Expose","name":"Expose","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/annotations.cr","line_number":263,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/annotations.cr#L263"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Indicates that a property should be serialized/deserialized when used with `:all` `ASRA::ExclusionPolicy`.\n\nAlso see, `ASRA::IgnoreOnDeserialize` and `ASRA::IgnoreOnSerialize`.\n\n## Example\n\n```\n@[ASRA::ExclusionPolicy(:all)]\nclass Example\n  include ASR::Serializable\n\n  def initialize; end\n\n  @[ASRA::Expose]\n  property name : String = \"Jim\"\n\n  property password : String = \"monkey\"\nend\n\nASR.serializer.serialize Example.new, :json                                          # => {\"name\":\"Jim\"}\nASR.serializer.deserialize Example, %({\"name\":\"Jim\",\"password\":\"password1!\"}), :json # => #<Example:0x7f6eec4b6a60 @name=\"Jim\", @password=\"monkey\">\n```\n\nNOTE: On deserialization, the excluded property must be nilable, or have a default value.","summary":"<p>Indicates that a property should be serialized/deserialized when used with <code>:all</code> <code><a href=\"../../../Athena/Serializer/Annotations/ExclusionPolicy.html\">ASRA::ExclusionPolicy</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/Groups","path":"Athena/Serializer/Annotations/Groups.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::Groups","name":"Groups","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/annotations.cr","line_number":269,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/annotations.cr#L269"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Defines the group(s) a property belongs to.  Properties are automatically added to the `default` group\nif no groups are explicitly defined.\n\nSee `ASR::ExclusionStrategies::Groups`.","summary":"<p>Defines the group(s) a property belongs to.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/IgnoreOnDeserialize","path":"Athena/Serializer/Annotations/IgnoreOnDeserialize.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::IgnoreOnDeserialize","name":"IgnoreOnDeserialize","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/annotations.cr","line_number":294,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/annotations.cr#L294"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Indicates that a property should not be set on deserialization, but should be serialized.\n\n## Example\n\n```\nclass Example\n  include ASR::Serializable\n\n  property name : String\n\n  @[ASRA::IgnoreOnDeserialize]\n  property password : String?\nend\n\nobj = ASR.serializer.deserialize Example, %({\"name\":\"Jim\",\"password\":\"monkey123\"}), :json\n\nobj.password # => nil\nobj.name     # => Jim\n\nobj.password = \"foobar\"\n\nASR.serializer.serialize obj, :json # => {\"name\":\"Jim\",\"password\":\"foobar\"}\n```","summary":"<p>Indicates that a property should not be set on deserialization, but should be serialized.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/IgnoreOnSerialize","path":"Athena/Serializer/Annotations/IgnoreOnSerialize.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::IgnoreOnSerialize","name":"IgnoreOnSerialize","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/annotations.cr","line_number":319,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/annotations.cr#L319"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Indicates that a property should be set on deserialization, but should not be serialized.\n\n## Example\n\n```\nclass Example\n  include ASR::Serializable\n\n  property name : String\n\n  @[ASRA::IgnoreOnSerialize]\n  property password : String?\nend\n\nobj = ASR.serializer.deserialize Example, %({\"name\":\"Jim\",\"password\":\"monkey123\"}), :json\n\nobj.password # => monkey123\nobj.name     # => Jim\n\nobj.password = \"foobar\"\n\nASR.serializer.serialize obj, :json # => {\"name\":\"Jim\"}\n```","summary":"<p>Indicates that a property should be set on deserialization, but should not be serialized.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/Name","path":"Athena/Serializer/Annotations/Name.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::Name","name":"Name","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/annotations.cr","line_number":393,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/annotations.cr#L393"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Defines the `key` to use during (de)serialization.  If not provided, the name of the property is used.\nAlso allows defining aliases that can be used for that property when deserializing.\n\n## Fields\n\n* `serialize : String` - The key to use for this property during serialization.\n* `deserialize : String` - The key to use for this property during deserialization.\n* `key` : String - The key to use for this property during (de)serialization.\n* `aliases : Array(String)` - A set of keys to use for this property during deserialization; is equivalent to multiple `deserialize` keys.\n* `serialization_strategy : Symbol` - Defines the default serialization naming strategy for this type.  Can be overridden using the `serialize` or `key` field.\n* `deserialization_strategy : Symbol` - Defines the default deserialization naming strategy for this type.  Can be overridden using the `deserialize` or `key` field.\n* `strategy : Symbol` - Defines the default (de)serialization naming strategy for this type.  Can be overridden using the `serialize`, `deserialize` or `key` fields.\n\n## Example\n\n```\nclass Example\n  include ASR::Serializable\n\n  def initialize; end\n\n  @[ASRA::Name(serialize: \"myAddress\")]\n  property my_home_address : String = \"123 Fake Street\"\n\n  @[ASRA::Name(deserialize: \"some_key\", serialize: \"a_value\")]\n  property both_names : String = \"str\"\n\n  @[ASRA::Name(key: \"same\")]\n  property same_in_both_directions : String = \"same for both\"\n\n  @[ASRA::Name(aliases: [\"val\", \"value\", \"some_value\"])]\n  property some_value : String = \"some_val\"\nend\n\nASR.serializer.serialize Example.new, :json # => {\"myAddress\":\"123 Fake Street\",\"a_value\":\"str\",\"same\":\"same for both\",\"some_value\":\"some_val\"}\n\nobj = ASR.serializer.deserialize Example, %({\"my_home_address\":\"555 Mason Ave\",\"some_key\":\"deserialized from diff key\",\"same\":\"same again\",\"value\":\"some_other_val\"}), :json\n\nobj.my_home_address         # => \"555 Mason Ave\"\nobj.both_names              # => \"deserialized from diff key\"\nobj.same_in_both_directions # => \"same again\"\nobj.some_value              # => \"some_other_val\"\n```\n\n### Naming Strategies\n\nBy default the keys in the serialized data match exactly to the name of the property.\nNaming strategies allow changing this behavior for all properties within the type.\nThe serialized name can still be overridden on a per-property basis via\nusing the `ASRA::Name` annotation with the `serialize`, `deserialize` or `key` field.\nThe strategy will be applied on serialization, deserialization or both, depending\non whether `serialization_strategy`, `deserialization_strategy` or `strategy` is used.\n\nThe available naming strategies include:\n* `:camelcase`\n* `:underscore`\n* `:identical`\n\n```\n@[ASRA::Name(strategy: :camelcase)]\nclass User\n  include ASR::Serializable\n\n  def initialize; end\n\n  property id : Int32 = 1\n  property first_name : String = \"Jon\"\n  property last_name : String = \"Snow\"\nend\n\nASR.serializer.serialize User.new, :json # => {\"id\":1,\"firstName\":\"Jon\",\"lastName\":\"Snow\"}\n```","summary":"<p>Defines the <code>key</code> to use during (de)serialization.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/PostDeserialize","path":"Athena/Serializer/Annotations/PostDeserialize.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::PostDeserialize","name":"PostDeserialize","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/annotations.cr","line_number":415,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/annotations.cr#L415"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Defines a callback method(s) that are ran directly after the object has been deserialized.\n\n## Example\n\n```\nrecord Example, name : String, first_name : String?, last_name : String? do\n  include ASR::Serializable\n\n  @[ASRA::PostDeserialize]\n  private def split_name : Nil\n    @first_name, @last_name = @name.split(' ')\n  end\nend\n\nobj = ASR.serializer.deserialize Example, %({\"name\":\"Jon Snow\"}), :json\n\nobj.name       # => Jon Snow\nobj.first_name # => Jon\nobj.last_name  # => Snow\n```","summary":"<p>Defines a callback method(s) that are ran directly after the object has been deserialized.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/PostSerialize","path":"Athena/Serializer/Annotations/PostSerialize.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::PostSerialize","name":"PostSerialize","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/annotations.cr","line_number":447,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/annotations.cr#L447"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Defines a callback method that is executed directly after the object has been serialized.\n\n## Example\n\n```\n@[ASRA::ExclusionPolicy(:all)]\nclass Example\n  include ASR::Serializable\n\n  def initialize; end\n\n  @[ASRA::Expose]\n  @name : String?\n\n  property first_name : String = \"Jon\"\n  property last_name : String = \"Snow\"\n\n  @[ASRA::PreSerialize]\n  private def pre_ser : Nil\n    @name = \"#{first_name} #{last_name}\"\n  end\n\n  @[ASRA::PostSerialize]\n  private def post_ser : Nil\n    @name = nil\n  end\nend\n\nASR.serializer.serialize Example.new, :json # => {\"name\":\"Jon Snow\"}\n```","summary":"<p>Defines a callback method that is executed directly after the object has been serialized.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/PreSerialize","path":"Athena/Serializer/Annotations/PreSerialize.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::PreSerialize","name":"PreSerialize","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/annotations.cr","line_number":479,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/annotations.cr#L479"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Defines a callback method that is executed directly before the object has been serialized.\n\n## Example\n\n```\n@[ASRA::ExclusionPolicy(:all)]\nclass Example\n  include ASR::Serializable\n\n  def initialize; end\n\n  @[ASRA::Expose]\n  @name : String?\n\n  property first_name : String = \"Jon\"\n  property last_name : String = \"Snow\"\n\n  @[ASRA::PreSerialize]\n  private def pre_ser : Nil\n    @name = \"#{first_name} #{last_name}\"\n  end\n\n  @[ASRA::PostSerialize]\n  private def post_ser : Nil\n    @name = nil\n  end\nend\n\nASR.serializer.serialize Example.new, :json # => {\"name\":\"Jon Snow\"}\n```","summary":"<p>Defines a callback method that is executed directly before the object has been serialized.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/ReadOnly","path":"Athena/Serializer/Annotations/ReadOnly.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::ReadOnly","name":"ReadOnly","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/annotations.cr","line_number":502,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/annotations.cr#L502"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Indicates that a property is read-only and cannot be set during deserialization.\n\n## Example\n\n```\nclass Example\n  include ASR::Serializable\n\n  property name : String\n\n  @[ASRA::ReadOnly]\n  property password : String?\nend\n\nobj = ASR.serializer.deserialize Example, %({\"name\":\"Fred\",\"password\":\"password1\"}), :json\n\nobj.name     # => \"Fred\"\nobj.password # => nil\n```\n\nNOTE: The property must be nilable, or have a default value.","summary":"<p>Indicates that a property is read-only and cannot be set during deserialization.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/Since","path":"Athena/Serializer/Annotations/Since.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::Since","name":"Since","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/annotations.cr","line_number":509,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/annotations.cr#L509"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Represents the first version a property was available.\n\nSee `ASR::ExclusionStrategies::Version`.\n\nNOTE: Value must be a `SemanticVersion` version.","summary":"<p>Represents the first version a property was available.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/Skip","path":"Athena/Serializer/Annotations/Skip.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::Skip","name":"Skip","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/annotations.cr","line_number":530,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/annotations.cr#L530"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Indicates that a property should not be serialized or deserialized.\n\n## Example\n\n```\nclass Example\n  include ASR::Serializable\n\n  def initialize; end\n\n  property name : String = \"Jim\"\n\n  @[ASRA::Skip]\n  property password : String = \"monkey\"\nend\n\nASR.serializer.deserialize Example, %({\"name\":\"Fred\",\"password\":\"foobar\"}), :json # => #<Example:0x7fe4dc98bce0 @name=\"Fred\", @password=\"monkey\">\nASR.serializer.serialize Example.new, :json                                       # => {\"name\":\"Fred\"}\n```","summary":"<p>Indicates that a property should not be serialized or deserialized.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/SkipWhenEmpty","path":"Athena/Serializer/Annotations/SkipWhenEmpty.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::SkipWhenEmpty","name":"SkipWhenEmpty","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/annotations.cr","line_number":562,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/annotations.cr#L562"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Indicates that a property should not be serialized when it is empty.\n\n## Example\n\n```\nclass Example\n  include ASR::Serializable\n\n  def initialize; end\n\n  property id : Int64 = 1\n\n  @[ASRA::SkipWhenEmpty]\n  property value : String = \"value\"\n\n  @[ASRA::SkipWhenEmpty]\n  property values : Array(String) = %w(one two three)\nend\n\nobj = Example.new\n\nASR.serializer.serialize obj, :json # => {\"id\":1,\"value\":\"value\",\"values\":[\"one\",\"two\",\"three\"]}\n\nobj.value = \"\"\nobj.values = [] of String\n\nASR.serializer.serialize obj, :json # => {\"id\":1}\n```\n\nNOTE: Can be used on any type that defines an `#empty?` method.","summary":"<p>Indicates that a property should not be serialized when it is empty.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/Until","path":"Athena/Serializer/Annotations/Until.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::Until","name":"Until","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/annotations.cr","line_number":569,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/annotations.cr#L569"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Represents the last version a property was available.\n\nSee `ASR::ExclusionStrategies::Version`.\n\nNOTE: Value must be a `SemanticVersion` version.","summary":"<p>Represents the last version a property was available.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/VirtualProperty","path":"Athena/Serializer/Annotations/VirtualProperty.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::VirtualProperty","name":"VirtualProperty","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/annotations.cr","line_number":599,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/annotations.cr#L599"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Can be applied to a method to make it act like a property.\n\n## Example\n\n```\nclass Example\n  include ASR::Serializable\n\n  def initialize; end\n\n  property foo : String = \"foo\"\n\n  @[ASRA::VirtualProperty]\n  @[ASRA::Name(serialize: \"testing\")]\n  def some_method : Bool\n    false\n  end\n\n  @[ASRA::VirtualProperty]\n  def get_val : String\n    \"VAL\"\n  end\nend\n\nASR.serializer.serialize Example.new, :json # => {\"foo\":\"foo\",\"testing\":false,\"get_val\":\"VAL\"}\n```\n\nNOTE: The return type restriction _MUST_ be defined.","summary":"<p>Can be applied to a method to make it act like a property.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Serializer/Any","path":"Athena/Serializer/Any.html","kind":"module","full_name":"Athena::Serializer::Any","name":"Any","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/any.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/any.cr#L2"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":"Defines an abstraction that format specific types, such as `JSON::Any`, or `YAML::Any` must implement.","summary":"<p>Defines an abstraction that format specific types, such as <code>JSON::Any</code>, or <code>YAML::Any</code> must implement.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"as_a-instance-method","html_id":"as_a-instance-method","name":"as_a","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/any.cr#L14","def":{"name":"as_a","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"as_a?-instance-method","html_id":"as_a?-instance-method","name":"as_a?","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/any.cr#L15","def":{"name":"as_a?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"as_bool:Bool-instance-method","html_id":"as_bool:Bool-instance-method","name":"as_bool","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/any.cr#L3","def":{"name":"as_bool","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":""}},{"id":"as_f:Float64-instance-method","html_id":"as_f:Float64-instance-method","name":"as_f","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Float64","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/any.cr#L6","def":{"name":"as_f","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":""}},{"id":"as_f32:Float32-instance-method","html_id":"as_f32:Float32-instance-method","name":"as_f32","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Float32","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/any.cr#L8","def":{"name":"as_f32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":""}},{"id":"as_f32?:Float32?-instance-method","html_id":"as_f32?:Float32?-instance-method","name":"as_f32?","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Float32?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/any.cr#L9","def":{"name":"as_f32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32 | ::Nil","visibility":"Public","body":""}},{"id":"as_f?:Float64?-instance-method","html_id":"as_f?:Float64?-instance-method","name":"as_f?","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Float64?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/any.cr#L7","def":{"name":"as_f?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64 | ::Nil","visibility":"Public","body":""}},{"id":"as_i:Int32-instance-method","html_id":"as_i:Int32-instance-method","name":"as_i","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Int32","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/any.cr#L4","def":{"name":"as_i","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":""}},{"id":"as_i64:Int64-instance-method","html_id":"as_i64:Int64-instance-method","name":"as_i64","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Int64","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/any.cr#L10","def":{"name":"as_i64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":""}},{"id":"as_i64?:Int64?-instance-method","html_id":"as_i64?:Int64?-instance-method","name":"as_i64?","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Int64?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/any.cr#L11","def":{"name":"as_i64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64 | ::Nil","visibility":"Public","body":""}},{"id":"as_i?:Int32?-instance-method","html_id":"as_i?:Int32?-instance-method","name":"as_i?","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Int32?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/any.cr#L5","def":{"name":"as_i?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32 | ::Nil","visibility":"Public","body":""}},{"id":"as_s:String-instance-method","html_id":"as_s:String-instance-method","name":"as_s","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/any.cr#L12","def":{"name":"as_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}},{"id":"as_s?:String?-instance-method","html_id":"as_s?:String?-instance-method","name":"as_s?","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : String?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/any.cr#L13","def":{"name":"as_s?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":""}},{"id":"dig(key_or_index:String|Int,*keys)-instance-method","html_id":"dig(key_or_index:String|Int,*keys)-instance-method","name":"dig","doc":null,"summary":null,"abstract":true,"args":[{"name":"key_or_index","doc":null,"default_value":"","external_name":"key_or_index","restriction":"String | Int"},{"name":"keys","doc":null,"default_value":"","external_name":"keys","restriction":""}],"args_string":"(key_or_index : String | Int, *keys)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/any.cr#L17","def":{"name":"dig","args":[{"name":"key_or_index","doc":null,"default_value":"","external_name":"key_or_index","restriction":"String | Int"},{"name":"keys","doc":null,"default_value":"","external_name":"keys","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"is_nil?:Bool-instance-method","html_id":"is_nil?:Bool-instance-method","name":"is_nil?","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/any.cr#L16","def":{"name":"is_nil?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":""}},{"id":"raw-instance-method","html_id":"raw-instance-method","name":"raw","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/any.cr#L19","def":{"name":"raw","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Context","path":"Athena/Serializer/Context.html","kind":"class","full_name":"Athena::Serializer::Context","name":"Context","abstract":true,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-serializer/src/context.cr","line_number":6,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/context.cr#L6"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Serializer/DeserializationContext","kind":"class","full_name":"Athena::Serializer::DeserializationContext","name":"DeserializationContext"},{"html_id":"athena/Athena/Serializer/SerializationContext","kind":"class","full_name":"Athena::Serializer::SerializationContext","name":"SerializationContext"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":"Stores runtime data about the current action.\n\nSuch as what serialization groups/version to use when serializing.\n\nNOTE: Cannot be used for more than one action.","summary":"<p>Stores runtime data about the current action.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"add_exclusion_strategy(strategy:ASR::ExclusionStrategies::ExclusionStrategyInterface):self-instance-method","html_id":"add_exclusion_strategy(strategy:ASR::ExclusionStrategies::ExclusionStrategyInterface):self-instance-method","name":"add_exclusion_strategy","doc":"Adds *strategy* to `self`.\n\n* `exclusion_strategy` is set to *strategy* if there previously was no strategy.\n* `exclusion_strategy` is set to `ASR::ExclusionStrategies::Disjunct` if there was a `exclusion_strategy` already set.\n* *strategy* is added to the `ASR::ExclusionStrategies::Disjunct` if there are multiple strategies.","summary":"<p>Adds <em>strategy</em> to <code>self</code>.</p>","abstract":false,"args":[{"name":"strategy","doc":null,"default_value":"","external_name":"strategy","restriction":"ASR::ExclusionStrategies::ExclusionStrategyInterface"}],"args_string":"(strategy : ASR::ExclusionStrategies::ExclusionStrategyInterface) : <span class=\"k\">self</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/context.cr#L32","def":{"name":"add_exclusion_strategy","args":[{"name":"strategy","doc":null,"default_value":"","external_name":"strategy","restriction":"ASR::ExclusionStrategies::ExclusionStrategyInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"current_strategy = @exclusion_strategy\ncase current_strategy\nwhen Nil\n  @exclusion_strategy = strategy\nwhen ASR::ExclusionStrategies::Disjunct\n  current_strategy.members << strategy\nelse\n  @exclusion_strategy = ASR::ExclusionStrategies::Disjunct.new([current_strategy, strategy])\nend\nself\n"}},{"id":"direction:ASR::Context::Direction-instance-method","html_id":"direction:ASR::Context::Direction-instance-method","name":"direction","doc":"Returns which (de)serialization action `self` represents.","summary":"<p>Returns which (de)serialization action <code>self</code> represents.</p>","abstract":true,"args":[],"args_string":" : ASR::Context::Direction","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/context.cr#L25","def":{"name":"direction","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ASR::Context::Direction","visibility":"Public","body":""}},{"id":"exclusion_strategy:ASR::ExclusionStrategies::ExclusionStrategyInterface?-instance-method","html_id":"exclusion_strategy:ASR::ExclusionStrategies::ExclusionStrategyInterface?-instance-method","name":"exclusion_strategy","doc":"The `ASR::ExclusionStrategies::ExclusionStrategyInterface` being used.","summary":"<p>The <code><a href=\"../../Athena/Serializer/ExclusionStrategies/ExclusionStrategyInterface.html\">ASR::ExclusionStrategies::ExclusionStrategyInterface</a></code> being used.</p>","abstract":false,"args":[],"args_string":" : ASR::ExclusionStrategies::ExclusionStrategyInterface?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/context.cr#L14","def":{"name":"exclusion_strategy","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ASR::ExclusionStrategies::ExclusionStrategyInterface | ::Nil","visibility":"Public","body":"@exclusion_strategy"}},{"id":"groups:Array(String)?-instance-method","html_id":"groups:Array(String)?-instance-method","name":"groups","doc":"Returns the serialization groups, if any, currently set on `self`.","summary":"<p>Returns the serialization groups, if any, currently set on <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : Array(String)?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/context.cr#L19","def":{"name":"groups","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String) | ::Nil","visibility":"Public","body":"@groups"}},{"id":"groups=(groups:Array(String)):self-instance-method","html_id":"groups=(groups:Array(String)):self-instance-method","name":"groups=","doc":"Sets the group(s) to compare against properties' `ASRA::Groups` annotations.\n\nAdds a `ASR::ExclusionStrategies::Groups` automatically if set.","summary":"<p>Sets the group(s) to compare against properties' <code><a href=\"../../Athena/Serializer/Annotations/Groups.html\">ASRA::Groups</a></code> annotations.</p>","abstract":false,"args":[{"name":"groups","doc":null,"default_value":"","external_name":"groups","restriction":"Array(String)"}],"args_string":"(groups : Array(String)) : <span class=\"k\">self</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/context.cr#L62","def":{"name":"groups=","args":[{"name":"groups","doc":null,"default_value":"","external_name":"groups","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"if groups.empty?\n  raise(ArgumentError.new(\"Groups cannot be empty\"))\nend\n@groups = groups\nself\n"}},{"id":"version:SemanticVersion?-instance-method","html_id":"version:SemanticVersion?-instance-method","name":"version","doc":"Returns the version, if any, currently set on `self`.","summary":"<p>Returns the version, if any, currently set on <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : SemanticVersion?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/context.cr#L22","def":{"name":"version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SemanticVersion | ::Nil","visibility":"Public","body":"@version"}},{"id":"version=(version:String):self-instance-method","html_id":"version=(version:String):self-instance-method","name":"version=","doc":"Sets the *version* to compare against properties' `ASRA::Since` and `ASRA::Until` annotations.\n\nAdds an `ASR::ExclusionStrategies::Version` automatically if set.","summary":"<p>Sets the <em>version</em> to compare against properties' <code><a href=\"../../Athena/Serializer/Annotations/Since.html\">ASRA::Since</a></code> and <code><a href=\"../../Athena/Serializer/Annotations/Until.html\">ASRA::Until</a></code> annotations.</p>","abstract":false,"args":[{"name":"version","doc":null,"default_value":"","external_name":"version","restriction":"String"}],"args_string":"(version : String) : <span class=\"k\">self</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/context.cr#L73","def":{"name":"version=","args":[{"name":"version","doc":null,"default_value":"","external_name":"version","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"@version = SemanticVersion.parse(version)\nself\n"}}],"macros":[],"types":[{"html_id":"athena/Athena/Serializer/Context/Direction","path":"Athena/Serializer/Context/Direction.html","kind":"enum","full_name":"Athena::Serializer::Context::Direction","name":"Direction","abstract":false,"superclass":null,"ancestors":[{"html_id":"athena/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"athena/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-serializer/src/context.cr","line_number":8,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/context.cr#L8"}],"repository_name":"athena","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Deserialization","name":"Deserialization","value":"0","doc":null,"summary":null},{"id":"Serialization","name":"Serialization","value":"1","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Context","kind":"class","full_name":"Athena::Serializer::Context","name":"Context"},"doc":"The possible (de)serialization actions.","summary":"<p>The possible (de)serialization actions.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"deserialization?-instance-method","html_id":"deserialization?-instance-method","name":"deserialization?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/context.cr#L9","def":{"name":"deserialization?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Deserialization"}},{"id":"serialization?-instance-method","html_id":"serialization?-instance-method","name":"serialization?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/context.cr#L10","def":{"name":"serialization?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Serialization"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Serializer/DeserializationContext","path":"Athena/Serializer/DeserializationContext.html","kind":"class","full_name":"Athena::Serializer::DeserializationContext","name":"DeserializationContext","abstract":false,"superclass":{"html_id":"athena/Athena/Serializer/Context","kind":"class","full_name":"Athena::Serializer::Context","name":"Context"},"ancestors":[{"html_id":"athena/Athena/Serializer/Context","kind":"class","full_name":"Athena::Serializer::Context","name":"Context"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-serializer/src/deserialization_context.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/deserialization_context.cr#L2"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":"The `ASR::Context` specific to deserialization.","summary":"<p>The <code><a href=\"../../Athena/Serializer/Context.html\">ASR::Context</a></code> specific to deserialization.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"direction:ASR::Context::Direction-instance-method","html_id":"direction:ASR::Context::Direction-instance-method","name":"direction","doc":"Returns which (de)serialization action `self` represents.","summary":"<p>Returns which (de)serialization action <code>self</code> represents.</p>","abstract":false,"args":[],"args_string":" : ASR::Context::Direction","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/deserialization_context.cr#L3","def":{"name":"direction","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ASR::Context::Direction","visibility":"Public","body":"ASR::Context::Direction::Deserialization"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/ExclusionStrategies","path":"Athena/Serializer/ExclusionStrategies.html","kind":"module","full_name":"Athena::Serializer::ExclusionStrategies","name":"ExclusionStrategies","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/athena-serializer.cr","line_number":157,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/athena-serializer.cr#L157"},{"filename":"lib/athena-serializer/src/exclusion_strategies/exclusion_strategy_interface.cr","line_number":83,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/exclusion_strategies/exclusion_strategy_interface.cr#L83"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":"Exclusion Strategies allow controlling which properties should be (de)serialized.\n\n`Athena::Serializer` includes two common strategies: `ASR::ExclusionStrategies::Groups`, and `ASR::ExclusionStrategies::Version`.\n\nCustom strategies can be implemented by via `ExclusionStrategies::ExclusionStrategyInterface`.\n\nOPTIMIZE:  Once feasible, support compile time exclusion strategies.","summary":"<p>Exclusion Strategies allow controlling which properties should be (de)serialized.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Serializer/ExclusionStrategies/Disjunct","path":"Athena/Serializer/ExclusionStrategies/Disjunct.html","kind":"struct","full_name":"Athena::Serializer::ExclusionStrategies::Disjunct","name":"Disjunct","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Serializer/ExclusionStrategies/ExclusionStrategyInterface","kind":"module","full_name":"Athena::Serializer::ExclusionStrategies::ExclusionStrategyInterface","name":"ExclusionStrategyInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-serializer/src/exclusion_strategies/disjunct.cr","line_number":6,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/exclusion_strategies/disjunct.cr#L6"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Serializer/ExclusionStrategies/ExclusionStrategyInterface","kind":"module","full_name":"Athena::Serializer::ExclusionStrategies::ExclusionStrategyInterface","name":"ExclusionStrategyInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/ExclusionStrategies","kind":"module","full_name":"Athena::Serializer::ExclusionStrategies","name":"ExclusionStrategies"},"doc":"Wraps an `Array(ASR::ExclusionStrategies::ExclusionStrategyInterface)`, excluding a property if any member skips it.\n\nUsed internally to allow multiple exclusion strategies to be used within a single instance variable for `ASR::Context#add_exclusion_strategy`.","summary":"<p>Wraps an <code>Array(<a href=\"../../../Athena/Serializer/ExclusionStrategies/ExclusionStrategyInterface.html\">ASR::ExclusionStrategies::ExclusionStrategyInterface</a>)</code>, excluding a property if any member skips it.</p>","class_methods":[],"constructors":[{"id":"new(members:Array(ASR::ExclusionStrategies::ExclusionStrategyInterface))-class-method","html_id":"new(members:Array(ASR::ExclusionStrategies::ExclusionStrategyInterface))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"members","doc":null,"default_value":"","external_name":"members","restriction":"Array(ASR::ExclusionStrategies::ExclusionStrategyInterface)"}],"args_string":"(members : Array(ASR::ExclusionStrategies::ExclusionStrategyInterface))","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/exclusion_strategies/disjunct.cr#L12","def":{"name":"new","args":[{"name":"members","doc":null,"default_value":"","external_name":"members","restriction":"Array(ASR::ExclusionStrategies::ExclusionStrategyInterface)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(members)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"members:Array(ASR::ExclusionStrategies::ExclusionStrategyInterface)-instance-method","html_id":"members:Array(ASR::ExclusionStrategies::ExclusionStrategyInterface)-instance-method","name":"members","doc":"The wrapped exclusion strategies.","summary":"<p>The wrapped exclusion strategies.</p>","abstract":false,"args":[],"args_string":" : Array(ASR::ExclusionStrategies::ExclusionStrategyInterface)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/exclusion_strategies/disjunct.cr#L10","def":{"name":"members","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(ASR::ExclusionStrategies::ExclusionStrategyInterface)","visibility":"Public","body":"@members"}},{"id":"skip_property?(metadata:ASR::PropertyMetadataBase,context:ASR::Context):Bool-instance-method","html_id":"skip_property?(metadata:ASR::PropertyMetadataBase,context:ASR::Context):Bool-instance-method","name":"skip_property?","doc":"Returns `true` if a property should _NOT_ be (de)serialized.","summary":"<p>Returns <code>true</code> if a property should <em>NOT</em> be (de)serialized.</p>","abstract":false,"args":[{"name":"metadata","doc":null,"default_value":"","external_name":"metadata","restriction":"ASR::PropertyMetadataBase"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::Context"}],"args_string":"(metadata : ASR::PropertyMetadataBase, context : ASR::Context) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/exclusion_strategies/disjunct.cr#L15","def":{"name":"skip_property?","args":[{"name":"metadata","doc":null,"default_value":"","external_name":"metadata","restriction":"ASR::PropertyMetadataBase"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::Context"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@members.any?(&.skip_property?(metadata, context))"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/ExclusionStrategies/ExclusionStrategyInterface","path":"Athena/Serializer/ExclusionStrategies/ExclusionStrategyInterface.html","kind":"module","full_name":"Athena::Serializer::ExclusionStrategies::ExclusionStrategyInterface","name":"ExclusionStrategyInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/exclusion_strategies/exclusion_strategy_interface.cr","line_number":83,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/exclusion_strategies/exclusion_strategy_interface.cr#L83"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Serializer/ExclusionStrategies/Disjunct","kind":"struct","full_name":"Athena::Serializer::ExclusionStrategies::Disjunct","name":"Disjunct"},{"html_id":"athena/Athena/Serializer/ExclusionStrategies/Groups","kind":"struct","full_name":"Athena::Serializer::ExclusionStrategies::Groups","name":"Groups"},{"html_id":"athena/Athena/Serializer/ExclusionStrategies/Version","kind":"struct","full_name":"Athena::Serializer::ExclusionStrategies::Version","name":"Version"}],"namespace":{"html_id":"athena/Athena/Serializer/ExclusionStrategies","kind":"module","full_name":"Athena::Serializer::ExclusionStrategies","name":"ExclusionStrategies"},"doc":"Represents a specific exclusion strategy.\n\nCustom logic can be implemented by defining a type with this interface.\nIt can then be used via `ASR::Context#add_exclusion_strategy`.\n\n## Example\n\n```\nstruct OddNumberExclusionStrategy\n  include Athena::Serializer::ExclusionStrategies::ExclusionStrategyInterface\n\n  # :inherit:\n  #\n  # Skips serializing odd numbered values\n  def skip_property?(metadata : ASR::PropertyMetadataBase, context : ASR::Context) : Bool\n    # Don't skip if the value is nil\n    return false unless value = (metadata.value)\n\n    # Only skip on serialization, if the value is an number, and if it's odd.\n    context.is_a?(ASR::SerializationContext) && value.is_a?(Number) && value.odd?\n  end\nend\n\nserialization_context = ASR::SerializationContext.new\nserialization_context.add_exclusion_strategy OddNumberExclusionStrategy.new\n\ndeserialization_context = ASR::DeserializationContext.new\ndeserialization_context.add_exclusion_strategy OddNumberExclusionStrategy.new\n\nrecord Values, one : Int32 = 1, two : Int32 = 2, three : Int32 = 3 do\n  include ASR::Serializable\nend\n\nASR.serializer.serialize Values.new, :json, serialization_context                                 # => {\"two\":2}\nASR.serializer.deserialize Values, %({\"one\":4,\"two\":5,\"three\":6}), :json, deserialization_context # => Values(@one=4, @three=6, @two=5)\n```\n\n### Annotation Configurations\n\nCustom annotations can be defined using `Athena::Config.configuration_annotation`.\nThese annotations will be exposed at runtime as part of the properties' metadata within exclusion strategies via `ASR::PropertyMetadata#annotation_configurations`.\nThe main purpose of this is to allow for more advanced annotation based exclusion strategies.\n\n```\n# Define an annotation called `IsActiveProperty` that accepts an optional `active` field.\nACF.configuration_annotation IsActiveProperty, active : Bool = true\n\n# Define an exclusion strategy that should skip \"inactive\" properties.\nstruct ActivePropertyExclusionStrategy\n  include Athena::Serializer::ExclusionStrategies::ExclusionStrategyInterface\n\n  # :inherit:\n  def skip_property?(metadata : ASR::PropertyMetadataBase, context : ASR::Context) : Bool\n    # Don't skip on deserialization.\n    return false if context.direction.deserialization?\n\n    ann_configs = metadata.annotation_configurations\n\n    # Skip if the property has the annotation and it's \"inactive\".\n    ann_configs.has?(IsActiveProperty) && !ann_configs[IsActiveProperty].active\n  end\nend\n\nrecord Example, id : Int32, first_name : String, last_name : String, zip_code : Int32 do\n  include ASR::Serializable\n\n  @[IsActiveProperty]\n  @first_name : String\n\n  @[IsActiveProperty(active: false)]\n  @last_name : String\n\n  # Can also be defined as a positional argument.\n  @[IsActiveProperty(false)]\n  @zip_code : Int32\nend\n\nserialization_context = ASR::SerializationContext.new\nserialization_context.add_exclusion_strategy ActivePropertyExclusionStrategy.new\n\nASR.serializer.serialize Example.new(1, \"Jon\", \"Snow\", 90210), :json, serialization_context # => {\"id\":1,\"first_name\":\"Jon\"}\n```","summary":"<p>Represents a specific exclusion strategy.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"skip_property?(metadata:ASR::PropertyMetadataBase,context:ASR::Context):Bool-instance-method","html_id":"skip_property?(metadata:ASR::PropertyMetadataBase,context:ASR::Context):Bool-instance-method","name":"skip_property?","doc":"Returns `true` if a property should _NOT_ be (de)serialized.","summary":"<p>Returns <code>true</code> if a property should <em>NOT</em> be (de)serialized.</p>","abstract":true,"args":[{"name":"metadata","doc":null,"default_value":"","external_name":"metadata","restriction":"ASR::PropertyMetadataBase"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::Context"}],"args_string":"(metadata : ASR::PropertyMetadataBase, context : ASR::Context) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/exclusion_strategies/exclusion_strategy_interface.cr#L85","def":{"name":"skip_property?","args":[{"name":"metadata","doc":null,"default_value":"","external_name":"metadata","restriction":"ASR::PropertyMetadataBase"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::Context"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/ExclusionStrategies/Groups","path":"Athena/Serializer/ExclusionStrategies/Groups.html","kind":"struct","full_name":"Athena::Serializer::ExclusionStrategies::Groups","name":"Groups","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Serializer/ExclusionStrategies/ExclusionStrategyInterface","kind":"module","full_name":"Athena::Serializer::ExclusionStrategies::ExclusionStrategyInterface","name":"ExclusionStrategyInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-serializer/src/exclusion_strategies/groups.cr","line_number":36,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/exclusion_strategies/groups.cr#L36"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Serializer/ExclusionStrategies/ExclusionStrategyInterface","kind":"module","full_name":"Athena::Serializer::ExclusionStrategies::ExclusionStrategyInterface","name":"ExclusionStrategyInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/ExclusionStrategies","kind":"module","full_name":"Athena::Serializer::ExclusionStrategies","name":"ExclusionStrategies"},"doc":"Allows creating different views of your objects by limiting which properties get serialized, based on the group(s) each property is a part of.\n\nIt is enabled by default when using `ASR::Context#groups=`.\n\n```\nclass Example\n  include ASR::Serializable\n\n  def initialize; end\n\n  @[ASRA::Groups(\"list\", \"details\")]\n  property id : Int64 = 1\n\n  @[ASRA::Groups(\"list\", \"details\")]\n  property title : String = \"TITLE\"\n\n  @[ASRA::Groups(\"list\")]\n  property comment_summaries : Array(String) = [\"Sentence 1.\", \"Sentence 2.\"]\n\n  @[ASRA::Groups(\"details\")]\n  property comments : Array(String) = [\"Sentence 1.  Another sentence.\", \"Sentence 2.  Some other stuff.\"]\n\n  # Properties not explicitly given a group are added to the `\"default\"` group.\n  property created_at : Time = Time.utc(2019, 1, 1)\n  property updated_at : Time?\nend\n\nobj = Example.new\n\nASR.serializer.serialize obj, :json, ASR::SerializationContext.new.groups = [\"list\"]            # => {\"id\":1,\"title\":\"TITLE\",\"comment_summaries\":[\"Sentence 1.\",\"Sentence 2.\"]}\nASR.serializer.serialize obj, :json, ASR::SerializationContext.new.groups = [\"details\"]         # => {\"id\":1,\"title\":\"TITLE\",\"comments\":[\"Sentence 1.  Another sentence.\",\"Sentence 2.  Some other stuff.\"]}\nASR.serializer.serialize obj, :json, ASR::SerializationContext.new.groups = [\"list\", \"default\"] # => {\"id\":1,\"title\":\"TITLE\",\"comment_summaries\":[\"Sentence 1.\",\"Sentence 2.\"],\"created_at\":\"2019-01-01T00:00:00Z\"}\n```","summary":"<p>Allows creating different views of your objects by limiting which properties get serialized, based on the group(s) each property is a part of.</p>","class_methods":[],"constructors":[{"id":"new(groups:Array(String))-class-method","html_id":"new(groups:Array(String))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"groups","doc":null,"default_value":"","external_name":"groups","restriction":"Array(String)"}],"args_string":"(groups : Array(String))","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/exclusion_strategies/groups.cr#L41","def":{"name":"new","args":[{"name":"groups","doc":null,"default_value":"","external_name":"groups","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(groups)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(*groups:String)-class-method","html_id":"new(*groups:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"groups","doc":null,"default_value":"","external_name":"groups","restriction":"String"}],"args_string":"(*groups : String)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/exclusion_strategies/groups.cr#L43","def":{"name":"new","args":[{"name":"groups","doc":null,"default_value":"","external_name":"groups","restriction":"String"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(groups.to_a)"}}],"instance_methods":[{"id":"skip_property?(metadata:ASR::PropertyMetadataBase,context:ASR::Context):Bool-instance-method","html_id":"skip_property?(metadata:ASR::PropertyMetadataBase,context:ASR::Context):Bool-instance-method","name":"skip_property?","doc":"Returns `true` if a property should _NOT_ be (de)serialized.","summary":"<p>Returns <code>true</code> if a property should <em>NOT</em> be (de)serialized.</p>","abstract":false,"args":[{"name":"metadata","doc":null,"default_value":"","external_name":"metadata","restriction":"ASR::PropertyMetadataBase"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::Context"}],"args_string":"(metadata : ASR::PropertyMetadataBase, context : ASR::Context) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/exclusion_strategies/groups.cr#L48","def":{"name":"skip_property?","args":[{"name":"metadata","doc":null,"default_value":"","external_name":"metadata","restriction":"ASR::PropertyMetadataBase"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::Context"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(metadata.groups & @groups).empty?"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/ExclusionStrategies/Version","path":"Athena/Serializer/ExclusionStrategies/Version.html","kind":"struct","full_name":"Athena::Serializer::ExclusionStrategies::Version","name":"Version","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Serializer/ExclusionStrategies/ExclusionStrategyInterface","kind":"module","full_name":"Athena::Serializer::ExclusionStrategies::ExclusionStrategyInterface","name":"ExclusionStrategyInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-serializer/src/exclusion_strategies/version.cr","line_number":25,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/exclusion_strategies/version.cr#L25"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Serializer/ExclusionStrategies/ExclusionStrategyInterface","kind":"module","full_name":"Athena::Serializer::ExclusionStrategies::ExclusionStrategyInterface","name":"ExclusionStrategyInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/ExclusionStrategies","kind":"module","full_name":"Athena::Serializer::ExclusionStrategies","name":"ExclusionStrategies"},"doc":"Serialize properties based on a `SemanticVersion` string.\n\nIt is enabled by default when using `ASR::Context#version=`.\n\n```\nclass Example\n  include ASR::Serializable\n\n  def initialize; end\n\n  @[ASRA::Until(\"1.0.0\")]\n  property name : String = \"Legacy Name\"\n\n  @[ASRA::Since(\"1.1.0\")]\n  property name2 : String = \"New Name\"\nend\n\nobj = Example.new\n\nASR.serializer.serialize obj, :json, ASR::SerializationContext.new.version = \"0.30.0\" # => {\"name\":\"Legacy Name\"}\nASR.serializer.serialize obj, :json, ASR::SerializationContext.new.version = \"1.2.0\"  # => {\"name2\":\"New Name\"}\n```","summary":"<p>Serialize properties based on a <code>SemanticVersion</code> string.</p>","class_methods":[],"constructors":[{"id":"new(version:SemanticVersion)-class-method","html_id":"new(version:SemanticVersion)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"version","doc":null,"default_value":"","external_name":"version","restriction":"SemanticVersion"}],"args_string":"(version : SemanticVersion)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/exclusion_strategies/version.cr#L30","def":{"name":"new","args":[{"name":"version","doc":null,"default_value":"","external_name":"version","restriction":"SemanticVersion"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(version)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"skip_property?(metadata:ASR::PropertyMetadataBase,context:ASR::Context):Bool-instance-method","html_id":"skip_property?(metadata:ASR::PropertyMetadataBase,context:ASR::Context):Bool-instance-method","name":"skip_property?","doc":"Returns `true` if a property should _NOT_ be (de)serialized.","summary":"<p>Returns <code>true</code> if a property should <em>NOT</em> be (de)serialized.</p>","abstract":false,"args":[{"name":"metadata","doc":null,"default_value":"","external_name":"metadata","restriction":"ASR::PropertyMetadataBase"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::Context"}],"args_string":"(metadata : ASR::PropertyMetadataBase, context : ASR::Context) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/exclusion_strategies/version.cr#L33","def":{"name":"skip_property?","args":[{"name":"metadata","doc":null,"default_value":"","external_name":"metadata","restriction":"ASR::PropertyMetadataBase"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::Context"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"if (since_version = metadata.since_version) && @version < since_version\n  return true\nend\nif (until_version = metadata.until_version) && @version >= until_version\n  return true\nend\nfalse\n"}},{"id":"version:SemanticVersion-instance-method","html_id":"version:SemanticVersion-instance-method","name":"version","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : SemanticVersion","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/exclusion_strategies/version.cr#L28","def":{"name":"version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SemanticVersion","visibility":"Public","body":"@version"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Serializer/Format","path":"Athena/Serializer/Format.html","kind":"enum","full_name":"Athena::Serializer::Format","name":"Format","abstract":false,"superclass":null,"ancestors":[{"html_id":"athena/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"athena/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-serializer/src/athena-serializer.cr","line_number":129,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/athena-serializer.cr#L129"}],"repository_name":"athena","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"JSON","name":"JSON","value":"0","doc":null,"summary":null},{"id":"YAML","name":"YAML","value":"1","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":"The built-in supported formats.","summary":"<p>The built-in supported formats.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"deserialization_visitor-instance-method","html_id":"deserialization_visitor-instance-method","name":"deserialization_visitor","doc":"Returns the `ASR::Visitors::DeserializationVisitorInterface` related to `self`.","summary":"<p>Returns the <code><a href=\"../../Athena/Serializer/Visitors/DeserializationVisitorInterface.html\">ASR::Visitors::DeserializationVisitorInterface</a></code> related to <code>self</code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/athena-serializer.cr#L142","def":{"name":"deserialization_visitor","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case self\nin .json?\n  ASR::Visitors::JSONDeserializationVisitor\nin .yaml?\n  ASR::Visitors::YAMLDeserializationVisitor\nend"}},{"id":"json?-instance-method","html_id":"json?-instance-method","name":"json?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/athena-serializer.cr#L130","def":{"name":"json?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == JSON"}},{"id":"serialization_visitor-instance-method","html_id":"serialization_visitor-instance-method","name":"serialization_visitor","doc":"Returns the `ASR::Visitors::SerializationVisitorInterface` related to `self`.","summary":"<p>Returns the <code><a href=\"../../Athena/Serializer/Visitors/SerializationVisitorInterface.html\">ASR::Visitors::SerializationVisitorInterface</a></code> related to <code>self</code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/athena-serializer.cr#L134","def":{"name":"serialization_visitor","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case self\nin .json?\n  ASR::Visitors::JSONSerializationVisitor\nin .yaml?\n  ASR::Visitors::YAMLSerializationVisitor\nend"}},{"id":"yaml?-instance-method","html_id":"yaml?-instance-method","name":"yaml?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/athena-serializer.cr#L131","def":{"name":"yaml?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == YAML"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/InstantiateObjectConstructor","path":"Athena/Serializer/InstantiateObjectConstructor.html","kind":"struct","full_name":"Athena::Serializer::InstantiateObjectConstructor","name":"InstantiateObjectConstructor","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Serializer/ObjectConstructorInterface","kind":"module","full_name":"Athena::Serializer::ObjectConstructorInterface","name":"ObjectConstructorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-serializer/src/construction/instantiate_object_constructor.cr","line_number":6,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/construction/instantiate_object_constructor.cr#L6"},{"filename":"src/ext/serializer.cr","line_number":10,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/ext/serializer.cr#L10"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Serializer/ObjectConstructorInterface","kind":"module","full_name":"Athena::Serializer::ObjectConstructorInterface","name":"ObjectConstructorInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":"Default `ASR::ObjectConstructorInterface` implementation.\n\nDirectly instantiates the object via a custom initializer added by `ASR::Serializable`.","summary":"<p>Default <code><a href=\"../../Athena/Serializer/ObjectConstructorInterface.html\">ASR::ObjectConstructorInterface</a></code> implementation.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/construction/instantiate_object_constructor.cr#L6","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"construct(navigator:ASR::Navigators::DeserializationNavigatorInterface,properties:Array(PropertyMetadataBase),data:ASR::Any,type)-instance-method","html_id":"construct(navigator:ASR::Navigators::DeserializationNavigatorInterface,properties:Array(PropertyMetadataBase),data:ASR::Any,type)-instance-method","name":"construct","doc":"Creates an instance of *type* and applies the provided *properties* onto it, with the provided *data*.","summary":"<p>Creates an instance of <em>type</em> and applies the provided <em>properties</em> onto it, with the provided <em>data</em>.</p>","abstract":false,"args":[{"name":"navigator","doc":null,"default_value":"","external_name":"navigator","restriction":"ASR::Navigators::DeserializationNavigatorInterface"},{"name":"properties","doc":null,"default_value":"","external_name":"properties","restriction":"Array(PropertyMetadataBase)"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""}],"args_string":"(navigator : ASR::Navigators::DeserializationNavigatorInterface, properties : Array(PropertyMetadataBase), data : ASR::Any, type)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/construction/instantiate_object_constructor.cr#L10","def":{"name":"construct","args":[{"name":"navigator","doc":null,"default_value":"","external_name":"navigator","restriction":"ASR::Navigators::DeserializationNavigatorInterface"},{"name":"properties","doc":null,"default_value":"","external_name":"properties","restriction":"Array(PropertyMetadataBase)"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"type.new(navigator, properties, data)"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Model","path":"Athena/Serializer/Model.html","kind":"module","full_name":"Athena::Serializer::Model","name":"Model","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/athena-serializer.cr","line_number":183,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/athena-serializer.cr#L183"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":"Used to denote a type that is (de)serializable.\n\nThis module can be used to make the compiler happy in some situations, it doesn't do anything on its own.\nYou most likely want to use `ASR::Serializable` instead.\n\n```\nrequire \"athena-serializer\"\n\nabstract struct BaseModel\n  # `ASR::Model` is needed here to ensure typings are correct for the deserialization process.\n  # Child types should still include `ASR::Serializable`.\n  include ASR::Model\nend\n\nrecord ModelOne < BaseModel, id : Int32, name : String do\n  include ASR::Serializable\nend\n\nrecord ModelTwo < BaseModel, id : Int32, name : String do\n  include ASR::Serializable\nend\n\nrecord Unionable, type : BaseModel.class\n```","summary":"<p>Used to denote a type that is (de)serializable.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Navigators","path":"Athena/Serializer/Navigators.html","kind":"module","full_name":"Athena::Serializer::Navigators","name":"Navigators","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/navigators/deserialization_navigator.cr","line_number":1,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/navigators/deserialization_navigator.cr#L1"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Serializer/Navigators/DeserializationNavigator","path":"Athena/Serializer/Navigators/DeserializationNavigator.html","kind":"struct","full_name":"Athena::Serializer::Navigators::DeserializationNavigator","name":"DeserializationNavigator","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Serializer/Navigators/DeserializationNavigatorInterface","kind":"module","full_name":"Athena::Serializer::Navigators::DeserializationNavigatorInterface","name":"DeserializationNavigatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-serializer/src/navigators/deserialization_navigator.cr","line_number":5,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/navigators/deserialization_navigator.cr#L5"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Serializer/Navigators/DeserializationNavigatorInterface","kind":"module","full_name":"Athena::Serializer::Navigators::DeserializationNavigatorInterface","name":"DeserializationNavigatorInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Navigators","kind":"module","full_name":"Athena::Serializer::Navigators","name":"Navigators"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(visitor:ASR::Visitors::DeserializationVisitorInterface,context:ASR::DeserializationContext,object_constructor:ASR::ObjectConstructorInterface)-class-method","html_id":"new(visitor:ASR::Visitors::DeserializationVisitorInterface,context:ASR::DeserializationContext,object_constructor:ASR::ObjectConstructorInterface)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"visitor","doc":null,"default_value":"","external_name":"visitor","restriction":"ASR::Visitors::DeserializationVisitorInterface"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::DeserializationContext"},{"name":"object_constructor","doc":null,"default_value":"","external_name":"object_constructor","restriction":"ASR::ObjectConstructorInterface"}],"args_string":"(visitor : ASR::Visitors::DeserializationVisitorInterface, context : ASR::DeserializationContext, object_constructor : ASR::ObjectConstructorInterface)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/navigators/deserialization_navigator.cr#L8","def":{"name":"new","args":[{"name":"visitor","doc":null,"default_value":"","external_name":"visitor","restriction":"ASR::Visitors::DeserializationVisitorInterface"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::DeserializationContext"},{"name":"object_constructor","doc":null,"default_value":"","external_name":"object_constructor","restriction":"ASR::ObjectConstructorInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(visitor, context, object_constructor)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"accept(type:T.class,data:ASR::Any)forallT-instance-method","html_id":"accept(type:T.class,data:ASR::Any)forallT-instance-method","name":"accept","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"T.class"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"args_string":"(type : <span class=\"t\">T</span>.<span class=\"k\">class</span>, data : ASR::Any) forall T","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/navigators/deserialization_navigator.cr#L14","def":{"name":"accept","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"T.class"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% if T.instance <= ASR::Model %}\n      {% if ann = T.instance.annotation(ASRA::Discriminator) %}\n        if key = data[{{ ann[:key] }}]?\n          type = case key\n            {% for k, t in ann[:map] %}\n              when {{ k.id.stringify }} then {{ t }}\n            {% end %}\n          else\n            raise \"Unknown '#{{{ ann[:key] }}}' discriminator value: '#{key}'.\"\n          end\n        else\n          raise \"Missing discriminator field '#{{{ ann[:key] }}}'.\"\n        end\n      {% end %}\n\n      properties = type.deserialization_properties\n\n      # Apply exclusion strategies if one is defined\n      if strategy = @context.exclusion_strategy\n        properties.reject! { |property| strategy.skip_property? property, @context }\n      end\n\n      object = @object_constructor.construct self, properties, data, type\n\n      object.run_postdeserialize\n\n      object\n    {% else %}\n      {% if T.class.has_method?(:deserialize) %}\n        @visitor.visit type, data\n      {% end %}\n    {% end %}"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Navigators/DeserializationNavigatorInterface","path":"Athena/Serializer/Navigators/DeserializationNavigatorInterface.html","kind":"module","full_name":"Athena::Serializer::Navigators::DeserializationNavigatorInterface","name":"DeserializationNavigatorInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/navigators/deserialization_navigator.cr","line_number":1,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/navigators/deserialization_navigator.cr#L1"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Serializer/Navigators/DeserializationNavigator","kind":"struct","full_name":"Athena::Serializer::Navigators::DeserializationNavigator","name":"DeserializationNavigator"}],"namespace":{"html_id":"athena/Athena/Serializer/Navigators","kind":"module","full_name":"Athena::Serializer::Navigators","name":"Navigators"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"accept(type:T.class,data:ASR::Any)forallT-instance-method","html_id":"accept(type:T.class,data:ASR::Any)forallT-instance-method","name":"accept","doc":null,"summary":null,"abstract":true,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"T.class"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"args_string":"(type : <span class=\"t\">T</span>.<span class=\"k\">class</span>, data : ASR::Any) forall T","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/navigators/deserialization_navigator.cr#L2","def":{"name":"accept","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"T.class"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Navigators/NavigatorFactory","path":"Athena/Serializer/Navigators/NavigatorFactory.html","kind":"struct","full_name":"Athena::Serializer::Navigators::NavigatorFactory","name":"NavigatorFactory","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Serializer/Navigators/NavigatorFactoryInterface","kind":"module","full_name":"Athena::Serializer::Navigators::NavigatorFactoryInterface","name":"NavigatorFactoryInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-serializer/src/navigators/navigator_factory.cr","line_number":6,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/navigators/navigator_factory.cr#L6"},{"filename":"src/ext/serializer.cr","line_number":7,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/ext/serializer.cr#L7"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Serializer/Navigators/NavigatorFactoryInterface","kind":"module","full_name":"Athena::Serializer::Navigators::NavigatorFactoryInterface","name":"NavigatorFactoryInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Navigators","kind":"module","full_name":"Athena::Serializer::Navigators","name":"Navigators"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(object_constructor:ASR::ObjectConstructorInterface=ASR::InstantiateObjectConstructor.new)-class-method","html_id":"new(object_constructor:ASR::ObjectConstructorInterface=ASR::InstantiateObjectConstructor.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"object_constructor","doc":null,"default_value":"ASR::InstantiateObjectConstructor.new","external_name":"object_constructor","restriction":"ASR::ObjectConstructorInterface"}],"args_string":"(object_constructor : ASR::ObjectConstructorInterface = <span class=\"t\">ASR</span><span class=\"t\">::</span><span class=\"t\">InstantiateObjectConstructor</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/navigators/navigator_factory.cr#L9","def":{"name":"new","args":[{"name":"object_constructor","doc":null,"default_value":"ASR::InstantiateObjectConstructor.new","external_name":"object_constructor","restriction":"ASR::ObjectConstructorInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(object_constructor)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"get_deserialization_navigator(visitor:ASR::Visitors::DeserializationVisitorInterface,context:ASR::DeserializationContext):ASR::Navigators::DeserializationNavigatorInterface-instance-method","html_id":"get_deserialization_navigator(visitor:ASR::Visitors::DeserializationVisitorInterface,context:ASR::DeserializationContext):ASR::Navigators::DeserializationNavigatorInterface-instance-method","name":"get_deserialization_navigator","doc":null,"summary":null,"abstract":false,"args":[{"name":"visitor","doc":null,"default_value":"","external_name":"visitor","restriction":"ASR::Visitors::DeserializationVisitorInterface"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::DeserializationContext"}],"args_string":"(visitor : ASR::Visitors::DeserializationVisitorInterface, context : ASR::DeserializationContext) : ASR::Navigators::DeserializationNavigatorInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/navigators/navigator_factory.cr#L15","def":{"name":"get_deserialization_navigator","args":[{"name":"visitor","doc":null,"default_value":"","external_name":"visitor","restriction":"ASR::Visitors::DeserializationVisitorInterface"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::DeserializationContext"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ASR::Navigators::DeserializationNavigatorInterface","visibility":"Public","body":"ASR::Navigators::DeserializationNavigator.new(visitor, context, @object_constructor)"}},{"id":"get_serialization_navigator(visitor:ASR::Visitors::SerializationVisitorInterface,context:ASR::SerializationContext):ASR::Navigators::SerializationNavigatorInterface-instance-method","html_id":"get_serialization_navigator(visitor:ASR::Visitors::SerializationVisitorInterface,context:ASR::SerializationContext):ASR::Navigators::SerializationNavigatorInterface-instance-method","name":"get_serialization_navigator","doc":null,"summary":null,"abstract":false,"args":[{"name":"visitor","doc":null,"default_value":"","external_name":"visitor","restriction":"ASR::Visitors::SerializationVisitorInterface"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::SerializationContext"}],"args_string":"(visitor : ASR::Visitors::SerializationVisitorInterface, context : ASR::SerializationContext) : ASR::Navigators::SerializationNavigatorInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/navigators/navigator_factory.cr#L11","def":{"name":"get_serialization_navigator","args":[{"name":"visitor","doc":null,"default_value":"","external_name":"visitor","restriction":"ASR::Visitors::SerializationVisitorInterface"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::SerializationContext"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ASR::Navigators::SerializationNavigatorInterface","visibility":"Public","body":"ASR::Navigators::SerializationNavigator.new(visitor, context)"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Navigators/NavigatorFactoryInterface","path":"Athena/Serializer/Navigators/NavigatorFactoryInterface.html","kind":"module","full_name":"Athena::Serializer::Navigators::NavigatorFactoryInterface","name":"NavigatorFactoryInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/navigators/navigator_factory.cr","line_number":1,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/navigators/navigator_factory.cr#L1"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Serializer/Navigators/NavigatorFactory","kind":"struct","full_name":"Athena::Serializer::Navigators::NavigatorFactory","name":"NavigatorFactory"}],"namespace":{"html_id":"athena/Athena/Serializer/Navigators","kind":"module","full_name":"Athena::Serializer::Navigators","name":"Navigators"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"get_deserialization_navigator(visitor:ASR::Visitors::DeserializationVisitorInterface,context:ASR::DeserializationContext):ASR::Navigators::DeserializationNavigatorInterface-instance-method","html_id":"get_deserialization_navigator(visitor:ASR::Visitors::DeserializationVisitorInterface,context:ASR::DeserializationContext):ASR::Navigators::DeserializationNavigatorInterface-instance-method","name":"get_deserialization_navigator","doc":null,"summary":null,"abstract":true,"args":[{"name":"visitor","doc":null,"default_value":"","external_name":"visitor","restriction":"ASR::Visitors::DeserializationVisitorInterface"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::DeserializationContext"}],"args_string":"(visitor : ASR::Visitors::DeserializationVisitorInterface, context : ASR::DeserializationContext) : ASR::Navigators::DeserializationNavigatorInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/navigators/navigator_factory.cr#L3","def":{"name":"get_deserialization_navigator","args":[{"name":"visitor","doc":null,"default_value":"","external_name":"visitor","restriction":"ASR::Visitors::DeserializationVisitorInterface"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::DeserializationContext"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ASR::Navigators::DeserializationNavigatorInterface","visibility":"Public","body":""}},{"id":"get_serialization_navigator(visitor:ASR::Visitors::SerializationVisitorInterface,context:ASR::SerializationContext):ASR::Navigators::SerializationNavigatorInterface-instance-method","html_id":"get_serialization_navigator(visitor:ASR::Visitors::SerializationVisitorInterface,context:ASR::SerializationContext):ASR::Navigators::SerializationNavigatorInterface-instance-method","name":"get_serialization_navigator","doc":null,"summary":null,"abstract":true,"args":[{"name":"visitor","doc":null,"default_value":"","external_name":"visitor","restriction":"ASR::Visitors::SerializationVisitorInterface"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::SerializationContext"}],"args_string":"(visitor : ASR::Visitors::SerializationVisitorInterface, context : ASR::SerializationContext) : ASR::Navigators::SerializationNavigatorInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/navigators/navigator_factory.cr#L2","def":{"name":"get_serialization_navigator","args":[{"name":"visitor","doc":null,"default_value":"","external_name":"visitor","restriction":"ASR::Visitors::SerializationVisitorInterface"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::SerializationContext"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ASR::Navigators::SerializationNavigatorInterface","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Navigators/SerializationNavigator","path":"Athena/Serializer/Navigators/SerializationNavigator.html","kind":"struct","full_name":"Athena::Serializer::Navigators::SerializationNavigator","name":"SerializationNavigator","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Serializer/Navigators/SerializationNavigatorInterface","kind":"module","full_name":"Athena::Serializer::Navigators::SerializationNavigatorInterface","name":"SerializationNavigatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-serializer/src/navigators/serialization_navigator.cr","line_number":6,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/navigators/serialization_navigator.cr#L6"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Serializer/Navigators/SerializationNavigatorInterface","kind":"module","full_name":"Athena::Serializer::Navigators::SerializationNavigatorInterface","name":"SerializationNavigatorInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Navigators","kind":"module","full_name":"Athena::Serializer::Navigators","name":"Navigators"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(visitor:ASR::Visitors::SerializationVisitorInterface,context:ASR::SerializationContext)-class-method","html_id":"new(visitor:ASR::Visitors::SerializationVisitorInterface,context:ASR::SerializationContext)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"visitor","doc":null,"default_value":"","external_name":"visitor","restriction":"ASR::Visitors::SerializationVisitorInterface"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::SerializationContext"}],"args_string":"(visitor : ASR::Visitors::SerializationVisitorInterface, context : ASR::SerializationContext)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/navigators/serialization_navigator.cr#L9","def":{"name":"new","args":[{"name":"visitor","doc":null,"default_value":"","external_name":"visitor","restriction":"ASR::Visitors::SerializationVisitorInterface"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::SerializationContext"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(visitor, context)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"accept(data:ASR::Model):Nil-instance-method","html_id":"accept(data:ASR::Model):Nil-instance-method","name":"accept","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Model"}],"args_string":"(data : ASR::Model) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/navigators/serialization_navigator.cr#L11","def":{"name":"accept","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Model"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"data.run_preserialize\nproperties = data.serialization_properties\nif strategy = @context.exclusion_strategy\n  properties.reject! do |property|\n    strategy.skip_property?(property, @context)\n  end\nend\nproperties.reject! do |property|\n  val = property.value\n  skip_when_empty = (property.skip_when_empty? && (val.responds_to?(:\"empty?\"))) && val.empty?\n  skip_nil = (!@context.emit_nil?) && val.nil?\n  skip_when_empty || skip_nil\nend\n@visitor.visit(properties)\ndata.run_postserialize\n"}},{"id":"accept(data:_):Nil-instance-method","html_id":"accept(data:_):Nil-instance-method","name":"accept","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"}],"args_string":"(data : _) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/navigators/serialization_navigator.cr#L37","def":{"name":"accept","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@visitor.visit(data)"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Navigators/SerializationNavigatorInterface","path":"Athena/Serializer/Navigators/SerializationNavigatorInterface.html","kind":"module","full_name":"Athena::Serializer::Navigators::SerializationNavigatorInterface","name":"SerializationNavigatorInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/navigators/serialization_navigator.cr","line_number":1,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/navigators/serialization_navigator.cr#L1"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Serializer/Navigators/SerializationNavigator","kind":"struct","full_name":"Athena::Serializer::Navigators::SerializationNavigator","name":"SerializationNavigator"}],"namespace":{"html_id":"athena/Athena/Serializer/Navigators","kind":"module","full_name":"Athena::Serializer::Navigators","name":"Navigators"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"accept(data:ASR::Model):Nil-instance-method","html_id":"accept(data:ASR::Model):Nil-instance-method","name":"accept","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Model"}],"args_string":"(data : ASR::Model) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/navigators/serialization_navigator.cr#L2","def":{"name":"accept","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Model"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"accept(data:_):Nil-instance-method","html_id":"accept(data:_):Nil-instance-method","name":"accept","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"}],"args_string":"(data : _) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/navigators/serialization_navigator.cr#L3","def":{"name":"accept","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Serializer/ObjectConstructorInterface","path":"Athena/Serializer/ObjectConstructorInterface.html","kind":"module","full_name":"Athena::Serializer::ObjectConstructorInterface","name":"ObjectConstructorInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/construction/object_constructor_interface.cr","line_number":7,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/construction/object_constructor_interface.cr#L7"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Serializer/InstantiateObjectConstructor","kind":"struct","full_name":"Athena::Serializer::InstantiateObjectConstructor","name":"InstantiateObjectConstructor"}],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":"Determines how a new object is constructed during deserialization.\n\nBy default it is directly instantiated via `.new` as part of `ASR::InstantiateObjectConstructor`.\n\nHowever custom constructors can be defined.  A use case could be retrieving the object from the database as part of a `PUT` request in order\nto apply the deserialized data onto it.  This would allow it to retain the PK, any timestamps, or `ASRA::ReadOnly` values.","summary":"<p>Determines how a new object is constructed during deserialization.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"construct(navigator:ASR::Navigators::DeserializationNavigatorInterface,properties:Array(PropertyMetadataBase),data:ASR::Any,type)-instance-method","html_id":"construct(navigator:ASR::Navigators::DeserializationNavigatorInterface,properties:Array(PropertyMetadataBase),data:ASR::Any,type)-instance-method","name":"construct","doc":"Creates an instance of *type* and applies the provided *properties* onto it, with the provided *data*.","summary":"<p>Creates an instance of <em>type</em> and applies the provided <em>properties</em> onto it, with the provided <em>data</em>.</p>","abstract":true,"args":[{"name":"navigator","doc":null,"default_value":"","external_name":"navigator","restriction":"ASR::Navigators::DeserializationNavigatorInterface"},{"name":"properties","doc":null,"default_value":"","external_name":"properties","restriction":"Array(PropertyMetadataBase)"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""}],"args_string":"(navigator : ASR::Navigators::DeserializationNavigatorInterface, properties : Array(PropertyMetadataBase), data : ASR::Any, type)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/construction/object_constructor_interface.cr#L9","def":{"name":"construct","args":[{"name":"navigator","doc":null,"default_value":"","external_name":"navigator","restriction":"ASR::Navigators::DeserializationNavigatorInterface"},{"name":"properties","doc":null,"default_value":"","external_name":"properties","restriction":"Array(PropertyMetadataBase)"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/PropertyMetadata","path":"Athena/Serializer/PropertyMetadata.html","kind":"struct","full_name":"Athena::Serializer::PropertyMetadata(IvarType, ValueType, ClassType)","name":"PropertyMetadata","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Serializer/PropertyMetadataBase","kind":"module","full_name":"Athena::Serializer::PropertyMetadataBase","name":"PropertyMetadataBase"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-serializer/src/property_metadata.cr","line_number":9,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/property_metadata.cr#L9"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Serializer/PropertyMetadataBase","kind":"module","full_name":"Athena::Serializer::PropertyMetadataBase","name":"PropertyMetadataBase"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":"Stores metadata related to a specific property.\n\nThis includes its name (internal and external), value, versions/groups, and any aliases.","summary":"<p>Stores metadata related to a specific property.</p>","class_methods":[],"constructors":[{"id":"new(name:String,external_name:String,annotation_configurations:ACF::AnnotationConfigurations,value:ValueType=nil,skip_when_empty:Bool=false,groups:Array(String)=[&quot;default&quot;],aliases:Array(String)=[]ofString,since_version:SemanticVersion?=nil,until_version:SemanticVersion?=nil,type:IvarType.class=IvarType,class__arg0:ClassType.class=ClassType)-class-method","html_id":"new(name:String,external_name:String,annotation_configurations:ACF::AnnotationConfigurations,value:ValueType=nil,skip_when_empty:Bool=false,groups:Array(String)=[&quot;default&quot;],aliases:Array(String)=[]ofString,since_version:SemanticVersion?=nil,until_version:SemanticVersion?=nil,type:IvarType.class=IvarType,class__arg0:ClassType.class=ClassType)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"external_name","doc":null,"default_value":"","external_name":"external_name","restriction":"String"},{"name":"annotation_configurations","doc":null,"default_value":"","external_name":"annotation_configurations","restriction":"ACF::AnnotationConfigurations"},{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":"ValueType"},{"name":"skip_when_empty","doc":null,"default_value":"false","external_name":"skip_when_empty","restriction":"Bool"},{"name":"groups","doc":null,"default_value":"[\"default\"]","external_name":"groups","restriction":"Array(String)"},{"name":"aliases","doc":null,"default_value":"[] of String","external_name":"aliases","restriction":"Array(String)"},{"name":"since_version","doc":null,"default_value":"nil","external_name":"since_version","restriction":"SemanticVersion | ::Nil"},{"name":"until_version","doc":null,"default_value":"nil","external_name":"until_version","restriction":"SemanticVersion | ::Nil"},{"name":"type","doc":null,"default_value":"IvarType","external_name":"type","restriction":"IvarType.class"},{"name":"__arg0","doc":null,"default_value":"ClassType","external_name":"class","restriction":"ClassType.class"}],"args_string":"(name : String, external_name : String, annotation_configurations : ACF::AnnotationConfigurations, value : ValueType = <span class=\"n\">nil</span>, skip_when_empty : Bool = <span class=\"n\">false</span>, groups : Array(String) = [<span class=\"s\">&quot;default&quot;</span>], aliases : Array(String) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span>, since_version : SemanticVersion? = <span class=\"n\">nil</span>, until_version : SemanticVersion? = <span class=\"n\">nil</span>, type : <span class=\"t\">IvarType</span>.<span class=\"k\">class</span> = <span class=\"t\">IvarType</span>, class __arg0 : <span class=\"t\">ClassType</span>.<span class=\"k\">class</span> = <span class=\"t\">ClassType</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/property_metadata.cr#L57","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"external_name","doc":null,"default_value":"","external_name":"external_name","restriction":"String"},{"name":"annotation_configurations","doc":null,"default_value":"","external_name":"annotation_configurations","restriction":"ACF::AnnotationConfigurations"},{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":"ValueType"},{"name":"skip_when_empty","doc":null,"default_value":"false","external_name":"skip_when_empty","restriction":"Bool"},{"name":"groups","doc":null,"default_value":"[\"default\"]","external_name":"groups","restriction":"Array(String)"},{"name":"aliases","doc":null,"default_value":"[] of String","external_name":"aliases","restriction":"Array(String)"},{"name":"since_version","doc":null,"default_value":"nil","external_name":"since_version","restriction":"SemanticVersion | ::Nil"},{"name":"until_version","doc":null,"default_value":"nil","external_name":"until_version","restriction":"SemanticVersion | ::Nil"},{"name":"type","doc":null,"default_value":"IvarType","external_name":"type","restriction":"IvarType.class"},{"name":"__arg0","doc":null,"default_value":"ClassType","external_name":"class","restriction":"ClassType.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = PropertyMetadata(IvarType, ValueType, ClassType).allocate\n_.initialize(name, external_name, annotation_configurations, value, skip_when_empty, groups, aliases, since_version, until_version, type, __arg0)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"aliases:Array(String)-instance-method","html_id":"aliases:Array(String)-instance-method","name":"aliases","doc":"Deserialize this property from the property's name or any name in *aliases*.\n\nSee `ASRA::Name`.","summary":"<p>Deserialize this property from the property's name or any name in <em>aliases</em>.</p>","abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/property_metadata.cr#L45","def":{"name":"aliases","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@aliases"}},{"id":"annotation_configurations:ACF::AnnotationConfigurations-instance-method","html_id":"annotation_configurations:ACF::AnnotationConfigurations-instance-method","name":"annotation_configurations","doc":"Returns annotations configurations registered via `Athena::Config.configuration_annotation` and applied to this property.\n\nThese configurations could then be accessed within an `ART::ExclusionStrategies::ExclusionStrategyInterface`.","summary":"<p>Returns annotations configurations registered via <code><a href=\"../../Athena/Config.html#configuration_annotation(name,*args,&)-macro\">Athena::Config.configuration_annotation</a></code> and applied to this property.</p>","abstract":false,"args":[],"args_string":" : ACF::AnnotationConfigurations","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/property_metadata.cr#L55","def":{"name":"annotation_configurations","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ACF::AnnotationConfigurations","visibility":"Public","body":"@annotation_configurations"}},{"id":"class:ClassType.class-instance-method","html_id":"class:ClassType.class-instance-method","name":"class","doc":"The class that the property is part of.","summary":"<p>The class that the property is part of.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">ClassType</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/property_metadata.cr#L25","def":{"name":"class","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ClassType.class","visibility":"Public","body":"@class"}},{"id":"external_name:String-instance-method","html_id":"external_name:String-instance-method","name":"external_name","doc":"The name that should be used for serialization/deserialization.","summary":"<p>The name that should be used for serialization/deserialization.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/property_metadata.cr#L16","def":{"name":"external_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@external_name"}},{"id":"groups:Array(String)-instance-method","html_id":"groups:Array(String)-instance-method","name":"groups","doc":"The serialization groups this property belongs to.\n\nSee `ASR::ExclusionStrategies::Groups`.","summary":"<p>The serialization groups this property belongs to.</p>","abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/property_metadata.cr#L40","def":{"name":"groups","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@groups"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":"The name of the property.","summary":"<p>The name of the property.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/property_metadata.cr#L13","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}},{"id":"since_version:SemanticVersion?-instance-method","html_id":"since_version:SemanticVersion?-instance-method","name":"since_version","doc":"Represents the first version this property is available.\n\nSee `ASR::ExclusionStrategies::Version`.","summary":"<p>Represents the first version this property is available.</p>","abstract":false,"args":[],"args_string":" : SemanticVersion?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/property_metadata.cr#L30","def":{"name":"since_version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SemanticVersion | ::Nil","visibility":"Public","body":"@since_version"}},{"id":"since_version=(since_version:SemanticVersion?)-instance-method","html_id":"since_version=(since_version:SemanticVersion?)-instance-method","name":"since_version=","doc":"Represents the first version this property is available.\n\nSee `ASR::ExclusionStrategies::Version`.","summary":"<p>Represents the first version this property is available.</p>","abstract":false,"args":[{"name":"since_version","doc":null,"default_value":"","external_name":"since_version","restriction":"SemanticVersion | ::Nil"}],"args_string":"(since_version : SemanticVersion?)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/property_metadata.cr#L30","def":{"name":"since_version=","args":[{"name":"since_version","doc":null,"default_value":"","external_name":"since_version","restriction":"SemanticVersion | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@since_version = since_version"}},{"id":"skip_when_empty?:Bool-instance-method","html_id":"skip_when_empty?:Bool-instance-method","name":"skip_when_empty?","doc":"If this property should not be serialized if it is empty.\n\nSee `ASRA::SkipWhenEmpty`.","summary":"<p>If this property should not be serialized if it is empty.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/property_metadata.cr#L50","def":{"name":"skip_when_empty?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@skip_when_empty"}},{"id":"type:IvarType.class-instance-method","html_id":"type:IvarType.class-instance-method","name":"type","doc":"The type of the property.","summary":"<p>The type of the property.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">IvarType</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/property_metadata.cr#L22","def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IvarType.class","visibility":"Public","body":"@type"}},{"id":"until_version:SemanticVersion?-instance-method","html_id":"until_version:SemanticVersion?-instance-method","name":"until_version","doc":"Represents the last version this property was available.\n\nSee `ASR::ExclusionStrategies::Version`.","summary":"<p>Represents the last version this property was available.</p>","abstract":false,"args":[],"args_string":" : SemanticVersion?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/property_metadata.cr#L35","def":{"name":"until_version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SemanticVersion | ::Nil","visibility":"Public","body":"@until_version"}},{"id":"until_version=(until_version:SemanticVersion?)-instance-method","html_id":"until_version=(until_version:SemanticVersion?)-instance-method","name":"until_version=","doc":"Represents the last version this property was available.\n\nSee `ASR::ExclusionStrategies::Version`.","summary":"<p>Represents the last version this property was available.</p>","abstract":false,"args":[{"name":"until_version","doc":null,"default_value":"","external_name":"until_version","restriction":"SemanticVersion | ::Nil"}],"args_string":"(until_version : SemanticVersion?)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/property_metadata.cr#L35","def":{"name":"until_version=","args":[{"name":"until_version","doc":null,"default_value":"","external_name":"until_version","restriction":"SemanticVersion | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@until_version = until_version"}},{"id":"value:ValueType-instance-method","html_id":"value:ValueType-instance-method","name":"value","doc":"The value of the property (when serializing).","summary":"<p>The value of the property (when serializing).</p>","abstract":false,"args":[],"args_string":" : ValueType","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/property_metadata.cr#L19","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ValueType","visibility":"Public","body":"@value"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/PropertyMetadataBase","path":"Athena/Serializer/PropertyMetadataBase.html","kind":"module","full_name":"Athena::Serializer::PropertyMetadataBase","name":"PropertyMetadataBase","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/property_metadata.cr","line_number":4,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/property_metadata.cr#L4"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Serializer/PropertyMetadata","kind":"struct","full_name":"Athena::Serializer::PropertyMetadata(IvarType, ValueType, ClassType)","name":"PropertyMetadata"}],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":"Parent type of a property metadata just used for typing.\n\nSee `ASR::PropertyMetadata`.","summary":"<p>Parent type of a property metadata just used for typing.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Serializable","path":"Athena/Serializer/Serializable.html","kind":"module","full_name":"Athena::Serializer::Serializable","name":"Serializable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/serializable.cr","line_number":17,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/serializable.cr#L17"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":"Adds the necessary methods to a `struct`/`class` to allow for (de)serialization of that type.\n\n```\nrequire \"athena-serializer\"\n\nrecord Example, id : Int32, name : String do\n  include ASR::Serializable\nend\n\nobj = ASR.serializer.deserialize Example, %({\"id\":1,\"name\":\"George\"}), :json\nobj                                 # => Example(@id=1, @name=\"George\")\nASR.serializer.serialize obj, :yaml # =>\n# ---\n# id: 1\n# name: George\n```","summary":"<p>Adds the necessary methods to a <code>struct</code>/<code>class</code> to allow for (de)serialization of that type.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/SerializationContext","path":"Athena/Serializer/SerializationContext.html","kind":"class","full_name":"Athena::Serializer::SerializationContext","name":"SerializationContext","abstract":false,"superclass":{"html_id":"athena/Athena/Serializer/Context","kind":"class","full_name":"Athena::Serializer::Context","name":"Context"},"ancestors":[{"html_id":"athena/Athena/Serializer/Context","kind":"class","full_name":"Athena::Serializer::Context","name":"Context"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-serializer/src/serialization_context.cr","line_number":4,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/serialization_context.cr#L4"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":"The `ASR::Context` specific to serialization.\n\nAllows specifying if `nil` values should be serialized.","summary":"<p>The <code><a href=\"../../Athena/Serializer/Context.html\">ASR::Context</a></code> specific to serialization.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"direction:ASR::Context::Direction-instance-method","html_id":"direction:ASR::Context::Direction-instance-method","name":"direction","doc":"Returns which (de)serialization action `self` represents.","summary":"<p>Returns which (de)serialization action <code>self</code> represents.</p>","abstract":false,"args":[],"args_string":" : ASR::Context::Direction","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/serialization_context.cr#L8","def":{"name":"direction","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ASR::Context::Direction","visibility":"Public","body":"ASR::Context::Direction::Serialization"}},{"id":"emit_nil=(emit_nil:Bool)-instance-method","html_id":"emit_nil=(emit_nil:Bool)-instance-method","name":"emit_nil=","doc":"If `nil` values should be serialized.","summary":"<p>If <code>nil</code> values should be serialized.</p>","abstract":false,"args":[{"name":"emit_nil","doc":null,"default_value":"","external_name":"emit_nil","restriction":"Bool"}],"args_string":"(emit_nil : Bool)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/serialization_context.cr#L6","def":{"name":"emit_nil=","args":[{"name":"emit_nil","doc":null,"default_value":"","external_name":"emit_nil","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@emit_nil = emit_nil"}},{"id":"emit_nil?:Bool-instance-method","html_id":"emit_nil?:Bool-instance-method","name":"emit_nil?","doc":"If `nil` values should be serialized.","summary":"<p>If <code>nil</code> values should be serialized.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/serialization_context.cr#L6","def":{"name":"emit_nil?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@emit_nil"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Serializer","path":"Athena/Serializer/Serializer.html","kind":"struct","full_name":"Athena::Serializer::Serializer","name":"Serializer","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Serializer/SerializerInterface","kind":"module","full_name":"Athena::Serializer::SerializerInterface","name":"SerializerInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-serializer/src/serializer.cr","line_number":25,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/serializer.cr#L25"},{"filename":"src/ext/serializer.cr","line_number":4,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/ext/serializer.cr#L4"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Serializer/SerializerInterface","kind":"module","full_name":"Athena::Serializer::SerializerInterface","name":"SerializerInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":"Default implementation of `ASR::SerializerInterface`.\n\nProvides the main API used to (de)serialize objects.\n\nCustom formats can be implemented by creating the required visitors for that type, then overriding `#get_deserialization_visitor_class` and `#get_serialization_visitor_class`.\n\n```\n# Redefine the visitor class getters in order to first check for custom formats.\n# This assumes these visitor types are defined, with the proper logic to handle\n# the (de)serialization process.\nstruct Athena::Serializer::Serializer\n  protected def get_deserialization_visitor_class(format : ASR::Format | String)\n    return MessagePackDeserializationVisitor if format == \"message_pack\"\n\n    previous_def\n  end\n\n  protected def get_serialization_visitor_class(format : ASR::Format | String)\n    return MessagePackSerializationVisitor if format == \"message_pack\"\n\n    previous_def\n  end\nend\n```","summary":"<p>Default implementation of <code><a href=\"../../Athena/Serializer/SerializerInterface.html\">ASR::SerializerInterface</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(navigator_factory:ASR::Navigators::NavigatorFactoryInterface=ASR::Navigators::NavigatorFactory.new)-class-method","html_id":"new(navigator_factory:ASR::Navigators::NavigatorFactoryInterface=ASR::Navigators::NavigatorFactory.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"navigator_factory","doc":null,"default_value":"ASR::Navigators::NavigatorFactory.new","external_name":"navigator_factory","restriction":"ASR::Navigators::NavigatorFactoryInterface"}],"args_string":"(navigator_factory : ASR::Navigators::NavigatorFactoryInterface = <span class=\"t\">ASR</span><span class=\"t\">::</span><span class=\"t\">Navigators</span><span class=\"t\">::</span><span class=\"t\">NavigatorFactory</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/serializer.cr#L28","def":{"name":"new","args":[{"name":"navigator_factory","doc":null,"default_value":"ASR::Navigators::NavigatorFactory.new","external_name":"navigator_factory","restriction":"ASR::Navigators::NavigatorFactoryInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(navigator_factory)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"deserialize(type:_,input_data:String|IO,format:ASR::Format|String,context:ASR::DeserializationContext=ASR::DeserializationContext.new)-instance-method","html_id":"deserialize(type:_,input_data:String|IO,format:ASR::Format|String,context:ASR::DeserializationContext=ASR::DeserializationContext.new)-instance-method","name":"deserialize","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"_"},{"name":"input_data","doc":null,"default_value":"","external_name":"input_data","restriction":"String | IO"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"ASR::Format | String"},{"name":"context","doc":null,"default_value":"ASR::DeserializationContext.new","external_name":"context","restriction":"ASR::DeserializationContext"}],"args_string":"(type : _, input_data : String | IO, format : ASR::Format | String, context : ASR::DeserializationContext = <span class=\"t\">ASR</span><span class=\"t\">::</span><span class=\"t\">DeserializationContext</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/serializer.cr#L31","def":{"name":"deserialize","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"_"},{"name":"input_data","doc":null,"default_value":"","external_name":"input_data","restriction":"String | IO"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"ASR::Format | String"},{"name":"context","doc":null,"default_value":"ASR::DeserializationContext.new","external_name":"context","restriction":"ASR::DeserializationContext"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"context.init\nvisitor = (self.get_deserialization_visitor_class(format)).new\nnavigator = @navigator_factory.get_deserialization_navigator(visitor, context)\nvisitor.navigator = navigator\nnavigator.accept(type, visitor.prepare(input_data))\n"}},{"id":"serialize(data:_,format:ASR::Format|String,io:IO,context:ASR::SerializationContext=ASR::SerializationContext.new,**named_args):Nil-instance-method","html_id":"serialize(data:_,format:ASR::Format|String,io:IO,context:ASR::SerializationContext=ASR::SerializationContext.new,**named_args):Nil-instance-method","name":"serialize","doc":"Serializes the provided *data* into *format* writing it to the provided *io*, optionally with the provided *context*.=","summary":"<p>Serializes the provided <em>data</em> into <em>format</em> writing it to the provided <em>io</em>, optionally with the provided <em>context</em>.=</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"ASR::Format | String"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"context","doc":null,"default_value":"ASR::SerializationContext.new","external_name":"context","restriction":"ASR::SerializationContext"}],"args_string":"(data : _, format : ASR::Format | String, io : IO, context : ASR::SerializationContext = <span class=\"t\">ASR</span><span class=\"t\">::</span><span class=\"t\">SerializationContext</span>.<span class=\"k\">new</span>, **named_args) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/serializer.cr#L51","def":{"name":"serialize","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"ASR::Format | String"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"context","doc":null,"default_value":"ASR::SerializationContext.new","external_name":"context","restriction":"ASR::SerializationContext"}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"context.init\nvisitor = (self.get_serialization_visitor_class(format)).new(io, named_args)\nnavigator = @navigator_factory.get_serialization_navigator(visitor, context)\nvisitor.navigator = navigator\nvisitor.prepare\nnavigator.accept(data)\nvisitor.finish\n"}},{"id":"serialize(data:_,format:ASR::Format|String,context:ASR::SerializationContext=ASR::SerializationContext.new,**named_args):String-instance-method","html_id":"serialize(data:_,format:ASR::Format|String,context:ASR::SerializationContext=ASR::SerializationContext.new,**named_args):String-instance-method","name":"serialize","doc":"Serializes the provided *data* into *format*, optionally with the provided *context*.","summary":"<p>Serializes the provided <em>data</em> into <em>format</em>, optionally with the provided <em>context</em>.</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"ASR::Format | String"},{"name":"context","doc":null,"default_value":"ASR::SerializationContext.new","external_name":"context","restriction":"ASR::SerializationContext"}],"args_string":"(data : _, format : ASR::Format | String, context : ASR::SerializationContext = <span class=\"t\">ASR</span><span class=\"t\">::</span><span class=\"t\">SerializationContext</span>.<span class=\"k\">new</span>, **named_args) : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/serializer.cr#L44","def":{"name":"serialize","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"ASR::Format | String"},{"name":"context","doc":null,"default_value":"ASR::SerializationContext.new","external_name":"context","restriction":"ASR::SerializationContext"}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"String.build do |str|\n  serialize(data, format, str, context, **named_args)\nend"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/SerializerInterface","path":"Athena/Serializer/SerializerInterface.html","kind":"module","full_name":"Athena::Serializer::SerializerInterface","name":"SerializerInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/serializer_interface.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/serializer_interface.cr#L2"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Serializer/Serializer","kind":"struct","full_name":"Athena::Serializer::Serializer","name":"Serializer"}],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":"The main entrypoint of `Athena::Serializer`.","summary":"<p>The main entrypoint of <code><a href=\"../../Athena/Serializer.html\">Athena::Serializer</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"deserialize(type:ASR::Model.class,data:String|IO,format:ASR::Format|String,context:ASR::DeserializationContext=ASR::DeserializationContext.new)-instance-method","html_id":"deserialize(type:ASR::Model.class,data:String|IO,format:ASR::Format|String,context:ASR::DeserializationContext=ASR::DeserializationContext.new)-instance-method","name":"deserialize","doc":"Deserializes the provided *input_data* in the provided *format* into an instance of *type*, optionally with the provided *context*.","summary":"<p>Deserializes the provided <em>input_data</em> in the provided <em>format</em> into an instance of <em>type</em>, optionally with the provided <em>context</em>.</p>","abstract":true,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"ASR::Model.class"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String | IO"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"ASR::Format | String"},{"name":"context","doc":null,"default_value":"ASR::DeserializationContext.new","external_name":"context","restriction":"ASR::DeserializationContext"}],"args_string":"(type : <span class=\"t\">ASR</span><span class=\"t\">::</span><span class=\"t\">Model</span>.<span class=\"k\">class</span>, data : String | IO, format : ASR::Format | String, context : ASR::DeserializationContext = <span class=\"t\">ASR</span><span class=\"t\">::</span><span class=\"t\">DeserializationContext</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/serializer_interface.cr#L4","def":{"name":"deserialize","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"ASR::Model.class"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String | IO"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"ASR::Format | String"},{"name":"context","doc":null,"default_value":"ASR::DeserializationContext.new","external_name":"context","restriction":"ASR::DeserializationContext"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"serialize(data:_,format:ASR::Format|String,io:IO,context:ASR::SerializationContext=ASR::SerializationContext.new,**named_args):Nil-instance-method","html_id":"serialize(data:_,format:ASR::Format|String,io:IO,context:ASR::SerializationContext=ASR::SerializationContext.new,**named_args):Nil-instance-method","name":"serialize","doc":"Serializes the provided *data* into *format* writing it to the provided *io*, optionally with the provided *context*.=","summary":"<p>Serializes the provided <em>data</em> into <em>format</em> writing it to the provided <em>io</em>, optionally with the provided <em>context</em>.=</p>","abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"ASR::Format | String"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"context","doc":null,"default_value":"ASR::SerializationContext.new","external_name":"context","restriction":"ASR::SerializationContext"}],"args_string":"(data : _, format : ASR::Format | String, io : IO, context : ASR::SerializationContext = <span class=\"t\">ASR</span><span class=\"t\">::</span><span class=\"t\">SerializationContext</span>.<span class=\"k\">new</span>, **named_args) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/serializer_interface.cr#L10","def":{"name":"serialize","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"ASR::Format | String"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"context","doc":null,"default_value":"ASR::SerializationContext.new","external_name":"context","restriction":"ASR::SerializationContext"}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"serialize(data:_,format:ASR::Format|String,context:ASR::SerializationContext=ASR::SerializationContext.new,**named_args):String-instance-method","html_id":"serialize(data:_,format:ASR::Format|String,context:ASR::SerializationContext=ASR::SerializationContext.new,**named_args):String-instance-method","name":"serialize","doc":"Serializes the provided *data* into *format*, optionally with the provided *context*.","summary":"<p>Serializes the provided <em>data</em> into <em>format</em>, optionally with the provided <em>context</em>.</p>","abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"ASR::Format | String"},{"name":"context","doc":null,"default_value":"ASR::SerializationContext.new","external_name":"context","restriction":"ASR::SerializationContext"}],"args_string":"(data : _, format : ASR::Format | String, context : ASR::SerializationContext = <span class=\"t\">ASR</span><span class=\"t\">::</span><span class=\"t\">SerializationContext</span>.<span class=\"k\">new</span>, **named_args) : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/serializer_interface.cr#L7","def":{"name":"serialize","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"ASR::Format | String"},{"name":"context","doc":null,"default_value":"ASR::SerializationContext.new","external_name":"context","restriction":"ASR::SerializationContext"}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Visitors","path":"Athena/Serializer/Visitors.html","kind":"module","full_name":"Athena::Serializer::Visitors","name":"Visitors","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/visitors/deserialization_visitor_interface.cr","line_number":1,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/deserialization_visitor_interface.cr#L1"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Serializer/Visitors/DeserializationVisitor","path":"Athena/Serializer/Visitors/DeserializationVisitor.html","kind":"class","full_name":"Athena::Serializer::Visitors::DeserializationVisitor","name":"DeserializationVisitor","abstract":true,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Athena/Serializer/Visitors/DeserializationVisitorInterface","kind":"module","full_name":"Athena::Serializer::Visitors::DeserializationVisitorInterface","name":"DeserializationVisitorInterface"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-serializer/src/visitors/deserialization_visitor.cr","line_number":4,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/deserialization_visitor.cr#L4"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Serializer/Visitors/DeserializationVisitorInterface","kind":"module","full_name":"Athena::Serializer::Visitors::DeserializationVisitorInterface","name":"DeserializationVisitorInterface"}],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Serializer/Visitors/JSONDeserializationVisitor","kind":"class","full_name":"Athena::Serializer::Visitors::JSONDeserializationVisitor","name":"JSONDeserializationVisitor"},{"html_id":"athena/Athena/Serializer/Visitors/YAMLDeserializationVisitor","kind":"class","full_name":"Athena::Serializer::Visitors::YAMLDeserializationVisitor","name":"YAMLDeserializationVisitor"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Visitors","kind":"module","full_name":"Athena::Serializer::Visitors","name":"Visitors"},"doc":"Implement deserialization logic based on `ASR::Any` common to all formats.","summary":"<p>Implement deserialization logic based on <code><a href=\"../../../Athena/Serializer/Any.html\">ASR::Any</a></code> common to all formats.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"navigator:Athena::Serializer::Navigators::DeserializationNavigatorInterface-instance-method","html_id":"navigator:Athena::Serializer::Navigators::DeserializationNavigatorInterface-instance-method","name":"navigator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Athena::Serializer::Navigators::DeserializationNavigatorInterface","source_link":null,"def":{"name":"navigator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Athena::Serializer::Navigators::DeserializationNavigatorInterface","visibility":"Public","body":"if (value = @navigator).nil?\n  ::raise(NilAssertionError.new(\"Athena::Serializer::Visitors::DeserializationVisitor#navigator cannot be nil\"))\nelse\n  value\nend"}},{"id":"navigator=(navigator:Athena::Serializer::Navigators::DeserializationNavigatorInterface)-instance-method","html_id":"navigator=(navigator:Athena::Serializer::Navigators::DeserializationNavigatorInterface)-instance-method","name":"navigator=","doc":null,"summary":null,"abstract":false,"args":[{"name":"navigator","doc":null,"default_value":"","external_name":"navigator","restriction":"Athena::Serializer::Navigators::DeserializationNavigatorInterface"}],"args_string":"(navigator : Athena::Serializer::Navigators::DeserializationNavigatorInterface)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/deserialization_visitor.cr#L7","def":{"name":"navigator=","args":[{"name":"navigator","doc":null,"default_value":"","external_name":"navigator","restriction":"Athena::Serializer::Navigators::DeserializationNavigatorInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@navigator = navigator"}},{"id":"navigator?:Athena::Serializer::Navigators::DeserializationNavigatorInterface?-instance-method","html_id":"navigator?:Athena::Serializer::Navigators::DeserializationNavigatorInterface?-instance-method","name":"navigator?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Athena::Serializer::Navigators::DeserializationNavigatorInterface?","source_link":null,"def":{"name":"navigator?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Athena::Serializer::Navigators::DeserializationNavigatorInterface | ::Nil","visibility":"Public","body":"@navigator"}},{"id":"visit(type:Nil.class,data:ASR::Any):Nil-instance-method","html_id":"visit(type:Nil.class,data:ASR::Any):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Nil.class"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"args_string":"(type : <span class=\"t\">Nil</span>.<span class=\"k\">class</span>, data : ASR::Any) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/deserialization_visitor.cr#L9","def":{"name":"visit","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Nil.class"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"visit(type:_,data:ASR::Any)-instance-method","html_id":"visit(type:_,data:ASR::Any)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"_"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"args_string":"(type : _, data : ASR::Any)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/deserialization_visitor.cr#L12","def":{"name":"visit","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"_"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"type.deserialize(self, data)"}},{"id":"visit(type:_,data:_)-instance-method","html_id":"visit(type:_,data:_)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"_"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"}],"args_string":"(type : _, data : _)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/deserialization_visitor.cr#L16","def":{"name":"visit","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"_"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"data"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Visitors/DeserializationVisitorInterface","path":"Athena/Serializer/Visitors/DeserializationVisitorInterface.html","kind":"module","full_name":"Athena::Serializer::Visitors::DeserializationVisitorInterface","name":"DeserializationVisitorInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/visitors/deserialization_visitor_interface.cr","line_number":1,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/deserialization_visitor_interface.cr#L1"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Serializer/Visitors/DeserializationVisitor","kind":"class","full_name":"Athena::Serializer::Visitors::DeserializationVisitor","name":"DeserializationVisitor"}],"namespace":{"html_id":"athena/Athena/Serializer/Visitors","kind":"module","full_name":"Athena::Serializer::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"prepare(data:IO|String):ASR::Any-instance-method","html_id":"prepare(data:IO|String):ASR::Any-instance-method","name":"prepare","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"IO | String"}],"args_string":"(data : IO | String) : ASR::Any","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/deserialization_visitor_interface.cr#L2","def":{"name":"prepare","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"IO | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ASR::Any","visibility":"Public","body":""}},{"id":"visit(type:Nil.class,data:ASR::Any):Nil-instance-method","html_id":"visit(type:Nil.class,data:ASR::Any):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Nil.class"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"args_string":"(type : <span class=\"t\">Nil</span>.<span class=\"k\">class</span>, data : ASR::Any) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/deserialization_visitor_interface.cr#L3","def":{"name":"visit","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Nil.class"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"visit(type:_,data:ASR::Any)-instance-method","html_id":"visit(type:_,data:ASR::Any)-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"_"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"args_string":"(type : _, data : ASR::Any)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/deserialization_visitor_interface.cr#L4","def":{"name":"visit","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"_"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"visit(type:_,data:_)-instance-method","html_id":"visit(type:_,data:_)-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"_"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"}],"args_string":"(type : _, data : _)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/deserialization_visitor_interface.cr#L5","def":{"name":"visit","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"_"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Visitors/JSONDeserializationVisitor","path":"Athena/Serializer/Visitors/JSONDeserializationVisitor.html","kind":"class","full_name":"Athena::Serializer::Visitors::JSONDeserializationVisitor","name":"JSONDeserializationVisitor","abstract":false,"superclass":{"html_id":"athena/Athena/Serializer/Visitors/DeserializationVisitor","kind":"class","full_name":"Athena::Serializer::Visitors::DeserializationVisitor","name":"DeserializationVisitor"},"ancestors":[{"html_id":"athena/Athena/Serializer/Visitors/DeserializationVisitor","kind":"class","full_name":"Athena::Serializer::Visitors::DeserializationVisitor","name":"DeserializationVisitor"},{"html_id":"athena/Athena/Serializer/Visitors/DeserializationVisitorInterface","kind":"module","full_name":"Athena::Serializer::Visitors::DeserializationVisitorInterface","name":"DeserializationVisitorInterface"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-serializer/src/visitors/json_deserialization_visitor.cr","line_number":1,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/json_deserialization_visitor.cr#L1"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Visitors","kind":"module","full_name":"Athena::Serializer::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"prepare(input:IO|String):ASR::Any-instance-method","html_id":"prepare(input:IO|String):ASR::Any-instance-method","name":"prepare","doc":null,"summary":null,"abstract":false,"args":[{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"IO | String"}],"args_string":"(input : IO | String) : ASR::Any","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/json_deserialization_visitor.cr#L2","def":{"name":"prepare","args":[{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"IO | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ASR::Any","visibility":"Public","body":"JSON.parse(input)"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Visitors/JSONSerializationVisitor","path":"Athena/Serializer/Visitors/JSONSerializationVisitor.html","kind":"class","full_name":"Athena::Serializer::Visitors::JSONSerializationVisitor","name":"JSONSerializationVisitor","abstract":false,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Athena/Serializer/Visitors/SerializationVisitorInterface","kind":"module","full_name":"Athena::Serializer::Visitors::SerializationVisitorInterface","name":"SerializationVisitorInterface"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-serializer/src/visitors/json_serialization_visitor.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/json_serialization_visitor.cr#L3"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Serializer/Visitors/SerializationVisitorInterface","kind":"module","full_name":"Athena::Serializer::Visitors::SerializationVisitorInterface","name":"SerializationVisitorInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Visitors","kind":"module","full_name":"Athena::Serializer::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(io:IO,named_args:NamedTuple)-class-method","html_id":"new(io:IO,named_args:NamedTuple)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":"NamedTuple"}],"args_string":"(io : IO, named_args : NamedTuple)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/json_serialization_visitor.cr#L8","def":{"name":"new","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(io, named_args)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"finish:Nil-instance-method","html_id":"finish:Nil-instance-method","name":"finish","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/json_serialization_visitor.cr#L19","def":{"name":"finish","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.end_document"}},{"id":"navigator:Athena::Serializer::Navigators::SerializationNavigatorInterface-instance-method","html_id":"navigator:Athena::Serializer::Navigators::SerializationNavigatorInterface-instance-method","name":"navigator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Athena::Serializer::Navigators::SerializationNavigatorInterface","source_link":null,"def":{"name":"navigator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Athena::Serializer::Navigators::SerializationNavigatorInterface","visibility":"Public","body":"if (value = @navigator).nil?\n  ::raise(NilAssertionError.new(\"Athena::Serializer::Visitors::JSONSerializationVisitor#navigator cannot be nil\"))\nelse\n  value\nend"}},{"id":"navigator=(navigator:Athena::Serializer::Navigators::SerializationNavigatorInterface)-instance-method","html_id":"navigator=(navigator:Athena::Serializer::Navigators::SerializationNavigatorInterface)-instance-method","name":"navigator=","doc":null,"summary":null,"abstract":false,"args":[{"name":"navigator","doc":null,"default_value":"","external_name":"navigator","restriction":"Athena::Serializer::Navigators::SerializationNavigatorInterface"}],"args_string":"(navigator : Athena::Serializer::Navigators::SerializationNavigatorInterface)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/json_serialization_visitor.cr#L6","def":{"name":"navigator=","args":[{"name":"navigator","doc":null,"default_value":"","external_name":"navigator","restriction":"Athena::Serializer::Navigators::SerializationNavigatorInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@navigator = navigator"}},{"id":"navigator?:Athena::Serializer::Navigators::SerializationNavigatorInterface?-instance-method","html_id":"navigator?:Athena::Serializer::Navigators::SerializationNavigatorInterface?-instance-method","name":"navigator?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Athena::Serializer::Navigators::SerializationNavigatorInterface?","source_link":null,"def":{"name":"navigator?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Athena::Serializer::Navigators::SerializationNavigatorInterface | ::Nil","visibility":"Public","body":"@navigator"}},{"id":"prepare:Nil-instance-method","html_id":"prepare:Nil-instance-method","name":"prepare","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/json_serialization_visitor.cr#L15","def":{"name":"prepare","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.start_document"}},{"id":"visit(data:ASR::Any):Nil-instance-method","html_id":"visit(data:ASR::Any):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"args_string":"(data : ASR::Any) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/json_serialization_visitor.cr#L70","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"visit(data.raw)"}},{"id":"visit(data:ASR::Model):Nil-instance-method","html_id":"visit(data:ASR::Model):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Model"}],"args_string":"(data : ASR::Model) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/json_serialization_visitor.cr#L50","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Model"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"navigator.accept(data)"}},{"id":"visit(data:UUID):Nil-instance-method","html_id":"visit(data:UUID):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"UUID"}],"args_string":"(data : UUID) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/json_serialization_visitor.cr#L82","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"UUID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"visit(data.to_s)"}},{"id":"visit(data:Enum):Nil-instance-method","html_id":"visit(data:Enum):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Enum"}],"args_string":"(data : Enum) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/json_serialization_visitor.cr#L78","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Enum"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"visit(data.value)"}},{"id":"visit(data:Time):Nil-instance-method","html_id":"visit(data:Time):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Time"}],"args_string":"(data : Time) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/json_serialization_visitor.cr#L74","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"visit(data.to_rfc3339)"}},{"id":"visit(data:Enumerable):Nil-instance-method","html_id":"visit(data:Enumerable):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Enumerable"}],"args_string":"(data : Enumerable) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/json_serialization_visitor.cr#L64","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Enumerable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.array do\n  data.each do |v|\n    visit(v)\n  end\nend"}},{"id":"visit(data:Hash|NamedTuple):Nil-instance-method","html_id":"visit(data:Hash|NamedTuple):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"}],"args_string":"(data : Hash | NamedTuple) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/json_serialization_visitor.cr#L54","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.object do\n  data.each do |key, value|\n    @builder.field(key.to_s) do\n      visit(value)\n    end\n  end\nend"}},{"id":"visit(data:Bool):Nil-instance-method","html_id":"visit(data:Bool):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bool"}],"args_string":"(data : Bool) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/json_serialization_visitor.cr#L46","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.bool(data)"}},{"id":"visit(data:Number):Nil-instance-method","html_id":"visit(data:Number):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Number"}],"args_string":"(data : Number) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/json_serialization_visitor.cr#L42","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.number(data)"}},{"id":"visit(data:String|Symbol):Nil-instance-method","html_id":"visit(data:String|Symbol):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String | Symbol"}],"args_string":"(data : String | Symbol) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/json_serialization_visitor.cr#L38","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String | Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.string(data)"}},{"id":"visit(data:Nil):Nil-instance-method","html_id":"visit(data:Nil):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Nil"}],"args_string":"(data : Nil) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/json_serialization_visitor.cr#L34","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.null"}},{"id":"visit(properties:Array(PropertyMetadataBase)):Nil-instance-method","html_id":"visit(properties:Array(PropertyMetadataBase)):Nil-instance-method","name":"visit","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"properties","doc":null,"default_value":"","external_name":"properties","restriction":"Array(PropertyMetadataBase)"}],"args_string":"(properties : Array(PropertyMetadataBase)) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/json_serialization_visitor.cr#L24","def":{"name":"visit","args":[{"name":"properties","doc":null,"default_value":"","external_name":"properties","restriction":"Array(PropertyMetadataBase)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.object do\n  properties.each do |prop|\n    @builder.field(prop.external_name) do\n      visit(prop.value)\n    end\n  end\nend"}},{"id":"visit(data:_):Nil-instance-method","html_id":"visit(data:_):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"}],"args_string":"(data : _) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/json_serialization_visitor.cr#L86","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.null"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Visitors/SerializationVisitorInterface","path":"Athena/Serializer/Visitors/SerializationVisitorInterface.html","kind":"module","full_name":"Athena::Serializer::Visitors::SerializationVisitorInterface","name":"SerializationVisitorInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-serializer/src/visitors/serialization_visitor_interface.cr","line_number":1,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/serialization_visitor_interface.cr#L1"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Serializer/Visitors/JSONSerializationVisitor","kind":"class","full_name":"Athena::Serializer::Visitors::JSONSerializationVisitor","name":"JSONSerializationVisitor"},{"html_id":"athena/Athena/Serializer/Visitors/YAMLSerializationVisitor","kind":"class","full_name":"Athena::Serializer::Visitors::YAMLSerializationVisitor","name":"YAMLSerializationVisitor"}],"namespace":{"html_id":"athena/Athena/Serializer/Visitors","kind":"module","full_name":"Athena::Serializer::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"finish:Nil-instance-method","html_id":"finish:Nil-instance-method","name":"finish","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/serialization_visitor_interface.cr#L3","def":{"name":"finish","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"prepare:Nil-instance-method","html_id":"prepare:Nil-instance-method","name":"prepare","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/serialization_visitor_interface.cr#L2","def":{"name":"prepare","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"visit(data:Array(ASR::PropertyMetadataBase)):Nil-instance-method","html_id":"visit(data:Array(ASR::PropertyMetadataBase)):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Array(ASR::PropertyMetadataBase)"}],"args_string":"(data : Array(ASR::PropertyMetadataBase)) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/serialization_visitor_interface.cr#L5","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Array(ASR::PropertyMetadataBase)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"visit(data:Bool):Nil-instance-method","html_id":"visit(data:Bool):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bool"}],"args_string":"(data : Bool) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/serialization_visitor_interface.cr#L6","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"visit(data:Enum):Nil-instance-method","html_id":"visit(data:Enum):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Enum"}],"args_string":"(data : Enum) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/serialization_visitor_interface.cr#L7","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Enum"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"visit(data:Hash):Nil-instance-method","html_id":"visit(data:Hash):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash"}],"args_string":"(data : Hash) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/serialization_visitor_interface.cr#L9","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"visit(data:Enumerable):Nil-instance-method","html_id":"visit(data:Enumerable):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Enumerable"}],"args_string":"(data : Enumerable) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/serialization_visitor_interface.cr#L8","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Enumerable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"visit(data:NamedTuple):Nil-instance-method","html_id":"visit(data:NamedTuple):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"NamedTuple"}],"args_string":"(data : NamedTuple) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/serialization_visitor_interface.cr#L11","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"visit(data:Nil):Nil-instance-method","html_id":"visit(data:Nil):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Nil"}],"args_string":"(data : Nil) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/serialization_visitor_interface.cr#L12","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"visit(data:Number):Nil-instance-method","html_id":"visit(data:Number):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Number"}],"args_string":"(data : Number) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/serialization_visitor_interface.cr#L13","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"visit(data:String):Nil-instance-method","html_id":"visit(data:String):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String"}],"args_string":"(data : String) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/serialization_visitor_interface.cr#L15","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"visit(data:Symbol):Nil-instance-method","html_id":"visit(data:Symbol):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Symbol"}],"args_string":"(data : Symbol) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/serialization_visitor_interface.cr#L16","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"visit(data:Time):Nil-instance-method","html_id":"visit(data:Time):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Time"}],"args_string":"(data : Time) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/serialization_visitor_interface.cr#L17","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"visit(data:UUID):Nil-instance-method","html_id":"visit(data:UUID):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"UUID"}],"args_string":"(data : UUID) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/serialization_visitor_interface.cr#L18","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"UUID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"visit(data:ASR::Any):Nil-instance-method","html_id":"visit(data:ASR::Any):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"args_string":"(data : ASR::Any) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/serialization_visitor_interface.cr#L10","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"visit(data:ASR::Model):Nil-instance-method","html_id":"visit(data:ASR::Model):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Model"}],"args_string":"(data : ASR::Model) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/serialization_visitor_interface.cr#L14","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Model"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Visitors/YAMLDeserializationVisitor","path":"Athena/Serializer/Visitors/YAMLDeserializationVisitor.html","kind":"class","full_name":"Athena::Serializer::Visitors::YAMLDeserializationVisitor","name":"YAMLDeserializationVisitor","abstract":false,"superclass":{"html_id":"athena/Athena/Serializer/Visitors/DeserializationVisitor","kind":"class","full_name":"Athena::Serializer::Visitors::DeserializationVisitor","name":"DeserializationVisitor"},"ancestors":[{"html_id":"athena/Athena/Serializer/Visitors/DeserializationVisitor","kind":"class","full_name":"Athena::Serializer::Visitors::DeserializationVisitor","name":"DeserializationVisitor"},{"html_id":"athena/Athena/Serializer/Visitors/DeserializationVisitorInterface","kind":"module","full_name":"Athena::Serializer::Visitors::DeserializationVisitorInterface","name":"DeserializationVisitorInterface"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-serializer/src/visitors/yaml_deserialization_visitor.cr","line_number":1,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/yaml_deserialization_visitor.cr#L1"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Visitors","kind":"module","full_name":"Athena::Serializer::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"prepare(input:IO|String):ASR::Any-instance-method","html_id":"prepare(input:IO|String):ASR::Any-instance-method","name":"prepare","doc":null,"summary":null,"abstract":false,"args":[{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"IO | String"}],"args_string":"(input : IO | String) : ASR::Any","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/yaml_deserialization_visitor.cr#L2","def":{"name":"prepare","args":[{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"IO | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ASR::Any","visibility":"Public","body":"YAML.parse(input)"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Visitors/YAMLSerializationVisitor","path":"Athena/Serializer/Visitors/YAMLSerializationVisitor.html","kind":"class","full_name":"Athena::Serializer::Visitors::YAMLSerializationVisitor","name":"YAMLSerializationVisitor","abstract":false,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Athena/Serializer/Visitors/SerializationVisitorInterface","kind":"module","full_name":"Athena::Serializer::Visitors::SerializationVisitorInterface","name":"SerializationVisitorInterface"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-serializer/src/visitors/yaml_serialization_visitor.cr","line_number":1,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/yaml_serialization_visitor.cr#L1"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Serializer/Visitors/SerializationVisitorInterface","kind":"module","full_name":"Athena::Serializer::Visitors::SerializationVisitorInterface","name":"SerializationVisitorInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Visitors","kind":"module","full_name":"Athena::Serializer::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(io:IO,named_args:NamedTuple)-class-method","html_id":"new(io:IO,named_args:NamedTuple)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":"NamedTuple"}],"args_string":"(io : IO, named_args : NamedTuple)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/yaml_serialization_visitor.cr#L6","def":{"name":"new","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(io, named_args)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"finish:Nil-instance-method","html_id":"finish:Nil-instance-method","name":"finish","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/yaml_serialization_visitor.cr#L15","def":{"name":"finish","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.end_document\n@builder.end_stream\n"}},{"id":"navigator:Athena::Serializer::Navigators::SerializationNavigatorInterface-instance-method","html_id":"navigator:Athena::Serializer::Navigators::SerializationNavigatorInterface-instance-method","name":"navigator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Athena::Serializer::Navigators::SerializationNavigatorInterface","source_link":null,"def":{"name":"navigator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Athena::Serializer::Navigators::SerializationNavigatorInterface","visibility":"Public","body":"if (value = @navigator).nil?\n  ::raise(NilAssertionError.new(\"Athena::Serializer::Visitors::YAMLSerializationVisitor#navigator cannot be nil\"))\nelse\n  value\nend"}},{"id":"navigator=(navigator:Athena::Serializer::Navigators::SerializationNavigatorInterface)-instance-method","html_id":"navigator=(navigator:Athena::Serializer::Navigators::SerializationNavigatorInterface)-instance-method","name":"navigator=","doc":null,"summary":null,"abstract":false,"args":[{"name":"navigator","doc":null,"default_value":"","external_name":"navigator","restriction":"Athena::Serializer::Navigators::SerializationNavigatorInterface"}],"args_string":"(navigator : Athena::Serializer::Navigators::SerializationNavigatorInterface)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/yaml_serialization_visitor.cr#L4","def":{"name":"navigator=","args":[{"name":"navigator","doc":null,"default_value":"","external_name":"navigator","restriction":"Athena::Serializer::Navigators::SerializationNavigatorInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@navigator = navigator"}},{"id":"navigator?:Athena::Serializer::Navigators::SerializationNavigatorInterface?-instance-method","html_id":"navigator?:Athena::Serializer::Navigators::SerializationNavigatorInterface?-instance-method","name":"navigator?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Athena::Serializer::Navigators::SerializationNavigatorInterface?","source_link":null,"def":{"name":"navigator?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Athena::Serializer::Navigators::SerializationNavigatorInterface | ::Nil","visibility":"Public","body":"@navigator"}},{"id":"prepare:Nil-instance-method","html_id":"prepare:Nil-instance-method","name":"prepare","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/yaml_serialization_visitor.cr#L10","def":{"name":"prepare","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.start_stream\n@builder.start_document\n"}},{"id":"visit(properties:Array(PropertyMetadataBase)):Nil-instance-method","html_id":"visit(properties:Array(PropertyMetadataBase)):Nil-instance-method","name":"visit","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"properties","doc":null,"default_value":"","external_name":"properties","restriction":"Array(PropertyMetadataBase)"}],"args_string":"(properties : Array(PropertyMetadataBase)) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/yaml_serialization_visitor.cr#L21","def":{"name":"visit","args":[{"name":"properties","doc":null,"default_value":"","external_name":"properties","restriction":"Array(PropertyMetadataBase)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.mapping do\n  properties.each do |prop|\n    @builder.scalar(prop.external_name)\n    visit(prop.value)\n  end\nend"}},{"id":"visit(data:String|Symbol|Number|Bool|Nil):Nil-instance-method","html_id":"visit(data:String|Symbol|Number|Bool|Nil):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String | Symbol | Number | Bool | Nil"}],"args_string":"(data : String | Symbol | Number | Bool | Nil) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/yaml_serialization_visitor.cr#L30","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String | Symbol | Number | Bool | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.scalar(data)"}},{"id":"visit(data:Hash|NamedTuple):Nil-instance-method","html_id":"visit(data:Hash|NamedTuple):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"}],"args_string":"(data : Hash | NamedTuple) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/yaml_serialization_visitor.cr#L38","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.mapping do\n  data.each do |key, value|\n    @builder.scalar(key)\n    visit(value)\n  end\nend"}},{"id":"visit(data:Enumerable):Nil-instance-method","html_id":"visit(data:Enumerable):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Enumerable"}],"args_string":"(data : Enumerable) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/yaml_serialization_visitor.cr#L47","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Enumerable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.sequence do\n  data.each do |v|\n    visit(v)\n  end\nend"}},{"id":"visit(data:Time):Nil-instance-method","html_id":"visit(data:Time):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Time"}],"args_string":"(data : Time) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/yaml_serialization_visitor.cr#L57","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"visit(data.to_rfc3339)"}},{"id":"visit(data:Enum):Nil-instance-method","html_id":"visit(data:Enum):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Enum"}],"args_string":"(data : Enum) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/yaml_serialization_visitor.cr#L61","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Enum"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"visit(data.value)"}},{"id":"visit(data:UUID):Nil-instance-method","html_id":"visit(data:UUID):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"UUID"}],"args_string":"(data : UUID) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/yaml_serialization_visitor.cr#L65","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"UUID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"visit(data.to_s)"}},{"id":"visit(data:ASR::Model):Nil-instance-method","html_id":"visit(data:ASR::Model):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Model"}],"args_string":"(data : ASR::Model) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/yaml_serialization_visitor.cr#L34","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Model"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"navigator.accept(data)"}},{"id":"visit(data:ASR::Any):Nil-instance-method","html_id":"visit(data:ASR::Any):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"args_string":"(data : ASR::Any) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/yaml_serialization_visitor.cr#L53","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"visit(data.raw)"}},{"id":"visit(data:_):Nil-instance-method","html_id":"visit(data:_):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"}],"args_string":"(data : _) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-serializer/src/visitors/yaml_serialization_visitor.cr#L69","def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.scalar(nil)"}}],"macros":[],"types":[]}]}]},{"html_id":"athena/Athena/Spec","path":"Athena/Spec.html","kind":"module","full_name":"Athena::Spec","name":"Spec","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-spec/src/athena-spec.cr","line_number":8,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-spec/src/athena-spec.cr#L8"},{"filename":"lib/athena-spec/src/methods.cr","line_number":9,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-spec/src/methods.cr#L9"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena","kind":"module","full_name":"Athena","name":"Athena"},"doc":"A set of common [Spec](https://crystal-lang.org/api/Spec.html) compliant testing utilities/types.","summary":"<p>A set of common <a href=\"https://crystal-lang.org/api/Spec.html\" target=\"_blank\">Spec</a> compliant testing utilities/types.</p>","class_methods":[{"id":"run_all:Nil-class-method","html_id":"run_all:Nil-class-method","name":"run_all","doc":"Runs all `ASPEC::TestCase`s.\n\nIs equivalent to manually calling `.run` on each test case.","summary":"<p>Runs all <code><a href=\"../Athena/Spec/TestCase.html\">ASPEC::TestCase</a></code>s.</p>","abstract":false,"args":[],"args_string":" : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-spec/src/athena-spec.cr#L12","def":{"name":"run_all","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"{% for unit_test in ASPEC::TestCase.all_subclasses.reject(&.abstract?) %}\n      {{ unit_test.id }}.run\n    {% end %}"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Spec/Methods","path":"Athena/Spec/Methods.html","kind":"module","full_name":"Athena::Spec::Methods","name":"Methods","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-spec/src/methods.cr","line_number":9,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-spec/src/methods.cr#L9"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"athena/Athena/Spec/Methods","kind":"module","full_name":"Athena::Spec::Methods","name":"Methods"}],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Spec/TestCase","kind":"struct","full_name":"Athena::Spec::TestCase","name":"TestCase"}],"namespace":{"html_id":"athena/Athena/Spec","kind":"module","full_name":"Athena::Spec","name":"Spec"},"doc":"Namespace for common/helpful testing methods.\n\nThis module can be included into your `spec_helper` in order\nto allow your specs to use them all.  This module is also\nincluded into `ASPEC::TestCase` by default to allow using them\nwithin your unit tests as well.\n\nMay be reopened to add additional application specific helpers.","summary":"<p>Namespace for common/helpful testing methods.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"assert_error(file_path:String,message:String,*,prefix:String=&quot;spec/&quot;):Nil-instance-method","html_id":"assert_error(file_path:String,message:String,*,prefix:String=&quot;spec/&quot;):Nil-instance-method","name":"assert_error","doc":"Runs the Crystal program at the provided *file_path* and asserts it errors with the provided *message*.\nThe main purpose of this method is to test compile time errors.\n\nBy default, *file_path* is assumed to be within `spec/`, but can be customized via the *prefix* named argument.\n\nNOTE:\n\n```\n# ./spec/abstract_class.cr\nabstract class Foo; end\n\nFoo.new\n```\n\n```\n# ./spec/abstract_class_spec.cr\nrequire \"athena-spec\"\n\nASPEC::Methods.assert_error \"abstract_class.cr\", \"can't instantiate abstract class Foo\"\n```","summary":"<p>Runs the Crystal program at the provided <em>file_path</em> and asserts it errors with the provided <em>message</em>.</p>","abstract":false,"args":[{"name":"file_path","doc":null,"default_value":"","external_name":"file_path","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"prefix","doc":null,"default_value":"\"spec/\"","external_name":"prefix","restriction":"String"}],"args_string":"(file_path : String, message : String, *, prefix : String = <span class=\"s\">&quot;spec/&quot;</span>) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-spec/src/methods.cr#L32","def":{"name":"assert_error","args":[{"name":"file_path","doc":null,"default_value":"","external_name":"file_path","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"prefix","doc":null,"default_value":"\"spec/\"","external_name":"prefix","restriction":"String"}],"double_splat":null,"splat_index":2,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"buffer = IO::Memory.new\nresult = Process.run(\"crystal\", [\"run\", \"--no-color\", \"--no-codegen\", \"#{prefix}#{file_path}\"], error: buffer)\nif result.success?\n  fail(buffer.to_s)\nend\nbuffer.to_s.should(contain(message))\nbuffer.close\n"}},{"id":"run_executable(path:String,args:Array(String)=[]ofString,&:String,String,Process::Status->):Nil-instance-method","html_id":"run_executable(path:String,args:Array(String)=[]ofString,&:String,String,Process::Status->):Nil-instance-method","name":"run_executable","doc":"Runs the executable at the given *path*, optionally with the provided *args*.\n\nThe standard output, error output, and status of the execution are yielded.\n\n```\nrequire \"athena-spec\"\n\nASPEC::Methods.run_executable \"/usr/bin/ls\" do |output, error, status|\n  output # => \"docs\\n\" + \"LICENSE\\n\" + \"README.md\\n\" + \"shard.yml\\n\" + \"spec\\n\" + \"src\\n\"\n  error  # => \"\"\n  status # => #<Process::Status:0x7f7bc9befb70 @exit_status=0>\nend\n```","summary":"<p>Runs the executable at the given <em>path</em>, optionally with the provided <em>args</em>.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"args","doc":null,"default_value":"[] of String","external_name":"args","restriction":"Array(String)"}],"args_string":"(path : String, args : Array(String) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span>, & : String, String, Process::Status -> ) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-spec/src/methods.cr#L53","def":{"name":"run_executable","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"args","doc":null,"default_value":"[] of String","external_name":"args","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":3,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(String, String, Process::Status -> )"},"return_type":"Nil","visibility":"Public","body":"run_executable(path, IO::Memory.new, args) do |output_io, error_io, status|\n  yield output_io, error_io, status\nend"}},{"id":"run_executable(path:String,input:IO,args:Array(String)=[]ofString,&:String,String,Process::Status->):Nil-instance-method","html_id":"run_executable(path:String,input:IO,args:Array(String)=[]ofString,&:String,String,Process::Status->):Nil-instance-method","name":"run_executable","doc":"Runs the executable at the given *path*, with the given *input*, optionally with the provided *args*.\n\nThe standard output, error output, and status of the execution are yielded.\n\n```\nrequire \"athena-spec\"\n\ninput = IO::Memory.new %({\"id\":1})\n\nASPEC::Methods.run_executable \"jq\", input, [\".\", \"-c\"] do |output, error, status|\n  output # => \"{\\\"id\\\":1}\\n\"\n  error  # => \"\"\n  status # => #<Process::Status:0x7f26ec698b70 @exit_status=0>\nend\n\ninvalid_input = IO::Memory.new %({\"id\"1})\n\nASPEC::Methods.run_executable \"jq\", invalid_input, [\".\", \"-c\"] do |output, error, status|\n  output # => \"\"\n  error  # => \"parse error: Expected separator between values at line 1, column 7\\n\"\n  status # => #<Process::Status:0x7f0217496900 @exit_status=1024>\nend\n```","summary":"<p>Runs the executable at the given <em>path</em>, with the given <em>input</em>, optionally with the provided <em>args</em>.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"IO"},{"name":"args","doc":null,"default_value":"[] of String","external_name":"args","restriction":"Array(String)"}],"args_string":"(path : String, input : IO, args : Array(String) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span>, & : String, String, Process::Status -> ) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-spec/src/methods.cr#L82","def":{"name":"run_executable","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"},{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"IO"},{"name":"args","doc":null,"default_value":"[] of String","external_name":"args","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":3,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(String, String, Process::Status -> )"},"return_type":"Nil","visibility":"Public","body":"output_io = IO::Memory.new\nerror_io = IO::Memory.new\nstatus = Process.run(path, args, error: error_io, output: output_io, input: input)\nyield output_io.to_s, error_io.to_s, status\n"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Spec/TestCase","path":"Athena/Spec/TestCase.html","kind":"struct","full_name":"Athena::Spec::TestCase","name":"TestCase","abstract":true,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Spec/Methods","kind":"module","full_name":"Athena::Spec::Methods","name":"Methods"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-spec/src/test_case.cr","line_number":147,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-spec/src/test_case.cr#L147"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Spec/Methods","kind":"module","full_name":"Athena::Spec::Methods","name":"Methods"}],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Routing/Spec/WebTestCase","kind":"struct","full_name":"Athena::Routing::Spec::WebTestCase","name":"WebTestCase"},{"html_id":"athena/Athena/Validator/Spec/ConstraintValidatorTestCase","kind":"struct","full_name":"Athena::Validator::Spec::ConstraintValidatorTestCase","name":"ConstraintValidatorTestCase"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Spec","kind":"module","full_name":"Athena::Spec","name":"Spec"},"doc":"`ASPEC::TestCase` provides a [Spec](https://crystal-lang.org/api/Spec.html) compliant\nalternative DSL for creating unit and integration tests.  It allows structuring tests\nin a more OOP fashion, with the main benefits of reusability and extendability.\n\nThis type can be extended to share common testing logic with groups of similar types.\nAny tests defined within a parent will run for each child test case.\n`abstract def`, `super`, and other OOP features can be used as well to reduce duplication.\nSome additional features are also built in, such as the `DataProvider`.\n\nNOTE: This is _NOT_ a standalone testing framework.  Everything boils down to standard `describe`, `it`, and/or `pending` blocks.\n\nA test case consists of a `struct` inheriting from `self`, optionally with an `#initialize` method in order to\ninitialize the state that should be used for each test.\n\nA test is a method that starts with `test_`, where the method name is used as the description.\nFor example, `test_some_method_some_context` becomes `\"some method some context\"`.\nInternally each test method maps to an `it` block.\nAll of the stdlib's `Spec` assertions methods are available, in addition to\n[#pending!](https://crystal-lang.org/api/Spec/Methods.html#pending!%28msg=%22Cannotrunexample%22,file=__FILE__,line=__LINE__%29-instance-method) and\n[#fail](https://crystal-lang.org/api/Spec/Methods.html#fail%28msg,file=__FILE__,line=__LINE__%29-instance-method).\n\nA method may be focused by either prefixing the method name with an `f`, or applying the `Focus` annotation.\n\nA method may be marked pending by either prefixing the method name with a `p`, or applying the `Pending` annotation.\nInternally this maps to a `pending` block.\n\nTags may be applied to a method via the `Tags` annotation.\n\nThe `Tags`, `Focus`, and `Pending` annotations may also be applied to the test case type as well, with a similar affect.\n\n### Example\n\n```\n# Require the stdlib's spec module.\nrequire \"spec\"\n\n# Define a class to test.\nclass Calculator\n  def add(v1, v2)\n    v1 + v2\n  end\n\n  def subtract(v1, v2)\n    raise NotImplementedError.new \"TODO\"\n  end\nend\n\n# An example test case.\nstruct ExampleSpec < ASPEC::TestCase\n  @target : Calculator\n\n  # Initialize the test target along with any dependencies.\n  def initialize : Nil\n    @target = Calculator.new\n  end\n\n  # All of the stdlib's `Spec` methods can be used,\n  # plus any custom methods defined in `ASPEC::Methods`.\n  def test_add : Nil\n    @target.add(1, 2).should eq 3\n  end\n\n  # A pending test.\n  def ptest_substract : Nil\n    @target.subtract(10, 5).should eq 5\n  end\n\n  # Private/protected methods can be used to reduce duplication within the context of single test case.\n  private def helper_method\n    # ...\n  end\nend\n```\n\n## Inheritance\n\nInheritance can be used to build reusable test cases for groups of similar objects\n\n```\nabstract struct SomeTypeTestCase < ASPEC::TestCase\n  # Require children to define a method to get the object.\n  protected abstract def get_object : Calculator\n\n  # Test cases can use the abstract method for tests common to all test cases of this type.\n  def test_common : Nil\n    obj = self.get_object\n\n    # ...\n  end\nend\n\nstruct CalculatorTest < SomeTypeTestCase\n  protected def get_object : Calculator\n    Calculator.new\n  end\n\n  # Additional tests specific to this type.\n  def test_specific : Nil\n    # ...\n  end\nend\n```\n\n## Data Providers\n\nA `DataProvider` can be used to reduce duplication, see the corresponding annotation or more information.\n\n```\nstruct DataProviderTest < ASPEC::TestCase\n  # Data Providers allow reusing a test's multiple times with different input.\n  @[DataProvider(\"get_values\")]\n  def test_squares(value : Int32, expected : Int32) : Nil\n    (value ** 2).should eq expected\n  end\n\n  # Returns a hash where the key represents the name of the test,\n  # and the value is a Tuple of data that should be provided to the test.\n  def get_values : Hash\n    {\n      \"two\"   => {2, 4},\n      \"three\" => {3, 9},\n    }\n  end\nend\n```\n\n```\n# Run all the test cases\nASPEC.run_all # =>\n# ExampleSpec\n#   add\n#   subtract\n#   a custom method name\n# CalculatorTest\n#   common\n#   specific\n# DataProviderTest\n#   squares two\n#   squares three\n#\n# Pending:\n# ExampleSpec subtract\n#\n# Finished in 172 microseconds\n# 7 examples, 0 failures, 0 errors, 1 pending\n```","summary":"<p><code><a href=\"../../Athena/Spec/TestCase.html\">ASPEC::TestCase</a></code> provides a <a href=\"https://crystal-lang.org/api/Spec.html\" target=\"_blank\">Spec</a> compliant alternative DSL for creating unit and integration tests.</p>","class_methods":[{"id":"run:Nil-class-method","html_id":"run:Nil-class-method","name":"run","doc":"Runs the tests contained within `self`.\n\nSee `Athena::Spec.run_all` to run all test cases.","summary":"<p>Runs the tests contained within <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-spec/src/test_case.cr#L253","def":{"name":"run","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"instance = new\n{% if true %}\n      {{ !(!(@type.annotation(Pending))) ? \"pending\".id : \"describe\".id }} {{ @type.name.stringify }}, focus: {{ !(!(@type.annotation(Focus))) }}{% if (tags = @type.annotation(Tags)) %}, tags: {{ tags.args }}{% end %} do\n        before_all do\n          instance.before_all\n        end\n\n        before_each do\n          instance.initialize\n        end\n\n        after_each do\n          instance.tear_down\n        end\n\n        after_all do\n          instance.after_all\n        end\n\n        {% methods = [] of Nil %}\n\n        {% for parent in @type.ancestors.select(&.<(TestCase)) %}\n          {% for method in parent.methods.select do |m|\n  m.name =~ (/^(?:f|p)?test_/)\nend %}\n            {% methods << method %}\n          {% end %}\n        {% end %}\n\n        {% for test in methods + @type.methods.select do |m|\n  m.name =~ (/^(?:f|p)?test_/)\nend %}\n          {% focus = (test.name.starts_with?(\"ftest_\")) || (!(!(test.annotation(Focus)))) %}\n          {% tags = (tags = test.annotation(Tags)) ? tags.args : nil %}\n          {% method = ((test.name.starts_with?(\"ptest_\")) || (!(!(test.annotation(Pending))))) ? \"pending\" : \"it\" %}\n          {% description = (test.name.stringify.gsub(/^(?:f|p)?test_/, \"\")).underscore.gsub(/_/, \" \") %}\n\n          {% if (test.annotations(DataProvider)).empty? %}\n            {{ method.id }} {{ description }}, file: {{ test.filename }}, line: {{ test.line_number }}, end_line: {{ test.end_line_number }}, focus: {{ focus }}, tags: {{ tags }} do\n              instance.{{ test.name.id }}\n            end\n          {% else %}\n            {% for data_provider in test.annotations(DataProvider) %}\n              {% data_provider_method_name = data_provider[0] || (data_provider.raise(\"One or more data provider for test '#{@type}##{test.name.id}' is mising its name.\")) %}\n              {% methods = @type.methods %}\n\n              {% for ancestor in @type.ancestors.select(&.<=(ASPEC::TestCase)) %}\n                {% methods += ancestor.methods %}\n              {% end %}\n\n              {% provider_method_return_type = (methods.find do |__arg2|\n  __arg2.name.stringify == data_provider_method_name\nend.return_type || (raise(\"Data provider '#{@type}##{data_provider_method_name.id}' must have a return type of Hash, NamedTuple, Array, or Tuple.\"))).resolve %}\n\n              {% if (provider_method_return_type == Hash) || (provider_method_return_type == NamedTuple) %}\n                instance.{{ data_provider_method_name.id }}.each do |name, args|\n                  {{ method.id }} \"#{{{ description }}} #{name}\", file: {{ test.filename }}, line: {{ test.line_number }}, end_line: {{ test.end_line_number }}, focus: {{ focus }}, tags: {{ tags }} do\n                    instance.{{ test.name.id }} *args\n                  end\n                end\n              {% else %}{% if (provider_method_return_type == Array) || (provider_method_return_type == Tuple) %}\n                instance.{{ data_provider_method_name.id }}.each_with_index do |args, idx|\n                  {{ method.id }} \"#{{{ description }}} #{idx}\", file: {{ test.filename }}, line: {{ test.line_number }}, end_line: {{ test.end_line_number }}, focus: {{ focus }}, tags: {{ tags }} do\n                    instance.{{ test.name.id }} *args\n                  end\n                end\n              {% else %}\n                {% provider_method.raise(\"Unsupported data provider return type: '#{provider_method.return_type}'\") %}\n              {% end %}{% end %}\n            {% end %}\n          {% end %}\n        {% end %}\n      end\n    {% end %}\n"}}],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Runs before each test.\n\nUsed to create the objects that will be used within the tests.\n\n```\nrequire \"spec\"\nrequire \"athena-spec\"\n\nstruct ExampleSpec < ASpec::TestCase\n  @value : Int32\n\n  def initialize : Nil\n    @value = 1\n  end\n\n  def test_one : Nil\n    @value += 1\n\n    @value # => 2\n  end\n\n  def test_two : Nil\n    @value # => 1\n  end\nend\n\nExampleSpec.run\n```","summary":"<p>Runs before each test.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-spec/src/test_case.cr#L406","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"after_all:Nil-instance-method","html_id":"after_all:Nil-instance-method","name":"after_all","doc":"Runs once after all tests within `self` have been executed.\n\n```\nrequire \"spec\"\nrequire \"athena-spec\"\n\nstruct ExampleSpec < ASPEC::TestCase\n  def after_all : Nil\n    puts \"This prints only once after anything else\"\n  end\n\n  def test_one : Nil\n    true.should be_true\n  end\n\n  def test_two : Nil\n    1.should eq 1\n  end\nend\n\nExampleSpec.run\n```","summary":"<p>Runs once after all tests within <code>self</code> have been executed.</p>","abstract":false,"args":[],"args_string":" : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-spec/src/test_case.cr#L375","def":{"name":"after_all","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"before_all:Nil-instance-method","html_id":"before_all:Nil-instance-method","name":"before_all","doc":"Runs once before any tests within `self` have been executed.\n\nCan be used to initialize objects common to every test,\nbut that do not need to be reset before running each test.\n\n```\nrequire \"spec\"\nrequire \"athena-spec\"\n\nstruct ExampleSpec < ASPEC::TestCase\n  def before_all : Nil\n    puts \"This prints only once before anything else\"\n  end\n\n  def test_one : Nil\n    true.should be_true\n  end\n\n  def test_two : Nil\n    1.should eq 1\n  end\nend\n\nExampleSpec.run\n```","summary":"<p>Runs once before any tests within <code>self</code> have been executed.</p>","abstract":false,"args":[],"args_string":" : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-spec/src/test_case.cr#L350","def":{"name":"before_all","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"tear_down:Nil-instance-method","html_id":"tear_down:Nil-instance-method","name":"tear_down","doc":"Runs after each test.\n\nCan be used to cleanup data in between tests, such as releasing a connection or closing a file.\n\n```\nrequire \"spec\"\nrequire \"athena-spec\"\n\nstruct ExampleSpec < ASPEC::TestCase\n  @file : File\n\n  def initialize : Nil\n    @file = File.new \"./foo.txt\", \"w\"\n  end\n\n  def tear_down : Nil\n    @file.close\n  end\n\n  def test_one : Nil\n    @file.path # => \"./foo.txt\"\n  end\nend\n\nExampleSpec.run\n```","summary":"<p>Runs after each test.</p>","abstract":false,"args":[],"args_string":" : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-spec/src/test_case.cr#L435","def":{"name":"tear_down","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}}],"macros":[],"types":[{"html_id":"athena/Athena/Spec/TestCase/DataProvider","path":"Athena/Spec/TestCase/DataProvider.html","kind":"annotation","full_name":"Athena::Spec::TestCase::DataProvider","name":"DataProvider","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-spec/src/test_case.cr","line_number":248,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-spec/src/test_case.cr#L248"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Spec/TestCase","kind":"struct","full_name":"Athena::Spec::TestCase","name":"TestCase"},"doc":"Tests can be defined with arbitrary arguments.  These arguments are provided by one or more `DataProvider`.\n\nA data provider is a method that returns either a `Hash`, `NamedTuple`, `Array`, or `Tuple`.\n\nNOTE: The method's return type must be set to one of those types.\n\nIf the return type is a `Hash` or `NamedTuple` then it is a keyed provider;\nthe key will be used as part of the description for each test.\n\nIf the return type is an `Array` or `Tuple` it is considered a keyless provider;\nthe index will be used as part of the description for each test.\n\nNOTE: In both cases the value must be a `Tuple`; the values should be an ordered list of the arguments you want to provide to the test.\n\nOne or more `DataProvider` annotations can be applied to a test\nwith a positional argument of the name of the providing methods.\nAn `it` block will be defined for each \"set\" of data.\n\nData providers can be a very powerful tool when combined with inheritance and `abstract def`s.\nA parent test case could define all the testing logic, and child implementations only provide the data.\n\n### Example\n\n```\nrequire \"athena-spec\"\n\nstruct DataProviderTest < ASPEC::TestCase\n  @[DataProvider(\"get_values_hash\")]\n  @[DataProvider(\"get_values_named_tuple\")]\n  def test_squares(value : Int32, expected : Int32) : Nil\n    (value ** 2).should eq expected\n  end\n\n  # A keyed provider using a Hash.\n  def get_values_hash : Hash\n    {\n      \"two\"   => {2, 4},\n      \"three\" => {3, 9},\n    }\n  end\n\n  # A keyed provider using a NamedTuple.\n  def get_values_named_tuple : NamedTuple\n    {\n      four: {4, 16},\n      five: {5, 25},\n    }\n  end\n\n  @[DataProvider(\"get_values_array\")]\n  @[DataProvider(\"get_values_tuple\")]\n  def test_cubes(value : Int32, expected : Int32) : Nil\n    (value ** 3).should eq expected\n  end\n\n  # A keyless provider using an Array.\n  def get_values_array : Array\n    [\n      {2, 8},\n      {3, 27},\n    ]\n  end\n\n  # A keyless provider using a Tuple.\n  def get_values_tuple : Tuple\n    {\n      {4, 64},\n      {5, 125},\n    }\n  end\nend\n\nASPEC.run_all # =>\n# DataProviderTest\n#   squares two\n#   squares three\n#   squares four\n#   squares five\n#   cubes 0\n#   cubes 1\n#   cubes 0\n#   cubes 1\n```","summary":"<p>Tests can be defined with arbitrary arguments.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Spec/TestCase/Focus","path":"Athena/Spec/TestCase/Focus.html","kind":"annotation","full_name":"Athena::Spec::TestCase::Focus","name":"Focus","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-spec/src/test_case.cr","line_number":158,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-spec/src/test_case.cr#L158"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Spec/TestCase","kind":"struct","full_name":"Athena::Spec::TestCase","name":"TestCase"},"doc":"Focuses a specific test case (describe block) or method (it block).\n\nMaps to [Focusing Specs](https://crystal-lang.org/reference/guides/testing.html#focusing-on-a-group-of-specs) in the stdlib.","summary":"<p>Focuses a specific test case (describe block) or method (it block).</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Spec/TestCase/Pending","path":"Athena/Spec/TestCase/Pending.html","kind":"annotation","full_name":"Athena::Spec::TestCase::Pending","name":"Pending","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-spec/src/test_case.cr","line_number":163,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-spec/src/test_case.cr#L163"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Spec/TestCase","kind":"struct","full_name":"Athena::Spec::TestCase","name":"TestCase"},"doc":"Marks a specific test case (describe block) or method (it block) as `pending`.\n\nMaps to the stdlib's [#pending](https://crystal-lang.org/api/master/Spec/Methods.html#pending%28description=%22assert%22,file=__FILE__,line=__LINE__,end_line=__END_LINE__,focus:Bool=false,tags:String%7CEnumerable%28String%29%7CNil=nil,&%29-instance-method) method.","summary":"<p>Marks a specific test case (describe block) or method (it block) as <code>pending</code>.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Spec/TestCase/Tags","path":"Athena/Spec/TestCase/Tags.html","kind":"annotation","full_name":"Athena::Spec::TestCase::Tags","name":"Tags","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-spec/src/test_case.cr","line_number":153,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-spec/src/test_case.cr#L153"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Spec/TestCase","kind":"struct","full_name":"Athena::Spec::TestCase","name":"TestCase"},"doc":"Defines the tags tied to a specific test case (describe block) or method (it block).\n\nMaps to [Tagging Specs](https://crystal-lang.org/reference/guides/testing.html#tagging-specs) in the stdlib.","summary":"<p>Defines the tags tied to a specific test case (describe block) or method (it block).</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}]},{"html_id":"athena/Athena/Validator","path":"Athena/Validator.html","kind":"module","full_name":"Athena::Validator","name":"Validator","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-validator/src/athena-validator.cr","line_number":385,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/athena-validator.cr#L385"},{"filename":"lib/athena-validator/src/constraint.cr","line_number":255,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraint.cr#L255"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena","kind":"module","full_name":"Athena","name":"Athena"},"doc":"Athena's Validation component, `AVD` for short, adds an object/value validation framework to your project.\nThe framework consists of `AVD::Constraint`s that describe some assertion; such as a string should be `AVD::Constraints::NotBlank`\nor that a value is `AVD::Constraints::GreaterThanOrEqual` another value.\nConstraints, along with a value, are then passed to an `AVD::ConstraintValidatorInterface` that actually performs the validation, using the data defined in the constraint.\nIf the validator determines that the value is invalid in some way, it creates and adds an `AVD::Violation::ConstraintViolationInterface` to this runs' `AVD::ExecutionContextInterface`.\nThe `AVD::Validator::ValidatorInterface` then returns an `AVD::Violation::ConstraintViolationListInterface` that contains all the violations.  The value can be considered valid if that list is empty.\n\nNOTE: See each type individually for more detailed information.\n\n## Getting Started\n\n`Athena::Validator` comes with a set of common `AVD::Constraints` built in that any project could find useful.\nWhen used on its own, the `Athena::Validator.validator` method can be used to obtain an `AVD::Validator::ValidatorInterface` instance\nto validate a given value/object.\n\n### Basics\n\nA validator accepts a value, and one or more `AVD::Constraint` to validate the value against.\nThe validator then returns an `AVD::Violation::ConstraintViolationListInterface` that includes all the violations, if any.\n\n```\n# Obtain a validator instance.\nvalidator = AVD.validator\n\n# Use the validator to validate a value.\nviolations = validator.validate \"foo\", AVD::Constraints::NotBlank.new\n\n# The validator returns an empty list of violations, indicating the value is valid.\nviolations.inspect # => Athena::Validator::Violation::ConstraintViolationList(@violations=[])\n```\n\nIn this case it returns an empty list of violations, meaning the value is valid.\n\n```\n# Using the validator instance from the previous example\nviolations = validator.validate \"\", AVD::Constraints::NotBlank.new\n\nviolations.inspect # =>\n# Athena::Validator::Violation::ConstraintViolationList(\n#   @violations=\n#     [Athena::Validator::Violation::ConstraintViolation(String)(\n#     @cause=nil,\n#     @code=\"0d0c3254-3642-4cb0-9882-46ee5918e6e3\",\n#     @constraint=\n#       #<Athena::Validator::Constraints::NotBlank:0x7f97da08ced0\n#       @allow_nil=false,\n#       @groups=[\"default\"],\n#       @message=\"This value should not be blank.\",\n#       @payload=nil>,\n#     @invalid_value_container=\n#       Athena::Validator::ValueContainer(String)(@value=\"\"),\n#     @message=\"This value should not be blank.\",\n#     @message_template=\"This value should not be blank.\",\n#     @parameters={\"{{ value }}\" => \"\"},\n#     @plural=nil,\n#     @property_path=\"\",\n#     @root=\"\")])\n\n# Both the ConstraintViolationList and ConstraintViolation implement a `#to_s` method.\nputs violations # =>\n# :\n#   This value should not be blank. (code: 0d0c3254-3642-4cb0-9882-46ee5918e6e3)\n```\n\nHowever in the case of the value _NOT_ being valid, the list includes all of the `AVD::Violation::ConstraintViolationInterface`s produced during this run.\nEach violation includes some metadata; such as the related constraint that failed, a machine readable code, a human readable message, any parameters\nthat should be used to render that message, etc.  The extra context allows for a lot of flexibility; both in terms of how the error could be rendered or handled.\n\nBy default, in addition to any constraint specific arguments, the majority of the constraints have three optional arguments: `message`, `groups`, and `payload`.\n\n* The `message` argument represents the message that should be used if the value is found to not be valid.\nThe message can also include placeholders, in the form of `{{ key }}`, that will be replaced when the message is rendered.\nMost commonly this includes the invalid value itself, but some constraints have additional placeholders.\n* The `payload` argument can be used to attach any domain specific data to the constraint; such as attaching a severity with each constraint\nto have more serious violations be handled differently.\n* The `groups` argument can be used to run a subset of the defined constraints.  More on this in the [Validation Groups](#validation-groups) section.\n\n```\nvalidator = AVD.validator\n\n# Instantiate a constraint with a custom message, using a placeholder.\nviolations = validator.validate -4, AVD::Constraints::PositiveOrZero.new message: \"{{ value }} is not a valid age.  A user cannot have a negative age.\"\n\nputs violations # =>\n# -4:\n#   -4 is not a valid age.  A user cannot have a negative age. (code: e09e52d0-b549-4ba1-8b4e-420aad76f0de)\n```\nCustomizing the message can be a good way for those consuming the errors to determine _WHY_ a given value is not valid.\n\n### Validating Objects\n\nValidating arbitrary values against a set of arbitrary constraints can be useful in smaller applications and/or for one off use cases.\nHowever to keep in line with our Object Oriented Programming (OOP) principles, we can also validate objects.  The object could be either a struct or a class.\nThe only requirements are that the object includes a specific module, `AVD::Validatable`, and specifies which properties should be validated and against what constraints.\nThe easiest/most common way to do this is via annotations and the `Assert` alias.\n\n```\n# Define a class that can be validated.\nclass User\n  include AVD::Validatable\n\n  def initialize(@name : String, @age : Int32? = nil); end\n\n  # Specify that we want to assert that the user's name is not blank.\n  # Multiple constraints can be defined on a single property.\n  @[Assert::NotBlank]\n  getter name : String\n\n  # Arguments to the constraint can be used normally as well.\n  # The constraint's default argument can also be supplied positionally: `@[Assert::GreaterThan(0)]`.\n  @[Assert::NotNil(message: \"A user's age cannot be null\")]\n  getter age : Int32?\nend\n\n# Obtain a validator instance.\nvalidator = AVD.validator\n\n# Validate a user instance, notice we're not passing in any constraints.\nvalidator.validate(User.new(\"Jim\", 10)).empty? # => true\nvalidator.validate User.new \"\", 10             # =>\n# Object(User).name:\n#   This value should not be blank. (code: 0d0c3254-3642-4cb0-9882-46ee5918e6e3)\n```\n\nNotice that in this case we do not need to supply the constraints to the `#validate` method.\nThis is because the validator is able to extract them from the annotations on the properties.\nAn array of constraints can still be supplied, and will take precedence over the constraints defined within the type.\n\nNOTE: By default if a property's value is another object, the sub object will not be validated.\nuse the `AVD::Constraints::Valid` constraint if you wish to also validate the sub object.\nThis also applies to arrays of objects.\n\nAnother important thing to point out is that no custom DSL is required to define these constraints.\n`Athena::Validator` is intended to be a generic validation solution that could be used outside of the [Athena](https://github.com/athena-framework) ecosystem.\nHowever, in order to be able to use the annotation based approach, you need to be able to apply the annotations to the underlying properties.\nIf this is not possible due to how a specific type is implemented, or if you just don't like the annotation syntax, the type can also be configured via code.\n\n```\n# Define a class that can be validated.\nclass User\n  include AVD::Validatable\n\n  # This class method is invoked when building the metadata associated with a type,\n  # and can be used to manually wire up the constraints.\n  def self.load_metadata(metadata : AVD::Metadata::ClassMetadata) : Nil\n    metadata.add_property_constraint \"name\", AVD::Constraints::NotBlank.new\n  end\n\n  def initialize(@name : String); end\n\n  getter name : String\nend\n\n# Obtain a validator instance.\nvalidator = AVD.validator\n\n# Validate a user instance, notice we're not passing in any constraints.\nvalidator.validate(User.new(\"Jim\")).empty? # => true\nvalidator.validate User.new \"\"             # =>\n# Object(User).name:\n#   This value should not be blank. (code: 0d0c3254-3642-4cb0-9882-46ee5918e6e3)\n```\n\nThe metadata for each type is lazily loaded when an instance of that type is validated, and is only built once.\nSee `AVD::Metadata::ClassMetadata` for some additional ways to register property constraints.\n\n#### Getters\n\nConstraints can also be applied to getter methods of an object.\nThis allows for dynamic validations based on the return value of the method.\nFor example, say we wanted to assert that a user's name is not the same as their password.\n\n```\nclass User\n  include AVD::Validatable\n\n  property name : String\n  property password : String\n\n  def initialize(@name : String, @password : String); end\n\n  @[Assert::IsTrue(message: \"Your password cannot be the same as your name.\")]\n  def is_safe_password? : Bool\n    @name != @password\n  end\nend\n\nvalidator = AVD.validator\n\nuser = User.new \"foo\", \"foo\"\n\nvalidator.validate(user).empty? # => false\n\nuser.password = \"bar\"\n\nvalidator.validate(user).empty? # => true\n```\n\n### Custom Constraints\n\nIf the built in `AVD::Constraints` are not sufficient to handle validating a given value/object; custom ones can be defined.\nLet's make a new constraint that asserts a string contains only alphanumeric characters.\n\nThis is accomplished by first defining a new class within the `AVD::Constraints` namespace that inherits from `AVD::Constraint`.\nThen define a `Validator` struct within our constraint that inherits from `AVD::ConstraintValidator` that actually implements the validation logic.\n\n```\nclass AVD::Constraints::AlphaNumeric < AVD::Constraint\n  # (Optional) A unique error code can also be defined to provide a machine readable identifier for a specific error.\n  NOT_ALPHANUMERIC_ERROR = \"1a83a8bd-ff79-4d5c-96e7-86d0b25b8a09\"\n\n  # (Optional) Allows using the `.error_message(code : String) : String` method with this constraint.\n  @@error_names = {\n    NOT_ALPHANUMERIC_ERROR => \"NOT_ALPHANUMERIC_ERROR\",\n  }\n\n  # Define an initializer with our default message, and any additional arguments specific to this constraint.\n  def initialize(\n    message : String = \"This value should contain only alphanumeric characters.\",\n    groups : Array(String) | String | Nil = nil,\n    payload : Hash(String, String)? = nil\n  )\n    super message, groups, payload\n  end\n\n  # Define the validator within our constraint that'll contain our validation logic.\n  struct Validator < AVD::ConstraintValidator\n    # Define our validate method that accepts the value to be validated, and the constraint.\n    #\n    # Overloads can be used to filter values of specific types.\n    def validate(value : _, constraint : AVD::Constraints::AlphaNumeric) : Nil\n      # Custom constraints should ignore nil and empty values to allow\n      # other constraints (NotBlank, NotNil, etc.) take care of that\n      return if value.nil? || value == \"\"\n\n      # We'll cast the value to a string,\n      # alternatively we could just ignore non `String?` values.\n      value = value.to_s\n\n      # If all the characters of this string are alphanumeric, then it is valid\n      return if value.each_char.all? &.alphanumeric?\n\n      # Otherwise, it is invalid and we need to add a violation,\n      # see `AVD::ExecutionContextInterface` for additional information.\n      self.context.add_violation constraint.message, NOT_ALPHANUMERIC_ERROR, value\n    end\n  end\nend\n\nputs AVD.validator.validate \"$\", AVD::Constraints::AlphaNumeric.new # =>\n# $:\n#   This value should contain only alphanumeric characters. (code: 1a83a8bd-ff79-4d5c-96e7-86d0b25b8a09)\n```\n\nNOTE: The constraint _MUST_ be defined within the `AVD::Constraints` namespace for implementation reasons.  This may change in the future.\n\nWe are now able to use this constraint as we would one of the built in ones;\neither by manually instantiating it, or applying an `@[Assert::AlphaNumeric]` annotation to a property.\n\nSee `AVD::ConstraintValidatorInterface` for more information on custom validators.\n\n### Validation Groups\n\nBy default when validating an object, all constraints defined on that type will be checked.\nHowever, in some cases you may only want to validate the object against _some_ of those constraints.\nThis can be accomplished via assigning each constraint to a validation group, then apply validation against one specific group of constraints.\n\nFor example, using our `User` class from earlier, say we only want to validate certain properties when the user is first created.\nTo do this we can utilize the `groups` argument that all constraints have.\n\n```\nclass User\n  include AVD::Validatable\n\n  def initialize(@email : String, @password : String, @city : String); end\n\n  @[Assert::Email(groups: \"create\")]\n  getter email : String\n\n  @[Assert::NotBlank(groups: \"create\")]\n  @[Assert::Size(7.., groups: \"create\")]\n  getter password : String\n\n  @[Assert::Size(2..)]\n  getter city : String\nend\n\nuser = User.new \"george@dietrich.app\", \"monkey123\", \"\"\n\n# Validate the user object, but only for those in the \"create\" group,\n# if no groups are supplied, then all constraints in the \"default\" group will be used.\nviolations = AVD.validator.validate user, groups: \"create\"\n\n# There are no violations since the city's size is not validated since it's not in the \"create\" group.\nviolations.empty? # => true\n```\n\nSee `AVD::Constraint@validation-groups` for some expanded information.\n\n### Sequential Validation\n\nBy default, all constraints are validated in a single \"batch\".  I.e. all constraints within the provided group(s) are validated, without regard\nto if the previous/next constraint is/was (in)valid.  However, an `AVD::Constraints::GroupSequence` can be used to validate batches of constraints in steps.\nI.e. validate the first \"batch\" of constraints, and only advance to the next batch if all constraints in that step are valid.\n\n```\n@[Assert::GroupSequence(\"User\", \"Secondary\")]\nclass User\n  include AVD::Validatable\n\n  @[Assert::NotBlank]\n  getter username : String\n\n  @[Assert::NotBlank(groups: \"Secondary\")]\n  getter password : String\n\n  def initialize(@username : String, @password : String); end\nend\n\n# Instantiate a new `User` object where both properties are invalid.\nuser = User.new \"\", \"\"\n\n# Notice there is only one violation since there was a violation in the `User` group,\n# it did not advance to the `Secondary` group.\nAVD.validator.validate user # =>\n# Object(User).username:\n#   This value should not be blank. (code: 0d0c3254-3642-4cb0-9882-46ee5918e6e3)\n```\n\n#### Group Sequence Providers\n\nThe `AVD::Constraints::GroupSequence` can be a useful tool for creating efficient validations, but it is quite limiting since the sequence is static on the type.\nIf more flexibility is required the `AVD::Constraints::GroupSequence::Provider` module can be included into a type.\nThe module allows the object to return the sequence it should use dynamically at runtime.\n\n```\nclass User\n  include AVD::Validatable\n  include AVD::Constraints::GroupSequence::Provider\n\n  # ...\n\n  def group_sequence : Array(Array(String) | String) | AVD::Constraints::GroupSequence\n    # Build out and return the sequence `self` should use.\n  end\nend\n```\n\nAlternatively, if you only want to apply constraints sequentially on a single property,\nthe `AVD::Constraints::Sequentially` constraint can be used to do this in a simpler way.\n\nNOTE: See the related types for more detailed information.","summary":"<p>Athena's Validation component, <code><a href=\"../AVD.html\">AVD</a></code> for short, adds an object/value validation framework to your project.</p>","class_methods":[{"id":"validator:AVD::Validator::ValidatorInterface-class-method","html_id":"validator:AVD::Validator::ValidatorInterface-class-method","name":"validator","doc":"Returns a new `AVD::Validator::ValidatorInterface`.\n\n```\nvalidator = AVD.validator\n\nvalidator.validate \"foo\", AVD::Constraints::NotBlank.new\n```","summary":"<p>Returns a new <code><a href=\"../Athena/Validator/Validator/ValidatorInterface.html\">AVD::Validator::ValidatorInterface</a></code>.</p>","abstract":false,"args":[],"args_string":" : AVD::Validator::ValidatorInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/athena-validator.cr#L435","def":{"name":"validator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ValidatorInterface","visibility":"Public","body":"AVD::Validator::RecursiveValidator.new"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraint","path":"Athena/Validator/Constraint.html","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint","abstract":true,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraint.cr","line_number":255,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraint.cr#L255"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"DEFAULT_GROUP","name":"DEFAULT_GROUP","value":"\"default\"","doc":"The group that `self` is a part of if no other group(s) are explicitly defined.","summary":"<p>The group that <code>self</code> is a part of if no other group(s) are explicitly defined.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Validator/Constraints/Blank","kind":"class","full_name":"Athena::Validator::Constraints::Blank","name":"Blank"},{"html_id":"athena/Athena/Validator/Constraints/Callback","kind":"class","full_name":"Athena::Validator::Constraints::Callback","name":"Callback"},{"html_id":"athena/Athena/Validator/Constraints/Choice","kind":"class","full_name":"Athena::Validator::Constraints::Choice","name":"Choice"},{"html_id":"athena/Athena/Validator/Constraints/Composite","kind":"class","full_name":"Athena::Validator::Constraints::Composite","name":"Composite"},{"html_id":"athena/Athena/Validator/Constraints/Email","kind":"class","full_name":"Athena::Validator::Constraints::Email","name":"Email"},{"html_id":"athena/Athena/Validator/Constraints/EqualTo","kind":"class","full_name":"Athena::Validator::Constraints::EqualTo(ValueType)","name":"EqualTo"},{"html_id":"athena/Athena/Validator/Constraints/GreaterThan","kind":"class","full_name":"Athena::Validator::Constraints::GreaterThan(ValueType)","name":"GreaterThan"},{"html_id":"athena/Athena/Validator/Constraints/GreaterThanOrEqual","kind":"class","full_name":"Athena::Validator::Constraints::GreaterThanOrEqual(ValueType)","name":"GreaterThanOrEqual"},{"html_id":"athena/Athena/Validator/Constraints/IP","kind":"class","full_name":"Athena::Validator::Constraints::IP","name":"IP"},{"html_id":"athena/Athena/Validator/Constraints/ISBN","kind":"class","full_name":"Athena::Validator::Constraints::ISBN","name":"ISBN"},{"html_id":"athena/Athena/Validator/Constraints/IsFalse","kind":"class","full_name":"Athena::Validator::Constraints::IsFalse","name":"IsFalse"},{"html_id":"athena/Athena/Validator/Constraints/ISIN","kind":"class","full_name":"Athena::Validator::Constraints::ISIN","name":"ISIN"},{"html_id":"athena/Athena/Validator/Constraints/IsNil","kind":"class","full_name":"Athena::Validator::Constraints::IsNil","name":"IsNil"},{"html_id":"athena/Athena/Validator/Constraints/ISSN","kind":"class","full_name":"Athena::Validator::Constraints::ISSN","name":"ISSN"},{"html_id":"athena/Athena/Validator/Constraints/IsTrue","kind":"class","full_name":"Athena::Validator::Constraints::IsTrue","name":"IsTrue"},{"html_id":"athena/Athena/Validator/Constraints/LessThan","kind":"class","full_name":"Athena::Validator::Constraints::LessThan(ValueType)","name":"LessThan"},{"html_id":"athena/Athena/Validator/Constraints/LessThanOrEqual","kind":"class","full_name":"Athena::Validator::Constraints::LessThanOrEqual(ValueType)","name":"LessThanOrEqual"},{"html_id":"athena/Athena/Validator/Constraints/Luhn","kind":"class","full_name":"Athena::Validator::Constraints::Luhn","name":"Luhn"},{"html_id":"athena/Athena/Validator/Constraints/NotBlank","kind":"class","full_name":"Athena::Validator::Constraints::NotBlank","name":"NotBlank"},{"html_id":"athena/Athena/Validator/Constraints/NotEqualTo","kind":"class","full_name":"Athena::Validator::Constraints::NotEqualTo(ValueType)","name":"NotEqualTo"},{"html_id":"athena/Athena/Validator/Constraints/NotNil","kind":"class","full_name":"Athena::Validator::Constraints::NotNil","name":"NotNil"},{"html_id":"athena/Athena/Validator/Constraints/Range","kind":"class","full_name":"Athena::Validator::Constraints::Range","name":"Range"},{"html_id":"athena/Athena/Validator/Constraints/Regex","kind":"class","full_name":"Athena::Validator::Constraints::Regex","name":"Regex"},{"html_id":"athena/Athena/Validator/Constraints/Size","kind":"class","full_name":"Athena::Validator::Constraints::Size","name":"Size"},{"html_id":"athena/Athena/Validator/Constraints/Unique","kind":"class","full_name":"Athena::Validator::Constraints::Unique","name":"Unique"},{"html_id":"athena/Athena/Validator/Constraints/URL","kind":"class","full_name":"Athena::Validator::Constraints::URL","name":"URL"},{"html_id":"athena/Athena/Validator/Constraints/Valid","kind":"class","full_name":"Athena::Validator::Constraints::Valid","name":"Valid"},{"html_id":"athena/Athena/Validator/Spec/FailingConstraint","kind":"class","full_name":"Athena::Validator::Spec::FailingConstraint","name":"FailingConstraint"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator","kind":"module","full_name":"Athena::Validator","name":"Validator"},"doc":"`Athena::Validator` validates values/objects against a set of constraints, i.e. rules.\nEach constraint makes an assertive statement that some condition is true.\nGiven a value, a constraint will tell you if that value adheres to the rules of the constraint.\nAn example of this could be asserting a value is not blank, or greater than or equal to another value.\n\nIt's important to note a constraint does not implement the validation logic itself.\nInstead, this is handled via an `AVD::ConstraintValidator` as defined via `#validated_by`.\nHaving this abstraction allows for better reusability and testability.\n\n`Athena::Validator` comes with a set of common constraints built in.\nSee the individual types within `AVD::Constraints` for more information.\n\n## Usage\n\nA constraint can be instantiated and passed to a validator directly:\n\n```\n# An array of constraints can also be passed.\nAVD.validator.validate \"\", AVD::Constraints::NotBlank.new\n```\n\nConstraint annotation(s) can also be applied to instance variables to assert the value of that property adheres to the constraint.\n\n```\nclass Example\n  include AVD::Validatable\n\n  def initialize(@name : String); end\n\n  # More than one constraint can be applied to a property.\n  @[Assert::NotBlank]\n  property name : String\nend\n\n# Constraints are extracted from the annotations.\n# An array can also be passed to validate against that list instead.\nAVD.validator.validate Example.new(\"Jim\")\n```\n\nConstraints can also be added manually via code by defining an `self.load_metadata(metadata : AVD::Metadata::ClassMetadata) : Nil`\nmethod and adding the constraints directly to the `AVD::Metadata::ClassMetadata` instance.\n\n```\n# This class method is invoked when building the metadata associated with a type,\n# and can be used to manually wire up the constraints.\ndef self.load_metadata(metadata : AVD::Metadata::ClassMetadata) : Nil\n  metadata.add_property_constraint \"name\", AVD::Constraints::NotBlank.new\nend\n```\n\nThe metadata for each type is lazily loaded when an instance of that type is validated, and is only built once.\n\n## Arguments\n\nWhile most constraints can be instantiated with an argless constructor,they do have a set of optional arguments.\n* The `message` argument represents the message that should be used if the value is found to not be valid.\nThe message can also include placeholders, in the form of `{{ key }}`, that will be replaced when the message is rendered.\nMost commonly this includes the invalid value itself, but some constraints have additional placeholders.\n* The `payload` argument can be used to attach any domain specific data to the constraint; such as attaching a severity with each constraint\nto have more serious violations be handled differently.  See the [Payload](./Constraint.html#payload) section.\n* The `groups` argument can be used to run a subset of the defined constraints.  More on this in the [Validation Groups](./Constraint.html#validation-groups) section.\n\nFor example:\n\n```\nvalidator = AVD.validator\n\n# Instantiate a constraint with a custom message, using a placeholder.\nviolations = validator.validate -4, AVD::Constraints::PositiveOrZero.new message: \"{{ value }} is not a valid age.  A user cannot have a negative age.\"\n\nputs violations # =>\n# -4:\n#   -4 is not a valid age.  A user cannot have a negative age. (code: e09e52d0-b549-4ba1-8b4e-420aad76f0de)\n```\nCustomizing the message can be a good way for those consuming the errors to determine _WHY_ a given value is not valid.\n\n### Default Argument\n\nThe first argument of the constructor is known as the default argument.\nThis argument is special when using the annotation based approach in that it can be supplied as a positional argument within the annotation.\n\nFor example the default argument for `AVD::Constraints::GreaterThan` is the value that the value being validated should be compared against.\n\nThus:\n\n```\n@[Assert::GreaterThan(0)]\nproperty age : Int32\n```\n\nIs equivalent to:\n\n```\n@[Assert::GreaterThan(value: 0)]\nproperty age : Int32\n```\n\nNOTE: Only the first argument can be supplied positionally, all other arguments must be provided as named arguments within the annotation.\n\n### Message Plurality\n\n`Athena::Validator` has very basic support for pluralizing constraint `#message`s via `AVD::Violation::ConstraintViolationInterface#plural`.\n\nFor example the `#message` could have different versions based on the plurality of the violation.\nCurrently this only supports two contexts: singular (1/nil) and plural (2+).\n\nMultiple messages, separated by a `|`, can be included as part of an `AVD::Constraint` message.\nFor example from `AVD::Constraints::Size`:\n\n`min_message : String = \"This value is too short. It should have {{ limit }} {{ type }} or more.|This value is too short. It should have {{ limit }} {{ type }}s or more.\"`\n\nIf violations' `#plural` method returns `1` (or `nil`) the first message will be used.  If `#plural` is `2` or more, the latter message will be used.\n\nTODO: Support more robust translations; like language or multiple pluralities.\n\n### Payload\n\nThe `payload` argument defined on every `AVD::Constraint` type can be used to store custom domain specific information with a constraint.\nThis data can later be retrieved off of an `AVD::Violation::ConstraintViolationInterface`.\nAn example use case for this could be mapping a \"severity\" to a CSS class based on how important each specific constraint is.\n\n```\nclass User\n  include AVD::Validatable\n\n  def initialize(@email : String, @password : String); end\n\n  @[Assert::NotBlank(payload: {\"severity\" => \"error\"})]\n  getter email : String\n\n  @[Assert::NotBlank(payload: {\"severity\" => \"warning\"})]\n  getter password : String\nend\n\nviolations = AVD.validator.validate User.new \"\", \"\"\n\n# Use this when rendering HTML, or JSON to allow dynamically customizing the response object.\nviolations[0].constraint.payload # => {\"severity\" => \"error\"}\nviolations[1].constraint.payload # => {\"severity\" => \"warning\"}\n```\n\n## Validation Groups\n\nThe `groups` argument defined on every `AVD::Constraint` type can be used to run a subset of validations.\n\nFor example, say we only want to validate certain properties when the user is first created:\n\n```\nclass User\n  include AVD::Validatable\n\n  def initialize(@email : String, @password : String, @city : String); end\n\n  @[Assert::Email(groups: \"create\")]\n  getter email : String\n\n  @[Assert::NotBlank(groups: \"create\")]\n  @[Assert::Size(7.., groups: \"create\")]\n  getter password : String\n\n  @[Assert::Size(2..)]\n  getter city : String\nend\n\nuser = User.new \"george@dietrich.app\", \"monkey123\", \"\"\n\n# Validate the user object, but only for those in the \"create\" group,\n# if no groups are supplied, then all constraints in the \"default\" group will be used.\nviolations = AVD.validator.validate user, groups: \"create\"\n\n# There are no violations since the city's size is not validated since it's not in the \"create\" group.\nviolations.empty? # => true\n```\n\nUsing this configuration, there are three groups at play within the `User` class:\n1. `default` - Contains constraints in the current type, and subtypes, that belong to no other group.  I.e. `city`.\n1. `User` - In this example, equivalent to all constraints in the `default` group.  See `AVD::Constraints::GroupSequence`, and the note below.\n1. `create` - A custom group that only contains the constraints explicitly associated with it.  I.e. `email`, and `password`.\n\nNOTE: When validating _just_ the `User` object, the `default` group is equivalent to the `User` group.\nHowever, if the `User` object has other embedded types using the `AVD::Constraints::Valid` constraint, then validating the `User` object with the `User`\ngroup would only validate constraints that are explicitly in the `User` group within the embedded types.\n\nBy default, all constraints are validated in a single \"batch\".  I.e. all constraints within the provided group(s) are validated, without regard\nto if the previous/next constraint is/was (in)valid.  However, an `AVD::Constraints::GroupSequence` can be used to validate batches of constraints in steps.\nI.e. validate the first \"batch\" of constraints, and only advance to the next batch if all constraints in that step are valid.\n\nNOTE: The payload is not used with the framework itself.\n\n## Custom Constraints\n\nIf the built in `AVD::Constraints` are not sufficient to handle validating a given value/object; custom ones can be defined.\nLet's make a new constraint that asserts a string contains only alphanumeric characters.\n\nThis is accomplished by first defining a new class within the `AVD::Constraints` namespace that inherits from `AVD::Constraint`.\nThen define a `Validator` struct within our constraint that inherits from `AVD::ConstraintValidator` that actually implements the validation logic.\n\n```\nclass AVD::Constraints::AlphaNumeric < AVD::Constraint\n  # (Optional) A unique error code can also be defined to provide a machine readable identifier for a specific error.\n  NOT_ALPHANUMERIC_ERROR = \"1a83a8bd-ff79-4d5c-96e7-86d0b25b8a09\"\n\n  # (Optional) Allows using the `.error_message(code : String) : String` method with this constraint.\n  @@error_names = {\n    NOT_ALPHANUMERIC_ERROR => \"NOT_ALPHANUMERIC_ERROR\",\n  }\n\n  # Define an initializer with our default message, and any additional arguments specific to this constraint.\n  def initialize(\n    message : String = \"This value should contain only alphanumeric characters.\",\n    groups : Array(String) | String | Nil = nil,\n    payload : Hash(String, String)? = nil\n  )\n    super message, groups, payload\n  end\n\n  # Define the validator within our constraint that'll contain our validation logic.\n  struct Validator < AVD::ConstraintValidator\n    # Define our validate method that accepts the value to be validated, and the constraint.\n    #\n    # Overloads can be used to filter values of specific types.\n    def validate(value : _, constraint : AVD::Constraints::AlphaNumeric) : Nil\n      # Custom constraints should ignore nil and empty values to allow\n      # other constraints (NotBlank, NotNil, etc.) take care of that\n      return if value.nil? || value == \"\"\n\n      # We'll cast the value to a string,\n      # alternatively we could just ignore non `String?` values.\n      value = value.to_s\n\n      # If all the characters of this string are alphanumeric, then it is valid\n      return if value.each_char.all? &.alphanumeric?\n\n      # Otherwise, it is invalid and we need to add a violation,\n      # see `AVD::ExecutionContextInterface` for additional information.\n      self.context.add_violation constraint.message, NOT_ALPHANUMERIC_ERROR, value\n    end\n  end\nend\n\nputs AVD.validator.validate \"$\", AVD::Constraints::AlphaNumeric.new # =>\n# $:\n#   This value should contain only alphanumeric characters. (code: 1a83a8bd-ff79-4d5c-96e7-86d0b25b8a09)\n```\n\nNOTE: The constraint _MUST_ be defined within the `AVD::Constraints` namespace for implementation reasons.  This may change in the future.\n\nWe are now able to use this constraint as we would one of the built in ones;\neither by manually instantiating it, or applying an `@[Assert::AlphaNumeric]` annotation to a property.\n\nSee `AVD::ConstraintValidatorInterface` for more information on custom validators.\n\nNOTE:  The `AVD::Constraints::Compound` constraint can be used to create a constraint that consists of one or more other constraints.\n","summary":"<p><code><a href=\"../../Athena/Validator.html\">Athena::Validator</a></code> validates values/objects against a set of constraints, i.e.</p>","class_methods":[{"id":"error_name(error_code:String):String-class-method","html_id":"error_name(error_code:String):String-class-method","name":"error_name","doc":"Returns the name of the provided *error_code*.","summary":"<p>Returns the name of the provided <em>error_code</em>.</p>","abstract":false,"args":[{"name":"error_code","doc":null,"default_value":"","external_name":"error_code","restriction":"String"}],"args_string":"(error_code : String) : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraint.cr#L262","def":{"name":"error_name","args":[{"name":"error_code","doc":null,"default_value":"","external_name":"error_code","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@@error_names[error_code]? || (raise(KeyError.new(\"The error code '#{error_code}' does not exist for constraint of type '#{self}'.\")))"}}],"constructors":[{"id":"new(message:String,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(message:String,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(message : String, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraint.cr#L278","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_implicit_group(group:String):Nil-instance-method","html_id":"add_implicit_group(group:String):Nil-instance-method","name":"add_implicit_group","doc":"Adds the provided *group* to `#groups` if `self` is in the `AVD::Constraint::DEFAULT_GROUP`.","summary":"<p>Adds the provided <em>group</em> to <code><a href=\"../../Athena/Validator/Constraint.html#groups:Array(String)-instance-method\">#groups</a></code> if <code>self</code> is in the <code><a href=\"../../Athena/Validator/Constraint.html#DEFAULT_GROUP\">AVD::Constraint::DEFAULT_GROUP</a></code>.</p>","abstract":false,"args":[{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":"String"}],"args_string":"(group : String) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraint.cr#L287","def":{"name":"add_implicit_group","args":[{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if (@groups.includes?(DEFAULT_GROUP)) && (!(@groups.includes?(group)))\n  @groups << group\nend"}},{"id":"groups:Array(String)-instance-method","html_id":"groups:Array(String)-instance-method","name":"groups","doc":"The validation groups `self` is a part of.","summary":"<p>The validation groups <code>self</code> is a part of.</p>","abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraint.cr#L273","def":{"name":"groups","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@groups"}},{"id":"groups=(groups:Array(String))-instance-method","html_id":"groups=(groups:Array(String))-instance-method","name":"groups=","doc":"The validation groups `self` is a part of.","summary":"<p>The validation groups <code>self</code> is a part of.</p>","abstract":false,"args":[{"name":"groups","doc":null,"default_value":"","external_name":"groups","restriction":"Array(String)"}],"args_string":"(groups : Array(String))","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraint.cr#L273","def":{"name":"groups=","args":[{"name":"groups","doc":null,"default_value":"","external_name":"groups","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@groups = groups"}},{"id":"message:String-instance-method","html_id":"message:String-instance-method","name":"message","doc":"Returns the message that should be rendered if `self` is found to be invalid.\n\nNOTE: Some subtypes do not use this and instead define multiple message\nproperties in order to support more specific error messages.","summary":"<p>Returns the message that should be rendered if <code>self</code> is found to be invalid.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraint.cr#L270","def":{"name":"message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@message"}},{"id":"payload:Hash(String,String)?-instance-method","html_id":"payload:Hash(String,String)?-instance-method","name":"payload","doc":"Returns any domain specific data associated with `self`.","summary":"<p>Returns any domain specific data associated with <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : Hash(String, String)?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraint.cr#L276","def":{"name":"payload","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String) | ::Nil","visibility":"Public","body":"@payload"}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":true,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraint.cr#L294","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Constraints","path":"Athena/Validator/Constraints.html","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-validator/src/athena-validator.cr","line_number":396,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/athena-validator.cr#L396"},{"filename":"lib/athena-validator/src/constraints/abstract_comparison.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/abstract_comparison.cr#L2"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator","kind":"module","full_name":"Athena::Validator","name":"Validator"},"doc":"Contains all of the built in `AVD::Constraint`s.\nSee each individual constraint for more information.\nThe `Assert` alias is used to apply these constraints via annotations.","summary":"<p>Contains all of the built in <code><a href=\"../../Athena/Validator/Constraint.html\">AVD::Constraint</a></code>s.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraints/AbstractComparison","path":"Athena/Validator/Constraints/AbstractComparison.html","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison(ValueType)","name":"AbstractComparison","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-validator/src/constraints/abstract_comparison.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/abstract_comparison.cr#L2"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Validator/Constraints/EqualTo","kind":"class","full_name":"Athena::Validator::Constraints::EqualTo(ValueType)","name":"EqualTo"},{"html_id":"athena/Athena/Validator/Constraints/GreaterThan","kind":"class","full_name":"Athena::Validator::Constraints::GreaterThan(ValueType)","name":"GreaterThan"},{"html_id":"athena/Athena/Validator/Constraints/GreaterThanOrEqual","kind":"class","full_name":"Athena::Validator::Constraints::GreaterThanOrEqual(ValueType)","name":"GreaterThanOrEqual"},{"html_id":"athena/Athena/Validator/Constraints/LessThan","kind":"class","full_name":"Athena::Validator::Constraints::LessThan(ValueType)","name":"LessThan"},{"html_id":"athena/Athena/Validator/Constraints/LessThanOrEqual","kind":"class","full_name":"Athena::Validator::Constraints::LessThanOrEqual(ValueType)","name":"LessThanOrEqual"},{"html_id":"athena/Athena/Validator/Constraints/NotEqualTo","kind":"class","full_name":"Athena::Validator::Constraints::NotEqualTo(ValueType)","name":"NotEqualTo"}],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Defines common logic for comparison based constraints, such as `AVD::Constraints::GreaterThan`, or `AVD::Constraints::EqualTo`.","summary":"<p>Defines common logic for comparison based constraints, such as <code><a href=\"../../../Athena/Validator/Constraints/GreaterThan.html\">AVD::Constraints::GreaterThan</a></code>, or <code><a href=\"../../../Athena/Validator/Constraints/EqualTo.html\">AVD::Constraints::EqualTo</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(value:ValueType,message:String=default_error_message,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(value:ValueType,message:String=default_error_message,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"ValueType"},{"name":"message","doc":null,"default_value":"default_error_message","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(value : ValueType, message : String = default_error_message, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/abstract_comparison.cr#L9","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"ValueType"},{"name":"message","doc":null,"default_value":"default_error_message","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(value, message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"default_error_message:String-instance-method","html_id":"default_error_message:String-instance-method","name":"default_error_message","doc":"Returns the `AVD::Constraint#message` for this constraint.","summary":"<p>Returns the <code><a href=\"../../../Athena/Validator/Constraint.html#message:String-instance-method\">AVD::Constraint#message</a></code> for this constraint.</p>","abstract":true,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/abstract_comparison.cr#L19","def":{"name":"default_error_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}},{"id":"value:ValueType-instance-method","html_id":"value:ValueType-instance-method","name":"value","doc":"Returns the expected value.","summary":"<p>Returns the expected value.</p>","abstract":false,"args":[],"args_string":" : ValueType","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/abstract_comparison.cr#L4","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ValueType","visibility":"Public","body":"@value"}},{"id":"value_type:ValueType.class-instance-method","html_id":"value_type:ValueType.class-instance-method","name":"value_type","doc":"Returns the type of the expected value.","summary":"<p>Returns the type of the expected value.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">ValueType</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/abstract_comparison.cr#L7","def":{"name":"value_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ValueType.class","visibility":"Public","body":"@value_type"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Constraints/All","path":"Athena/Validator/Constraints/All.html","kind":"class","full_name":"Athena::Validator::Constraints::All","name":"All","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraints/Composite","kind":"class","full_name":"Athena::Validator::Constraints::Composite","name":"Composite"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraints/Composite","kind":"class","full_name":"Athena::Validator::Constraints::Composite","name":"Composite"},{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/all.cr","line_number":52,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/all.cr#L52"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates each element of an `Iterable` is valid based on a collection of constraints.\n\n## Configuration\n\n### Required Arguments\n\n#### constraints\n\n**Type:** `Array(AVD::Constraint) | AVD::Constraint`\n\nThe `AVD::Constraint`(s) that you want to apply to each element of the underlying iterable.\n\n### Optional Arguments\n\nNOTE: This constraint does not support a `message` argument.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.\n\n## Usage\n\n```\nclass Example\n  include AVD::Validatable\n\n  def initialize(@strings : Array(String)); end\n\n  # Assert each string is not blank and is at least 5 characters long.\n  @[Assert::All([\n    @[Assert::NotBlank],\n    @[Assert::Size(5..)],\n  ])]\n  getter strings : Array(String)\nend\n```\n\nNOTE: The annotation approach only supports two levels of nested annotations.\nManually wire up the constraint via code if you require more than that.","summary":"<p>Validates each element of an <code>Iterable</code> is valid based on a collection of constraints.</p>","class_methods":[],"constructors":[{"id":"new(constraints:Array(AVD::Constraint)|AVD::Constraint,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(constraints:Array(AVD::Constraint)|AVD::Constraint,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"constraints","doc":null,"default_value":"","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(constraints : Array(AVD::Constraint) | AVD::Constraint, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/all.cr#L53","def":{"name":"new","args":[{"name":"constraints","doc":null,"default_value":"","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(constraints, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/all.cr#L52","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraints/All/Validator","path":"Athena/Validator/Constraints/All/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::All::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/all.cr","line_number":61,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/all.cr#L61"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/All","kind":"class","full_name":"Athena::Validator::Constraints::All","name":"All"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:Hash?,constraint:AVD::Constraints::All):Nil-instance-method","html_id":"validate(value:Hash?,constraint:AVD::Constraints::All):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Hash | ::Nil"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::All"}],"args_string":"(value : Hash?, constraint : AVD::Constraints::All) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/all.cr#L63","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Hash | ::Nil"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::All"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if value.nil?\n  return\nend\nself.with_validator do |validator|\n  value.each do |k, v|\n    (validator.at_path(\"[#{k}]\")).validate(v, constraint.constraints)\n  end\nend\n"}},{"id":"validate(value:Indexable?,constraint:AVD::Constraints::All):Nil-instance-method","html_id":"validate(value:Indexable?,constraint:AVD::Constraints::All):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Indexable | ::Nil"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::All"}],"args_string":"(value : Indexable?, constraint : AVD::Constraints::All) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/all.cr#L74","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Indexable | ::Nil"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::All"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if value.nil?\n  return\nend\nself.with_validator do |validator|\n  value.each_with_index do |item, idx|\n    (validator.at_path(\"[#{idx}]\")).validate(item, constraint.constraints)\n  end\nend\n"}},{"id":"validate(value:_,constraint:AVD::Constraints::All):NoReturn-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::All):NoReturn-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::All"}],"args_string":"(value : _, constraint : AVD::Constraints::All) : NoReturn","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/all.cr#L85","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::All"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NoReturn","visibility":"Public","body":"self.raise_invalid_type(value, \"Hash | Indexable\")"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Constraints/AtLeastOneOf","path":"Athena/Validator/Constraints/AtLeastOneOf.html","kind":"class","full_name":"Athena::Validator::Constraints::AtLeastOneOf","name":"AtLeastOneOf","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraints/Composite","kind":"class","full_name":"Athena::Validator::Constraints::Composite","name":"Composite"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraints/Composite","kind":"class","full_name":"Athena::Validator::Constraints::Composite","name":"Composite"},{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/at_least_one_of.cr","line_number":87,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/at_least_one_of.cr#L87"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"AT_LEAST_ONE_OF_ERROR","name":"AT_LEAST_ONE_OF_ERROR","value":"\"811994eb-b634-42f5-ae98-13eec66481b6\"","doc":null,"summary":null},{"id":"DEFAULT_ERROR_MESSAGE","name":"DEFAULT_ERROR_MESSAGE","value":"\"This value should satisfy at least one of the following constraints:\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value satisfies at least one of the provided constraints.\nValidation stops as soon as one constraint is satisfied.\n\n## Configuration\n\n### Required Arguments\n\n#### constraints\n\n**Type:** `Array(AVD::Constraint) | AVD::Constraint`\n\nThe `AVD::Constraint`(s) from which at least one of has to be satisfied in order for the validation to succeed.\n\n### Optional Arguments\n\n#### include_internal_messages\n\n**Type:** `Bool` **Default:** `true`\n\nIf the validation failed message should include the list of messages for the internal constraints.\nSee the [message](#message) argument for an example.\n\n#### message_collection\n\n**Type:** `String` **Default:** `Each element of this collection should satisfy its own set of constraints.`\n\nThe message that will be shown if validation fails and the internal constraint is an `AVD::Constraints::All`.\nSee the [message](#message) argument for an example.\n\n#### message\n\n**Type:** `String` **Default:** `This value should satisfy at least one of the following constraints:`\n\nThe intro that will be shown if validation fails.\nBy default, it'll be followed by the list of messages from the internal [constraints](#constraints);\nconfigurable via the [include_internal_messages](#include_internal_messages) argument.\n\nFor example, if the `grades` property in the example below fails to validate, the message will be:\n\n> This value should satisfy at least one of the following constraints: [1] This value is too short. It should have 3 items or more. [2] Each element of this collection should satisfy its own set of constraints.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.\n\n## Usage\n\n```\nclass Example\n  include AVD::Validatable\n\n  def initialize(@password : String, @grades : Array(Int32)); end\n\n  # Asserts the password contains an `#` or is at least 10 characters long.\n  @[Assert::AtLeastOneOf([\n    @[Assert::Regex(/#/)],\n    @[Assert::Size(10..)],\n  ])]\n  getter password : String\n\n  # Asserts the `grades` array contains at least 3 elements or\n  # that each element is greater than or equal to 5.\n  @[Assert::AtLeastOneOf([\n    @[Assert::Size(3..)],\n    @[Assert::All([\n      @[Assert::GreaterThanOrEqual(5)],\n    ])],\n  ])]\n  getter grades : Array(Int32)\nend\n```\n\nNOTE: The annotation approach only supports two levels of nested annotations.\nManually wire up the constraint via code if you require more than that.","summary":"<p>Validates that a value satisfies at least one of the provided constraints.</p>","class_methods":[],"constructors":[{"id":"new(constraints:Array(AVD::Constraint)|AVD::Constraint,include_internal_messages:Bool=true,message_collection:String=&quot;Eachelementofthiscollectionshouldsatisfyitsownsetofconstraints.&quot;,message:String=&quot;Thisvalueshouldsatisfyatleastoneofthefollowingconstraints:&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(constraints:Array(AVD::Constraint)|AVD::Constraint,include_internal_messages:Bool=true,message_collection:String=&quot;Eachelementofthiscollectionshouldsatisfyitsownsetofconstraints.&quot;,message:String=&quot;Thisvalueshouldsatisfyatleastoneofthefollowingconstraints:&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"constraints","doc":null,"default_value":"","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint"},{"name":"include_internal_messages","doc":null,"default_value":"true","external_name":"include_internal_messages","restriction":"Bool"},{"name":"message_collection","doc":null,"default_value":"\"Each element of this collection should satisfy its own set of constraints.\"","external_name":"message_collection","restriction":"String"},{"name":"message","doc":null,"default_value":"\"This value should satisfy at least one of the following constraints:\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(constraints : Array(AVD::Constraint) | AVD::Constraint, include_internal_messages : Bool = <span class=\"n\">true</span>, message_collection : String = <span class=\"s\">&quot;Each element of this collection should satisfy its own set of constraints.&quot;</span>, message : String = <span class=\"s\">&quot;This value should satisfy at least one of the following constraints:&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/at_least_one_of.cr#L98","def":{"name":"new","args":[{"name":"constraints","doc":null,"default_value":"","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint"},{"name":"include_internal_messages","doc":null,"default_value":"true","external_name":"include_internal_messages","restriction":"Bool"},{"name":"message_collection","doc":null,"default_value":"\"Each element of this collection should satisfy its own set of constraints.\"","external_name":"message_collection","restriction":"String"},{"name":"message","doc":null,"default_value":"\"This value should satisfy at least one of the following constraints:\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(constraints, include_internal_messages, message_collection, message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"include_internal_messages:Bool-instance-method","html_id":"include_internal_messages:Bool-instance-method","name":"include_internal_messages","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/at_least_one_of.cr#L95","def":{"name":"include_internal_messages","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@include_internal_messages"}},{"id":"message_collection:String-instance-method","html_id":"message_collection:String-instance-method","name":"message_collection","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/at_least_one_of.cr#L96","def":{"name":"message_collection","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@message_collection"}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/at_least_one_of.cr#L87","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraints/AtLeastOneOf/Validator","path":"Athena/Validator/Constraints/AtLeastOneOf/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::AtLeastOneOf::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/at_least_one_of.cr","line_number":109,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/at_least_one_of.cr#L109"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/AtLeastOneOf","kind":"class","full_name":"Athena::Validator::Constraints::AtLeastOneOf","name":"AtLeastOneOf"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::AtLeastOneOf):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::AtLeastOneOf):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::AtLeastOneOf"}],"args_string":"(value : _, constraint : AVD::Constraints::AtLeastOneOf) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/at_least_one_of.cr#L111","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::AtLeastOneOf"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"messages = [constraint.message]\nvalidator = self.context.validator\nconstraint.constraints.each_with_index do |item, idx|\n  violations = validator.validate(value, [item])\n  if violations.empty?\n    return\n  end\n  if constraint.include_internal_messages\n    messages << String.build do |str|\n      str << \" [#{idx + 1}] \"\n      str << (if item.is_a?(AVD::Constraints::All)\n        constraint.message_collection\n      else\n        violations.first.message\n      end)\n    end\n  end\nend\nself.context.add_violation(messages.join, AT_LEAST_ONE_OF_ERROR)\n"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Constraints/Blank","path":"Athena/Validator/Constraints/Blank.html","kind":"class","full_name":"Athena::Validator::Constraints::Blank","name":"Blank","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/blank.cr","line_number":32,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/blank.cr#L32"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"NOT_BLANK_ERROR","name":"NOT_BLANK_ERROR","value":"\"c815f901-c581-4fb7-a85d-b8c5bc757959\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is blank; meaning equal to an empty string or `nil`.\n\n## Configuration\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value should be blank.`\n\nThe message that will be shown if the value is not blank.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is blank; meaning equal to an empty string or <code>nil</code>.</p>","class_methods":[],"constructors":[{"id":"new(message:String=&quot;Thisvalueshouldbeblank.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(message:String=&quot;Thisvalueshouldbeblank.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"This value should be blank.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(message : String = <span class=\"s\">&quot;This value should be blank.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/blank.cr#L39","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"\"This value should be blank.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/blank.cr#L32","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraints/Blank/Validator","path":"Athena/Validator/Constraints/Blank/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::Blank::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/blank.cr","line_number":47,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/blank.cr#L47"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/Blank","kind":"class","full_name":"Athena::Validator::Constraints::Blank","name":"Blank"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::Blank):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::Blank):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Blank"}],"args_string":"(value : _, constraint : AVD::Constraints::Blank) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/blank.cr#L49","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Blank"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if value.nil?\n  return\nend\nif (value.responds_to?(:\"blank?\")) && value.blank?\n  return\nend\nself.context.add_violation(constraint.message, NOT_BLANK_ERROR, value)\n"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Constraints/Callback","path":"Athena/Validator/Constraints/Callback.html","kind":"class","full_name":"Athena::Validator::Constraints::Callback","name":"Callback","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/callback.cr","line_number":120,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/callback.cr#L120"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Allows creating totally custom validation rules, assigning any violations to specific fields on your object.\nThis process is achieved via using one or more _callback_ methods which will be invoked during the validation process.\n\nNOTE: The callback method itself does _fail_ or return any value.\nInstead it should directly add violations to the `AVD::ExecutionContextInterface` argument.\n\n## Configuration\n\n### Required Arguments\n\n#### callback\n\n**Type:** `AVD::Constraints::Callback::CallbackProc?` **Default:** `nil`\n\nThe proc that should be invoked as the callback for this constraint.\n\nNOTE: If this argument is not supplied, the [callback_name](#callback_name) argument must be.\n\n#### callback_name\n\n**Type:** `String?` **Default:** `nil`\n\nThe name of the method that should be invoked as the callback for this constraint.\n\nNOTE: If this argument is not supplied, the [callback](#callback) argument must be.\n\n### Optional Arguments\n\nNOTE: This constraint does not support a `message` argument.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.\n\n## Usage\n\nThe callback constraint supports two callback methods when validating objects, and one callback method when using the constraint directly.\n\n### Instance Methods\n\nTo define an instance callback method, apply the `@[Assert::Callback]` method to a public instance method defined within an object.\nThis method should accept two arguments: the `AVD::ExecutionContextInterface` to which violations should be added,\nand the `AVD::Constraint@payload` from the related constraint.\n\nMore than one callback method can exist on a type, and the method name does not have to be `validate`.\n\n```\nclass Example\n  include AVD::Validatable\n\n  SPAM_DOMAINS = [\"fake.com\", \"spam.net\"]\n\n  def initialize(@domain_name : String); end\n\n  @[Assert::Callback]\n  def validate(context : AVD::ExecutionContextInterface, payload : Hash(String, String)?) : Nil\n    # Validate that the `domain_name` is not spammy.\n    return unless SPAM_DOMAINS.includes? @domain_name\n\n    context\n      .build_violation(\"This domain name is not legit!\")\n      .at_path(\"domain_name\")\n      .add\n  end\nend\n```\n\n### Class Methods\n\nThe callback method can also be defined as a class method.\nSince class methods do not have access to the related object instance, it is passed in as an argument.\n\nThat argument is typed as `AVD::Constraints::Callback::Value` which exposes a `AVD::Constraints::Callback::Value#get`\nmethod that can be used as an easier syntax than `.as`.\n\n```\nclass Example\n  include AVD::Validatable\n\n  SPAM_DOMAINS = [\"fake.com\", \"spam.net\"]\n\n  @[Assert::Callback]\n  def self.validate(value : AVD::Constraints::Callback::Value, context : AVD::ExecutionContextInterface, payload : Hash(String, String)?) : Nil\n    # Get the object from the value, typed as our `Example` class.\n    object = value.get self\n\n    # Validate that the `domain_name` is not spammy.\n    return unless SPAM_DOMAINS.includes? object.domain_name\n\n    context\n      .build_violation(\"This domain name is not legit!\")\n      .at_path(\"domain_name\")\n      .add\n  end\n\n  def initialize(@domain_name : String); end\n\n  getter domain_name : String\nend\n```\n\n### Procs/Blocks\n\nWhen working with constraints in a non object context, a callback passed in as a proc/block.\n`AVD::Constraints::Callback::CallbackProc` alias can be used to more easily create a callback proc.\n`AVD::Constraints::Callback.with_callback` can be used to create a callback constraint, using the block as the callback proc.\nSee the related types for more information.\n\nProc/block based callbacks operate similarly to [Class Methods](#static-methods) in that they receive the value as an argument.","summary":"<p>Allows creating totally custom validation rules, assigning any violations to specific fields on your object.</p>","class_methods":[{"id":"with_callback(**args,&block:AVD::Constraints::Callback::ValueContainer,AVD::ExecutionContextInterface,Hash(String,String)?->):AVD::Constraints::Callback-class-method","html_id":"with_callback(**args,&block:AVD::Constraints::Callback::ValueContainer,AVD::ExecutionContextInterface,Hash(String,String)?->):AVD::Constraints::Callback-class-method","name":"with_callback","doc":"Convenience method for creating a `AVD::Constraints::Callback` with\nthe given *&block* as the callback.\n\n```\n# Instantiate a callback constraint, using the block as the callback\nconstraint = AVD::Constraints::Callback.with_callback do |value, context, payload|\n  next if (value = value.get(Int32)).even?\n\n  context.add_violation \"This value should be even.\"\nend\n```","summary":"<p>Convenience method for creating a <code><a href=\"../../../Athena/Validator/Constraints/Callback.html\">AVD::Constraints::Callback</a></code> with the given <em>&block</em> as the callback.</p>","abstract":false,"args":[],"args_string":"(**args, &block : AVD::Constraints::Callback::ValueContainer, AVD::ExecutionContextInterface, Hash(String, String)? -> ) : AVD::Constraints::Callback","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/callback.cr#L169","def":{"name":"with_callback","args":[],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":3,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(AVD::Constraints::Callback::ValueContainer, AVD::ExecutionContextInterface, Hash(String, String) | ::Nil -> )"},"return_type":"AVD::Constraints::Callback","visibility":"Public","body":"new(**args, callback: block)"}}],"constructors":[{"id":"new(callback:AVD::Constraints::Callback::CallbackProc?=nil,callback_name:String?=nil,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(callback:AVD::Constraints::Callback::CallbackProc?=nil,callback_name:String?=nil,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"callback","doc":null,"default_value":"nil","external_name":"callback","restriction":"AVD::Constraints::Callback::CallbackProc | ::Nil"},{"name":"callback_name","doc":null,"default_value":"nil","external_name":"callback_name","restriction":"String | ::Nil"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(callback : AVD::Constraints::Callback::CallbackProc? = <span class=\"n\">nil</span>, callback_name : String? = <span class=\"n\">nil</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/callback.cr#L194","def":{"name":"new","args":[{"name":"callback","doc":null,"default_value":"nil","external_name":"callback","restriction":"AVD::Constraints::Callback::CallbackProc | ::Nil"},{"name":"callback_name","doc":null,"default_value":"nil","external_name":"callback_name","restriction":"String | ::Nil"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(callback, callback_name, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"callback:AVD::Constraints::Callback::CallbackProc?-instance-method","html_id":"callback:AVD::Constraints::Callback::CallbackProc?-instance-method","name":"callback","doc":"Returns the proc that this constraint should invoke.","summary":"<p>Returns the proc that this constraint should invoke.</p>","abstract":false,"args":[],"args_string":" : AVD::Constraints::Callback::CallbackProc?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/callback.cr#L192","def":{"name":"callback","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Constraints::Callback::CallbackProc | ::Nil","visibility":"Public","body":"@callback"}},{"id":"callback_name:String?-instance-method","html_id":"callback_name:String?-instance-method","name":"callback_name","doc":"Returns the name of the callback method this constraint should invoke.","summary":"<p>Returns the name of the callback method this constraint should invoke.</p>","abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/callback.cr#L189","def":{"name":"callback_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@callback_name"}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/callback.cr#L120","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraints/Callback/CallbackProc","path":"Athena/Validator/Constraints/Callback/CallbackProc.html","kind":"alias","full_name":"Athena::Validator::Constraints::Callback::CallbackProc","name":"CallbackProc","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-validator/src/constraints/callback.cr","line_number":186,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/callback.cr#L186"}],"repository_name":"athena","program":false,"enum":false,"alias":true,"aliased":"Proc(Athena::Validator::Constraints::Callback::ValueContainer, Athena::Validator::ExecutionContextInterface, (Hash(String, String) | Nil), Nil)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/Callback","kind":"class","full_name":"Athena::Validator::Constraints::Callback","name":"Callback"},"doc":"Convenience alias to make creating `AVD::Constraints::Callback` procs easier.\n\n```\n# Create a proc to handle the validation\ncallback = AVD::Constraints::Callback::CallbackProc.new do |value, context, payload|\n  return if (value = value.get(Int32)).even?\n\n  context.add_violation \"This value should be even.\"\nend\n\n# Instantiate a callback constraint with this proc\nconstraint = AVD::Constraints::Callback.new callback: callback\n```","summary":"<p>Convenience alias to make creating <code><a href=\"../../../../Athena/Validator/Constraints/Callback.html\">AVD::Constraints::Callback</a></code> procs easier.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Constraints/Callback/Validator","path":"Athena/Validator/Constraints/Callback/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::Callback::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/callback.cr","line_number":205,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/callback.cr#L205"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/Callback","kind":"class","full_name":"Athena::Validator::Constraints::Callback","name":"Callback"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::Callback):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::Callback):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Callback"}],"args_string":"(value : _, constraint : AVD::Constraints::Callback) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/callback.cr#L207","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Callback"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if ((value.is_a?(AVD::Validatable) && (name = constraint.callback_name)) && (metadata = self.context.metadata)) && (metadata.is_a?(AVD::Metadata::ClassMetadata))\n  metadata.invoke_callback(name, value, self.context, constraint.payload)\nelse\n  if callback = constraint.callback\n    callback.call(Value.new(value), self.context, constraint.payload)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Constraints/Callback/Value","path":"Athena/Validator/Constraints/Callback/Value.html","kind":"struct","full_name":"Athena::Validator::Constraints::Callback::Value(T)","name":"Value","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraints/Callback/ValueContainer","kind":"struct","full_name":"Athena::Validator::Constraints::Callback::ValueContainer","name":"ValueContainer"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraints/Callback/ValueContainer","kind":"struct","full_name":"Athena::Validator::Constraints::Callback::ValueContainer","name":"ValueContainer"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/callback.cr","line_number":125,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/callback.cr#L125"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/Callback","kind":"class","full_name":"Athena::Validator::Constraints::Callback","name":"Callback"},"doc":"Wrapper type to allow passing arbitrarily typed values as arguments in the `AVD::Constraints::Callback::CallbackProc`.","summary":"<p>Wrapper type to allow passing arbitrarily typed values as arguments in the <code><a href=\"../../../../Athena/Validator/Constraints/Callback/CallbackProc.html\">AVD::Constraints::Callback::CallbackProc</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(value:T)-class-method","html_id":"new(value:T)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(value : T)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/callback.cr#L125","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Value(T).allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"==(other):Bool-instance-method","html_id":"==(other):Bool-instance-method","name":"==","doc":"Returns `true` if this struct is equal to *other*.\n\nBoth structs's instance vars are compared to each other. Thus, two\nstructs are considered equal if each of their instance variables are\nequal. Subclasses should override this method to provide specific\nequality semantics.\n\n```\nstruct Point\n  def initialize(@x : Int32, @y : Int32)\n  end\nend\n\np1 = Point.new 1, 2\np2 = Point.new 1, 2\np3 = Point.new 3, 4\n\np1 == p2 # => true\np1 == p3 # => false\n```","summary":"<p>Returns <code>true</code> if this struct is equal to <em>other</em>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/callback.cr#L153","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@value == other"}},{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/callback.cr#L125","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@value.clone)"}},{"id":"copy_with(value_value=@value)-instance-method","html_id":"copy_with(value_value=@value)-instance-method","name":"copy_with","doc":null,"summary":null,"abstract":false,"args":[{"name":"_value","doc":null,"default_value":"@value","external_name":"value","restriction":""}],"args_string":"(value _value = @value)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/callback.cr#L125","def":{"name":"copy_with","args":[{"name":"_value","doc":null,"default_value":"@value","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(_value)"}},{"id":"get(as_t:T.class):TforallT-instance-method","html_id":"get(as_t:T.class):TforallT-instance-method","name":"get","doc":"Returns the value as `T`.\n\nIf used inside a `AVD::Constraints::Callback@class-method`.\n\n```\n# Get the wrapped value as the type of the current class.\nobject = value.get self\n```\n\nIf used inside a `AVD::Constraints::Callback@procsblocks`.\n```\n# Get the wrapped value as the expected type.\nvalue = value.get Int32\n\n# Alternatively, can use normal Crystal semantics for narrowing the type.\nvalue = value.value\n\ncase value\nwhen Int32 then \"value is Int32\"\nwhen String then \"value is String\"\nend","summary":"<p>Returns the value as <code>T</code>.</p>","abstract":false,"args":[{"name":"_t","doc":null,"default_value":"","external_name":"as","restriction":"T.class"}],"args_string":"(as _t : <span class=\"t\">T</span>.<span class=\"k\">class</span>) : T forall T","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/callback.cr#L148","def":{"name":"get","args":[{"name":"_t","doc":null,"default_value":"","external_name":"as","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"(@value.as?(T)).not_nil!"}},{"id":"value:T-instance-method","html_id":"value:T-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : T","source_link":null,"def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"@value"}}],"macros":[{"id":"method_missing(call)-macro","html_id":"method_missing(call)-macro","name":"method_missing","doc":null,"summary":null,"abstract":false,"args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"args_string":"(call)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/callback.cr#L126","def":{"name":"method_missing","args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      @value.\n{{ call }}\n\n    \n"}}],"types":[]}]},{"html_id":"athena/Athena/Validator/Constraints/Choice","path":"Athena/Validator/Constraints/Choice.html","kind":"class","full_name":"Athena::Validator::Constraints::Choice","name":"Choice","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/choice.cr","line_number":99,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/choice.cr#L99"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"NO_SUCH_CHOICE_ERROR","name":"NO_SUCH_CHOICE_ERROR","value":"\"c7398ea5-e787-4ee9-9fca-5f2c130614d6\"","doc":null,"summary":null},{"id":"TOO_FEW_ERROR","name":"TOO_FEW_ERROR","value":"\"3573357d-c9a8-4633-a742-c001086fd5aa\"","doc":null,"summary":null},{"id":"TOO_MANY_ERROR","name":"TOO_MANY_ERROR","value":"\"91d0d22b-a693-4b9c-8b41-bc6392cf89f4\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is one of a given set of valid choices;\ncan also be used to validate that each item in a collection is one of those valid values.\n\n## Configuration\n\n### Required Arguments\n\n#### choices\n\n**Type:** `Array(String | Number::Primitive | Symbol)`\n\nThe choices that are considered valid.\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value is not a valid choice.`\n\nThe message that will be shown if the value is not a valid choice and [multiple](#multiple) is `false`.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ choices }}` - The available choices.\n\n#### multiple_message\n\n**Type:** `String` **Default:** `One or more of the given values is invalid.`\n\nThe message that will be shown if one of the values is not a valid choice and [multiple](#multiple) is `true`.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ choices }}` - The available choices.\n\n#### min_message\n\n**Type:** `String` **Default:** `You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.`\n\nThe message that will be shown if too few choices are chosen as per the [range](#range) option.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ choices }}` - The available choices.\n* `{{ limit }}` - If [multiple](#multiple) is true, enforces that at most this many values may be selected in order to be valid.\n\n#### max_message\n\n**Type:** `String` **Default:** `You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.`\n\nThe message that will be shown if too many choices are chosen as per the [range](#range) option.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ choices }}` - The available choices.\n* `{{ limit }}` - If [multiple](#multiple) is true, enforces that no more than this many values may be selected in order to be valid.\n\n#### range\n\n**Type:** `::Range?` **Default:** `nil`\n\nIf [multiple](#multiple) is true, is used to define the \"range\" of how many choices must be valid for the value to be considered valid.\nFor example, if set to `(3..)`, but there are only 2 valid items in the input enumerable then validation will fail.\n\nBeginless/endless ranges can be used to define only a lower/upper bound.\n\n#### multiple\n\n**Type:** `Bool` **Default:** `false`\n\nIf `true`, the input value is expected to be an `Enumerable` instead of a single scalar value.\nThe constraint will check each item in the enumerable is valid choice.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is one of a given set of valid choices; can also be used to validate that each item in a collection is one of those valid values.</p>","class_methods":[],"constructors":[{"id":"new(choices:Array(String|Number::Primitive|Symbol),message:String=&quot;Thisvalueisnotavalidchoice.&quot;,multiple_message:String=&quot;Oneormoreofthegivenvaluesisinvalid.&quot;,min_message:String=&quot;Youmustselectatleast{{limit}}choice.|Youmustselectatleast{{limit}}choices.&quot;,max_message:String=&quot;Youmustselectatmost{{limit}}choice.|Youmustselectatmost{{limit}}choices.&quot;,multiple:Bool=false,range:::Range?=nil,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(choices:Array(String|Number::Primitive|Symbol),message:String=&quot;Thisvalueisnotavalidchoice.&quot;,multiple_message:String=&quot;Oneormoreofthegivenvaluesisinvalid.&quot;,min_message:String=&quot;Youmustselectatleast{{limit}}choice.|Youmustselectatleast{{limit}}choices.&quot;,max_message:String=&quot;Youmustselectatmost{{limit}}choice.|Youmustselectatmost{{limit}}choices.&quot;,multiple:Bool=false,range:::Range?=nil,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"choices","doc":null,"default_value":"","external_name":"choices","restriction":"Array(String | Number::Primitive | Symbol)"},{"name":"message","doc":null,"default_value":"\"This value is not a valid choice.\"","external_name":"message","restriction":"String"},{"name":"multiple_message","doc":null,"default_value":"\"One or more of the given values is invalid.\"","external_name":"multiple_message","restriction":"String"},{"name":"min_message","doc":null,"default_value":"\"You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.\"","external_name":"min_message","restriction":"String"},{"name":"max_message","doc":null,"default_value":"\"You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.\"","external_name":"max_message","restriction":"String"},{"name":"multiple","doc":null,"default_value":"false","external_name":"multiple","restriction":"Bool"},{"name":"range","doc":null,"default_value":"nil","external_name":"range","restriction":"::Range | ::Nil"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(choices : Array(String | Number::Primitive | Symbol), message : String = <span class=\"s\">&quot;This value is not a valid choice.&quot;</span>, multiple_message : String = <span class=\"s\">&quot;One or more of the given values is invalid.&quot;</span>, min_message : String = <span class=\"s\">&quot;You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.&quot;</span>, max_message : String = <span class=\"s\">&quot;You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.&quot;</span>, multiple : Bool = <span class=\"n\">false</span>, range : ::Range? = <span class=\"n\">nil</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/choice.cr#L121","def":{"name":"new","args":[{"name":"choices","doc":null,"default_value":"","external_name":"choices","restriction":"Array(String | Number::Primitive | Symbol)"},{"name":"message","doc":null,"default_value":"\"This value is not a valid choice.\"","external_name":"message","restriction":"String"},{"name":"multiple_message","doc":null,"default_value":"\"One or more of the given values is invalid.\"","external_name":"multiple_message","restriction":"String"},{"name":"min_message","doc":null,"default_value":"\"You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.\"","external_name":"min_message","restriction":"String"},{"name":"max_message","doc":null,"default_value":"\"You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.\"","external_name":"max_message","restriction":"String"},{"name":"multiple","doc":null,"default_value":"false","external_name":"multiple","restriction":"Bool"},{"name":"range","doc":null,"default_value":"nil","external_name":"range","restriction":"::Range | ::Nil"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(choices.map do |__arg0|\n  __arg0.as(String | Number::Primitive | Symbol)\nend, message, multiple_message, min_message, max_message, multiple, range.try(&.begin), range.try(&.end), groups, payload)"}}],"instance_methods":[{"id":"choices:Array(String|Number::Primitive|Symbol)-instance-method","html_id":"choices:Array(String|Number::Primitive|Symbol)-instance-method","name":"choices","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String | Number::Primitive | Symbol)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/choice.cr#L110","def":{"name":"choices","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String | Number::Primitive | Symbol)","visibility":"Public","body":"@choices"}},{"id":"max:Number::Primitive?-instance-method","html_id":"max:Number::Primitive?-instance-method","name":"max","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Number::Primitive?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/choice.cr#L117","def":{"name":"max","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Number::Primitive | ::Nil","visibility":"Public","body":"@max"}},{"id":"max_message:String-instance-method","html_id":"max_message:String-instance-method","name":"max_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/choice.cr#L114","def":{"name":"max_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@max_message"}},{"id":"min:Number::Primitive?-instance-method","html_id":"min:Number::Primitive?-instance-method","name":"min","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Number::Primitive?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/choice.cr#L116","def":{"name":"min","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Number::Primitive | ::Nil","visibility":"Public","body":"@min"}},{"id":"min_message:String-instance-method","html_id":"min_message:String-instance-method","name":"min_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/choice.cr#L113","def":{"name":"min_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@min_message"}},{"id":"multiple?:Bool-instance-method","html_id":"multiple?:Bool-instance-method","name":"multiple?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/choice.cr#L119","def":{"name":"multiple?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@multiple"}},{"id":"multiple_message:String-instance-method","html_id":"multiple_message:String-instance-method","name":"multiple_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/choice.cr#L112","def":{"name":"multiple_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@multiple_message"}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/choice.cr#L99","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraints/Choice/Validator","path":"Athena/Validator/Constraints/Choice/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::Choice::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/choice.cr","line_number":150,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/choice.cr#L150"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/Choice","kind":"class","full_name":"Athena::Validator::Constraints::Choice","name":"Choice"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:Enumerable?,constraint:AVD::Constraints::Choice):Nil-instance-method","html_id":"validate(value:Enumerable?,constraint:AVD::Constraints::Choice):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Enumerable | ::Nil"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Choice"}],"args_string":"(value : Enumerable?, constraint : AVD::Constraints::Choice) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/choice.cr#L152","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Enumerable | ::Nil"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Choice"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if value.nil?\n  return\nend\nif constraint.multiple?\nelse\n  self.raise_invalid_type(value, \"Enumerable\")\nend\nchoices = constraint.choices\nvalue.each do |v|\n  if choices.includes?(v)\n  else\n    (((self.context.build_violation(constraint.multiple_message, NO_SUCH_CHOICE_ERROR, v)).add_parameter(\"{{ choices }}\", choices)).invalid_value(v)).add\n    return\n  end\nend\nsize = value.size\nif (limit = constraint.min) && (size < limit)\n  (((((self.context.build_violation(constraint.min_message, TOO_FEW_ERROR, value)).add_parameter(\"{{ limit }}\", limit)).add_parameter(\"{{ choices }}\", choices)).plural(limit.to_i)).invalid_value(value)).add\n  return\nend\nif (limit = constraint.max) && (size > limit)\n  (((((self.context.build_violation(constraint.max_message, TOO_MANY_ERROR, value)).add_parameter(\"{{ limit }}\", limit)).add_parameter(\"{{ choices }}\", choices)).plural(limit.to_i)).invalid_value(value)).add\n  return\nend\n"}},{"id":"validate(value:_,constraint:AVD::Constraints::Choice):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::Choice):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Choice"}],"args_string":"(value : _, constraint : AVD::Constraints::Choice) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/choice.cr#L202","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Choice"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if value.nil?\n  return\nend\nif constraint.multiple? && (!value.is_a?(Enumerable))\n  self.raise_invalid_type(value, \"Enumerable\")\nend\nif constraint.choices.includes?(value)\n  return\nend\n((self.context.build_violation(constraint.message, NO_SUCH_CHOICE_ERROR, value)).add_parameter(\"{{ choices }}\", constraint.choices)).add\n"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Constraints/ComparisonValidator","path":"Athena/Validator/Constraints/ComparisonValidator.html","kind":"struct","full_name":"Athena::Validator::Constraints::ComparisonValidator","name":"ComparisonValidator","abstract":true,"superclass":{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/abstract_comparison_validator.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/abstract_comparison_validator.cr#L2"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Validator/Constraints/EqualTo/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::EqualTo::Validator","name":"Validator"},{"html_id":"athena/Athena/Validator/Constraints/GreaterThan/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::GreaterThan::Validator","name":"Validator"},{"html_id":"athena/Athena/Validator/Constraints/GreaterThanOrEqual/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::GreaterThanOrEqual::Validator","name":"Validator"},{"html_id":"athena/Athena/Validator/Constraints/LessThan/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::LessThan::Validator","name":"Validator"},{"html_id":"athena/Athena/Validator/Constraints/LessThanOrEqual/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::LessThanOrEqual::Validator","name":"Validator"},{"html_id":"athena/Athena/Validator/Constraints/NotEqualTo/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::NotEqualTo::Validator","name":"Validator"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Defines common logic for comparison based constraint validators.","summary":"<p>Defines common logic for comparison based constraint validators.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"compare_values(actual:_,expected:_):Bool-instance-method","html_id":"compare_values(actual:_,expected:_):Bool-instance-method","name":"compare_values","doc":"Returns `true` if the provided *actual* and *expected* values are compatible, otherwise `false`.","summary":"<p>Returns <code>true</code> if the provided <em>actual</em> and <em>expected</em> values are compatible, otherwise <code>false</code>.</p>","abstract":true,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"_"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"_"}],"args_string":"(actual : _, expected : _) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/abstract_comparison_validator.cr#L4","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"_"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":""}},{"id":"error_code:String-instance-method","html_id":"error_code:String-instance-method","name":"error_code","doc":"Returns the expected error code for `self`.","summary":"<p>Returns the expected error code for <code>self</code>.</p>","abstract":true,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/abstract_comparison_validator.cr#L7","def":{"name":"error_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}},{"id":"validate(value:_,constraint:AVD::Constraints::AbstractComparison):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::AbstractComparison):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::AbstractComparison"}],"args_string":"(value : _, constraint : AVD::Constraints::AbstractComparison) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/abstract_comparison_validator.cr#L10","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::AbstractComparison"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if value.nil?\n  return\nend\ncompared_value = constraint.value\nif self.compare_values(value, compared_value)\n  return\nend\n(((self.context.build_violation(constraint.message, self.error_code, value)).add_parameter(\"{{ compared_value }}\", compared_value)).add_parameter(\"{{ compared_value_type }}\", constraint.value_type)).add\n"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Constraints/Composite","path":"Athena/Validator/Constraints/Composite.html","kind":"class","full_name":"Athena::Validator::Constraints::Composite","name":"Composite","abstract":true,"superclass":{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/composite.cr","line_number":15,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/composite.cr#L15"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Validator/Constraints/All","kind":"class","full_name":"Athena::Validator::Constraints::All","name":"All"},{"html_id":"athena/Athena/Validator/Constraints/AtLeastOneOf","kind":"class","full_name":"Athena::Validator::Constraints::AtLeastOneOf","name":"AtLeastOneOf"},{"html_id":"athena/Athena/Validator/Constraints/Compound","kind":"class","full_name":"Athena::Validator::Constraints::Compound","name":"Compound"},{"html_id":"athena/Athena/Validator/Constraints/Sequentially","kind":"class","full_name":"Athena::Validator::Constraints::Sequentially","name":"Sequentially"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"A constraint composed of other constraints.\nhandles normalizing the groups of the nested constraints, via the following algorithm:\n\n* If groups are passed explicitly to the composite constraint, but\n  not to the nested constraints, the options of the composite\n  constraint are copied to the nested constraints\n* If groups are passed explicitly to the nested constraints, but not\n  to the composite constraint, the groups of all nested constraints\n  are merged and used as groups for the composite constraint\n* If groups are passed explicitly to both the composite and its nested\n  constraints, the groups of the nested constraints must be a subset\n  of the groups of the composite constraint.\n\nNOTE: You most likely want to use `AVD::Constraints::Compound` instead of this type.","summary":"<p>A constraint composed of other constraints.</p>","class_methods":[],"constructors":[{"id":"new(constraints:Array(AVD::Constraint)|AVD::Constraint,message:String,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(constraints:Array(AVD::Constraint)|AVD::Constraint,message:String,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"constraints","doc":null,"default_value":"","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(constraints : Array(AVD::Constraint) | AVD::Constraint, message : String, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/composite.cr#L18","def":{"name":"new","args":[{"name":"constraints","doc":null,"default_value":"","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(constraints, message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_implicit_group(group:String):Nil-instance-method","html_id":"add_implicit_group(group:String):Nil-instance-method","name":"add_implicit_group","doc":"Adds the provided *group* to `#groups` if `self` is in the `AVD::Constraint::DEFAULT_GROUP`.","summary":"<p>Adds the provided <em>group</em> to <code>#groups</code> if <code>self</code> is in the <code><a href=\"../../../Athena/Validator/Constraint.html#DEFAULT_GROUP\">AVD::Constraint::DEFAULT_GROUP</a></code>.</p>","abstract":false,"args":[{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":"String"}],"args_string":"(group : String) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/composite.cr#L58","def":{"name":"add_implicit_group","args":[{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"super(group)\n@constraints.each(&.add_implicit_group(group))\n"}},{"id":"constraints:Array(AVD::Constraint)-instance-method","html_id":"constraints:Array(AVD::Constraint)-instance-method","name":"constraints","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(AVD::Constraint)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/composite.cr#L16","def":{"name":"constraints","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(AVD::Constraint)","visibility":"Public","body":"@constraints"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Constraints/Compound","path":"Athena/Validator/Constraints/Compound.html","kind":"class","full_name":"Athena::Validator::Constraints::Compound","name":"Compound","abstract":true,"superclass":{"html_id":"athena/Athena/Validator/Constraints/Composite","kind":"class","full_name":"Athena::Validator::Constraints::Composite","name":"Composite"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraints/Composite","kind":"class","full_name":"Athena::Validator::Constraints::Composite","name":"Composite"},{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/compound.cr","line_number":59,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/compound.cr#L59"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Allows creating a custom set of reusable constraints, representing rules to use consistently across your application.\n\nNOTE: See `AVD::Constraint@custom-constraints` for common documentation on defining custom constraints.\n\n## Configuration\n\n### Optional Arguments\n\nNOTE: This constraint does not support a `message` argument.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.\n\n## Usage\n\nThis constraint is not used directly on its own;\ninstead it's used to create another constraint.\n\n```\n# Define a compound constraint to centralize the logic to validate a password.\n#\n# NOTE: The constraint _MUST_ be defined within the `AVD::Constraints` namespace for implementation reasons.  This may change in the future.\nclass AVD::Constraints::ValidPassword < AVD::Constraints::Compound\n  # Define a method that returns an array of the constraints we want to be a part of `self`.\n  def constraints : Array(AVD::Constraint)\n    [\n      AVD::Constraints::NotBlank.new,       # Not empty/null\n      AVD::Constraints::Size.new(12..),     # At least 12 characters longs\n      AVD::Constraints::Regex.new(/^\\d.*/), # Must start with a number\n    ]\n  end\nend\n```\n\nWe can then use this constraint as we would any other.\n\nEither as an annotation\n\n```\n@[Assert::ValidPassword]\ngetter password : String\n```\nor directly.\n\n```\nconstraint = AVD::Constraints::ValidPassword.new\n```","summary":"<p>Allows creating a custom set of reusable constraints, representing rules to use consistently across your application.</p>","class_methods":[],"constructors":[{"id":"new(groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/compound.cr#L60","def":{"name":"new","args":[{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"constraints:Array(AVD::Constraint)-instance-method","html_id":"constraints:Array(AVD::Constraint)-instance-method","name":"constraints","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Array(AVD::Constraint)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/compound.cr#L71","def":{"name":"constraints","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(AVD::Constraint)","visibility":"Public","body":""}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/compound.cr#L67","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"AVD::Constraints::Compound::Validator"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraints/Compound/Validator","path":"Athena/Validator/Constraints/Compound/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::Compound::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/compound.cr","line_number":73,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/compound.cr#L73"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/Compound","kind":"class","full_name":"Athena::Validator::Constraints::Compound","name":"Compound"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::Compound):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::Compound):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Compound"}],"args_string":"(value : _, constraint : AVD::Constraints::Compound) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/compound.cr#L75","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Compound"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"context = self.context\nvalidator = context.validator.in_context(context)\nvalidator.validate(value, constraint.constraints)\n"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Constraints/Email","path":"Athena/Validator/Constraints/Email.html","kind":"class","full_name":"Athena::Validator::Constraints::Email","name":"Email","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/email.cr","line_number":42,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/email.cr#L42"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"INVALID_FORMAT_ERROR","name":"INVALID_FORMAT_ERROR","value":"\"ad9d877d-9ad1-4dd7-b77b-e419934e5910\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is a valid email address.\nThe underlying value is converted to a string via `#to_s` before being validated.\n\nNOTE: As with most other constraints, `nil` and empty strings are considered valid values, in order to allow the value to be optional.\nIf the value is required, consider combining this constraint with `AVD::Constraints::NotBlank`.\n\n## Configuration\n\n### Optional Arguments\n\n#### mode\n\n**Type:** `AVD::Constraints::Email::Mode` **Default:** `AVD::Constraints::Email::Mode::Loose`\n\nDefines the pattern that should be used to validate the email address.\n\n#### message\n\n**Type:** `String` **Default:** `This value is not a valid email address.`\n\nThe message that will be shown if the value is not a valid email address.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is a valid email address.</p>","class_methods":[],"constructors":[{"id":"new(mode:AVD::Constraints::Email::Mode=:loose,message:String=&quot;Thisvalueisnotavalidemailaddress.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(mode:AVD::Constraints::Email::Mode=:loose,message:String=&quot;Thisvalueisnotavalidemailaddress.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"mode","doc":null,"default_value":":loose","external_name":"mode","restriction":"AVD::Constraints::Email::Mode"},{"name":"message","doc":null,"default_value":"\"This value is not a valid email address.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(mode : AVD::Constraints::Email::Mode = <span class=\"n\">:loose</span>, message : String = <span class=\"s\">&quot;This value is not a valid email address.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/email.cr#L71","def":{"name":"new","args":[{"name":"mode","doc":null,"default_value":":loose","external_name":"mode","restriction":"AVD::Constraints::Email::Mode"},{"name":"message","doc":null,"default_value":"\"This value is not a valid email address.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(mode, message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"mode:AVD::Constraints::Email::Mode-instance-method","html_id":"mode:AVD::Constraints::Email::Mode-instance-method","name":"mode","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : AVD::Constraints::Email::Mode","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/email.cr#L69","def":{"name":"mode","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Constraints::Email::Mode","visibility":"Public","body":"@mode"}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/email.cr#L42","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraints/Email/Mode","path":"Athena/Validator/Constraints/Email/Mode.html","kind":"enum","full_name":"Athena::Validator::Constraints::Email::Mode","name":"Mode","abstract":false,"superclass":null,"ancestors":[{"html_id":"athena/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"athena/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/email.cr","line_number":44,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/email.cr#L44"}],"repository_name":"athena","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Loose","name":"Loose","value":"0","doc":"Validates the email against a simple `::Regex` that allows all values with an `@` symbol and a `.` in the host part of the email address.","summary":"<p>Validates the email against a simple <code>::Regex</code> that allows all values with an <code>@</code> symbol and a <code>.</code> in the host part of the email address.</p>"},{"id":"HTML5","name":"HTML5","value":"1","doc":"Validates the email against the [HTML5 input pattern](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address).","summary":"<p>Validates the email against the <a href=\"https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address\" target=\"_blank\">HTML5 input pattern</a>.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/Email","kind":"class","full_name":"Athena::Validator::Constraints::Email","name":"Email"},"doc":"Determines _how_ the email address should be validated.","summary":"<p>Determines <em>how</em> the email address should be validated.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"html5?-instance-method","html_id":"html5?-instance-method","name":"html5?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/email.cr#L49","def":{"name":"html5?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == HTML5"}},{"id":"loose?-instance-method","html_id":"loose?-instance-method","name":"loose?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/email.cr#L46","def":{"name":"loose?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Loose"}},{"id":"pattern:::Regex-instance-method","html_id":"pattern:::Regex-instance-method","name":"pattern","doc":"Returns the `::Regex` pattern for `self`.","summary":"<p>Returns the <code>::Regex</code> pattern for <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : ::Regex","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/email.cr#L55","def":{"name":"pattern","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Regex","visibility":"Public","body":"case self\nin .html5?\n  /^[a-zA-Z0-9.!\\#$\\%&\\'*+\\\\\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$/\nin .loose?\n  /^.+\\@\\S+\\.\\S+$/\nend"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Constraints/Email/Validator","path":"Athena/Validator/Constraints/Email/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::Email::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/email.cr","line_number":80,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/email.cr#L80"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/Email","kind":"class","full_name":"Athena::Validator::Constraints::Email","name":"Email"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::Email):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::Email):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Email"}],"args_string":"(value : _, constraint : AVD::Constraints::Email) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/email.cr#L82","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Email"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"value = value.to_s\nif value.nil? || value.empty?\n  return\nend\nif value.matches?(constraint.mode.pattern)\n  return\nend\nself.context.add_violation(constraint.message, INVALID_FORMAT_ERROR, value)\n"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Constraints/EqualTo","path":"Athena/Validator/Constraints/EqualTo.html","kind":"class","full_name":"Athena::Validator::Constraints::EqualTo(ValueType)","name":"EqualTo","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraints/AbstractComparison","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison","name":"AbstractComparison"},{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/equal_to.cr","line_number":40,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/equal_to.cr#L40"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"NOT_EQUAL_ERROR","name":"NOT_EQUAL_ERROR","value":"\"47d83d11-15d5-4267-b469-1444f80fd169\"","doc":null,"summary":null}],"included_modules":[{"html_id":"athena/Athena/Validator/Constraints/AbstractComparison","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison","name":"AbstractComparison"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is equal to another.\n\n## Configuration\n\n### Required Arguments\n\n#### value\n\nDefines the value that the value being validated should be compared to.\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value should be equal to {{ compared_value }}.`\n\nThe message that will be shown if the value is not equal to the comparison value.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ compared_value }}` - The expected value.\n* `{{ compared_value_type }}` - The type of the expected value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is equal to another.</p>","class_methods":[],"constructors":[{"id":"new(value:ValueType,message:String=default_error_message,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(value:ValueType,message:String=default_error_message,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"ValueType"},{"name":"message","doc":null,"default_value":"default_error_message","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(value : ValueType, message : String = default_error_message, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/abstract_comparison.cr#L9","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"ValueType"},{"name":"message","doc":null,"default_value":"default_error_message","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = EqualTo(ValueType).allocate\n_.initialize(value, message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"default_error_message:String-instance-method","html_id":"default_error_message:String-instance-method","name":"default_error_message","doc":"Returns the `AVD::Constraint#message` for this constraint.","summary":"<p>Returns the <code><a href=\"../../../Athena/Validator/Constraint.html#message:String-instance-method\">AVD::Constraint#message</a></code> for this constraint.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/equal_to.cr#L50","def":{"name":"default_error_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"This value should be equal to {{ compared_value }}.\""}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/equal_to.cr#L40","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraints/EqualTo/Validator","path":"Athena/Validator/Constraints/EqualTo/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::EqualTo::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraints/ComparisonValidator","kind":"struct","full_name":"Athena::Validator::Constraints::ComparisonValidator","name":"ComparisonValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraints/ComparisonValidator","kind":"struct","full_name":"Athena::Validator::Constraints::ComparisonValidator","name":"ComparisonValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/equal_to.cr","line_number":54,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/equal_to.cr#L54"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/EqualTo","kind":"class","full_name":"Athena::Validator::Constraints::EqualTo(ValueType)","name":"EqualTo"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"compare_values(actual:_,expected:_):Bool-instance-method","html_id":"compare_values(actual:_,expected:_):Bool-instance-method","name":"compare_values","doc":"Returns `true` if the provided *actual* and *expected* values are compatible, otherwise `false`.","summary":"<p>Returns <code>true</code> if the provided <em>actual</em> and <em>expected</em> values are compatible, otherwise <code>false</code>.</p>","abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"_"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"_"}],"args_string":"(actual : _, expected : _) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/equal_to.cr#L56","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"_"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"actual == expected"}},{"id":"error_code:String-instance-method","html_id":"error_code:String-instance-method","name":"error_code","doc":"Returns the expected error code for `self`.","summary":"<p>Returns the expected error code for <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/equal_to.cr#L61","def":{"name":"error_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"NOT_EQUAL_ERROR"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Constraints/GreaterThan","path":"Athena/Validator/Constraints/GreaterThan.html","kind":"class","full_name":"Athena::Validator::Constraints::GreaterThan(ValueType)","name":"GreaterThan","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraints/AbstractComparison","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison","name":"AbstractComparison"},{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/greater_than.cr","line_number":42,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/greater_than.cr#L42"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"TOO_LOW_ERROR","name":"TOO_LOW_ERROR","value":"\"a221096d-d125-44e8-a865-4270379ac11a\"","doc":null,"summary":null}],"included_modules":[{"html_id":"athena/Athena/Validator/Constraints/AbstractComparison","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison","name":"AbstractComparison"}],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Validator/Constraints/Positive","kind":"class","full_name":"Athena::Validator::Constraints::Positive","name":"Positive"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is greater than another.\n\n## Configuration\n\n### Required Arguments\n\n#### value\n\n**Type:** `Number | String | Time`\n\nDefines the value that the value being validated should be compared to.\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value should be greater than {{ compared_value }}.`\n\nThe message that will be shown if the value is not greater than the comparison value.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ compared_value }}` - The expected value.\n* `{{ compared_value_type }}` - The type of the expected value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is greater than another.</p>","class_methods":[],"constructors":[{"id":"new(value:ValueType,message:String=default_error_message,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(value:ValueType,message:String=default_error_message,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"ValueType"},{"name":"message","doc":null,"default_value":"default_error_message","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(value : ValueType, message : String = default_error_message, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/abstract_comparison.cr#L9","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"ValueType"},{"name":"message","doc":null,"default_value":"default_error_message","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = GreaterThan(ValueType).allocate\n_.initialize(value, message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"default_error_message:String-instance-method","html_id":"default_error_message:String-instance-method","name":"default_error_message","doc":"Returns the `AVD::Constraint#message` for this constraint.","summary":"<p>Returns the <code><a href=\"../../../Athena/Validator/Constraint.html#message:String-instance-method\">AVD::Constraint#message</a></code> for this constraint.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/greater_than.cr#L51","def":{"name":"default_error_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"This value should be greater than {{ compared_value }}.\""}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/greater_than.cr#L42","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraints/GreaterThan/Validator","path":"Athena/Validator/Constraints/GreaterThan/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::GreaterThan::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraints/ComparisonValidator","kind":"struct","full_name":"Athena::Validator::Constraints::ComparisonValidator","name":"ComparisonValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraints/ComparisonValidator","kind":"struct","full_name":"Athena::Validator::Constraints::ComparisonValidator","name":"ComparisonValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/greater_than.cr","line_number":55,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/greater_than.cr#L55"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/GreaterThan","kind":"class","full_name":"Athena::Validator::Constraints::GreaterThan(ValueType)","name":"GreaterThan"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"compare_values(actual:Number,expected:Number):Bool-instance-method","html_id":"compare_values(actual:Number,expected:Number):Bool-instance-method","name":"compare_values","doc":null,"summary":null,"abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"Number"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"Number"}],"args_string":"(actual : Number, expected : Number) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/greater_than.cr#L56","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"Number"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"actual > expected"}},{"id":"compare_values(actual:String,expected:String):Bool-instance-method","html_id":"compare_values(actual:String,expected:String):Bool-instance-method","name":"compare_values","doc":null,"summary":null,"abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"String"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"String"}],"args_string":"(actual : String, expected : String) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/greater_than.cr#L60","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"String"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"actual > expected"}},{"id":"compare_values(actual:Time,expected:Time):Bool-instance-method","html_id":"compare_values(actual:Time,expected:Time):Bool-instance-method","name":"compare_values","doc":null,"summary":null,"abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"Time"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"Time"}],"args_string":"(actual : Time, expected : Time) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/greater_than.cr#L64","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"Time"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"actual > expected"}},{"id":"compare_values(actual:_,expected:_):NoReturn-instance-method","html_id":"compare_values(actual:_,expected:_):NoReturn-instance-method","name":"compare_values","doc":"Returns `true` if the provided *actual* and *expected* values are compatible, otherwise `false`.","summary":"<p>Returns <code>true</code> if the provided <em>actual</em> and <em>expected</em> values are compatible, otherwise <code>false</code>.</p>","abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"_"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"_"}],"args_string":"(actual : _, expected : _) : NoReturn","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/greater_than.cr#L69","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"_"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NoReturn","visibility":"Public","body":"self.raise_invalid_type(actual, \"Number | String | Time\")"}},{"id":"error_code:String-instance-method","html_id":"error_code:String-instance-method","name":"error_code","doc":"Returns the expected error code for `self`.","summary":"<p>Returns the expected error code for <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/greater_than.cr#L75","def":{"name":"error_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"TOO_LOW_ERROR"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Constraints/GreaterThanOrEqual","path":"Athena/Validator/Constraints/GreaterThanOrEqual.html","kind":"class","full_name":"Athena::Validator::Constraints::GreaterThanOrEqual(ValueType)","name":"GreaterThanOrEqual","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraints/AbstractComparison","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison","name":"AbstractComparison"},{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/greater_than_or_equal.cr","line_number":42,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/greater_than_or_equal.cr#L42"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"TOO_LOW_ERROR","name":"TOO_LOW_ERROR","value":"\"e09e52d0-b549-4ba1-8b4e-420aad76f0de\"","doc":null,"summary":null}],"included_modules":[{"html_id":"athena/Athena/Validator/Constraints/AbstractComparison","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison","name":"AbstractComparison"}],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Validator/Constraints/PositiveOrZero","kind":"class","full_name":"Athena::Validator::Constraints::PositiveOrZero","name":"PositiveOrZero"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is greater than or equal to another.\n\n## Configuration\n\n### Required Arguments\n\n#### value\n\n**Type:** `Number | String | Time`\n\nDefines the value that the value being validated should be compared to.\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value should be greater than or equal to {{ compared_value }}.`\n\nThe message that will be shown if the value is not greater than or equal to the comparison value.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ compared_value }}` - The expected value.\n* `{{ compared_value_type }}` - The type of the expected value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is greater than or equal to another.</p>","class_methods":[],"constructors":[{"id":"new(value:ValueType,message:String=default_error_message,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(value:ValueType,message:String=default_error_message,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"ValueType"},{"name":"message","doc":null,"default_value":"default_error_message","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(value : ValueType, message : String = default_error_message, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/abstract_comparison.cr#L9","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"ValueType"},{"name":"message","doc":null,"default_value":"default_error_message","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = GreaterThanOrEqual(ValueType).allocate\n_.initialize(value, message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"default_error_message:String-instance-method","html_id":"default_error_message:String-instance-method","name":"default_error_message","doc":"Returns the `AVD::Constraint#message` for this constraint.","summary":"<p>Returns the <code><a href=\"../../../Athena/Validator/Constraint.html#message:String-instance-method\">AVD::Constraint#message</a></code> for this constraint.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/greater_than_or_equal.cr#L51","def":{"name":"default_error_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"This value should be greater than or equal to {{ compared_value }}.\""}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/greater_than_or_equal.cr#L42","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraints/GreaterThanOrEqual/Validator","path":"Athena/Validator/Constraints/GreaterThanOrEqual/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::GreaterThanOrEqual::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraints/ComparisonValidator","kind":"struct","full_name":"Athena::Validator::Constraints::ComparisonValidator","name":"ComparisonValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraints/ComparisonValidator","kind":"struct","full_name":"Athena::Validator::Constraints::ComparisonValidator","name":"ComparisonValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/greater_than_or_equal.cr","line_number":55,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/greater_than_or_equal.cr#L55"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/GreaterThanOrEqual","kind":"class","full_name":"Athena::Validator::Constraints::GreaterThanOrEqual(ValueType)","name":"GreaterThanOrEqual"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"compare_values(actual:Number,expected:Number):Bool-instance-method","html_id":"compare_values(actual:Number,expected:Number):Bool-instance-method","name":"compare_values","doc":null,"summary":null,"abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"Number"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"Number"}],"args_string":"(actual : Number, expected : Number) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/greater_than_or_equal.cr#L56","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"Number"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"actual >= expected"}},{"id":"compare_values(actual:String,expected:String):Bool-instance-method","html_id":"compare_values(actual:String,expected:String):Bool-instance-method","name":"compare_values","doc":null,"summary":null,"abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"String"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"String"}],"args_string":"(actual : String, expected : String) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/greater_than_or_equal.cr#L60","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"String"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"actual >= expected"}},{"id":"compare_values(actual:Time,expected:Time):Bool-instance-method","html_id":"compare_values(actual:Time,expected:Time):Bool-instance-method","name":"compare_values","doc":null,"summary":null,"abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"Time"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"Time"}],"args_string":"(actual : Time, expected : Time) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/greater_than_or_equal.cr#L64","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"Time"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"actual >= expected"}},{"id":"compare_values(actual:_,expected:_):NoReturn-instance-method","html_id":"compare_values(actual:_,expected:_):NoReturn-instance-method","name":"compare_values","doc":"Returns `true` if the provided *actual* and *expected* values are compatible, otherwise `false`.","summary":"<p>Returns <code>true</code> if the provided <em>actual</em> and <em>expected</em> values are compatible, otherwise <code>false</code>.</p>","abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"_"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"_"}],"args_string":"(actual : _, expected : _) : NoReturn","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/greater_than_or_equal.cr#L69","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"_"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NoReturn","visibility":"Public","body":"self.raise_invalid_type(actual, \"Number | String | Time\")"}},{"id":"error_code:String-instance-method","html_id":"error_code:String-instance-method","name":"error_code","doc":"Returns the expected error code for `self`.","summary":"<p>Returns the expected error code for <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/greater_than_or_equal.cr#L75","def":{"name":"error_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"TOO_LOW_ERROR"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Constraints/GroupSequence","path":"Athena/Validator/Constraints/GroupSequence.html","kind":"struct","full_name":"Athena::Validator::Constraints::GroupSequence","name":"GroupSequence","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/group_sequence.cr","line_number":37,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/group_sequence.cr#L37"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Allows validating your `AVD::Constraint@validation-groups` in steps.\nI.e. only continue to the next group if all constraints in the first group are valid.\n\n```\n@[Assert::GroupSequence(\"User\", \"strict\")]\nclass User\n  include AVD::Validatable\n\n  @[Assert::NotBlank]\n  property name : String\n\n  @[Assert::NotBlank]\n  property password : String\n\n  def initialize(@name : String, @password : String); end\n\n  @[Assert::IsTrue(message: \"Your password cannot be the same as your name.\", groups: \"strict\")]\n  def is_safe_password? : Bool\n    @name != @password\n  end\nend\n```\n\nIn this case, it'll validate the `name` and `password` properties are not blank before validating they are not the same.\nIf either property is blank, the `is_safe_password?` validation will be skipped.\n\nNOTE: The `default` group is not allowed as part of a group sequence.\n\nNOTE: Calling `validate` with a group in the sequence, such as `strict`, will\ncause violations to _ONLY_ use that group and not all groups within the sequence.\nThis is because the group sequence is now referred to as the `default` group.\n\nSee `AVD::Constraints::GroupSequence::Provider` for a way to dynamically determine the sequence an object should use.","summary":"<p>Allows validating your <code><a href=\"../../../Athena/Validator/Constraint.html\">AVD::Constraint</a>@validation-groups</code> in steps.</p>","class_methods":[],"constructors":[{"id":"new(groups:Array(String))-class-method","html_id":"new(groups:Array(String))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"groups","doc":null,"default_value":"","external_name":"groups","restriction":"Array(String)"}],"args_string":"(groups : Array(String))","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/group_sequence.cr#L40","def":{"name":"new","args":[{"name":"groups","doc":null,"default_value":"","external_name":"groups","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(groups.map do |__arg0|\n  __arg0.as(String | Array(String))\nend)"}},{"id":"new(groups:Array(String|Array(String)))-class-method","html_id":"new(groups:Array(String|Array(String)))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"groups","doc":null,"default_value":"","external_name":"groups","restriction":"Array(String | Array(String))"}],"args_string":"(groups : Array(String | Array(String)))","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/group_sequence.cr#L44","def":{"name":"new","args":[{"name":"groups","doc":null,"default_value":"","external_name":"groups","restriction":"Array(String | Array(String))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(groups)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"groups:Array(String|Array(String))-instance-method","html_id":"groups:Array(String|Array(String))-instance-method","name":"groups","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String | Array(String))","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/group_sequence.cr#L38","def":{"name":"groups","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String | Array(String))","visibility":"Public","body":"@groups"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraints/GroupSequence/Provider","path":"Athena/Validator/Constraints/GroupSequence/Provider.html","kind":"module","full_name":"Athena::Validator::Constraints::GroupSequence::Provider","name":"Provider","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-validator/src/constraints/group_sequence.cr","line_number":87,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/group_sequence.cr#L87"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Validator/Spec/EntityGroupSequenceProvider","kind":"struct","full_name":"Athena::Validator::Spec::EntityGroupSequenceProvider","name":"EntityGroupSequenceProvider"},{"html_id":"athena/Athena/Validator/Spec/EntitySequenceProvider","kind":"struct","full_name":"Athena::Validator::Spec::EntitySequenceProvider","name":"EntitySequenceProvider"}],"namespace":{"html_id":"athena/Athena/Validator/Constraints/GroupSequence","kind":"struct","full_name":"Athena::Validator::Constraints::GroupSequence","name":"GroupSequence"},"doc":"`AVD::Constraints::GroupSequence`s can be a good way to create efficient validations.\nHowever, since the sequence is static, it is not a very flexible solution.\n\nGroup sequence providers allow the sequence to be dynamically determined at runtime.\nThis allows running specific validations only when the object is in a specific state,\nsuch as validating a \"registered\" user differently than a non-registered user.\n\n```\nclass User\n  include AVD::Validatable\n\n  # Include the interface that informs the validator this object will provide its sequence.\n  include AVD::Constraints::GroupSequence::Provider\n\n  @[Assert::NotBlank]\n  property name : String\n\n  # Only validate the `email` property if the `#group_sequence` method includes \"registered\"\n  # Which can be determined using the current state of the object.\n  @[Assert::Email(groups: \"registered\")]\n  @[Assert::NotBlank(groups: \"registered\")]\n  property email : String?\n\n  def initialize(@name : String, @email : String); end\n\n  # Define a method that returns the sequence.\n  def group_sequence : Array(String | Array(String)) | AVD::Constraints::GroupSequence\n    # When returning a 1D array, if there is a vaiolation in any group\n    # the rest of the groups are not validated.  E.g. if `User` fails,\n    # `registered` and `api` are not validated:\n    return [\"User\", \"registered\", \"api\"]\n\n    # When returning a nested array, all groups included in each array are validated.\n    # E.g. if `User` fails, `Premium` is also validated (and you'll get its violations),\n    # but `api` will not be validated\n    return [[\"User\", \"registered\"], \"api\"]\n  end\nend\n```\n\nSee `AVD::Constraints::Sequentially` for a more straightforward method of applying constraints sequentially on a single property.","summary":"<p><code><a href=\"../../../../Athena/Validator/Constraints/GroupSequence.html\">AVD::Constraints::GroupSequence</a></code>s can be a good way to create efficient validations.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"group_sequence:Array(String|Array(String))|AVD::Constraints::GroupSequence-instance-method","html_id":"group_sequence:Array(String|Array(String))|AVD::Constraints::GroupSequence-instance-method","name":"group_sequence","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Array(String | Array(String)) | AVD::Constraints::GroupSequence","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/group_sequence.cr#L88","def":{"name":"group_sequence","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String | Array(String)) | AVD::Constraints::GroupSequence","visibility":"Public","body":""}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Constraints/IP","path":"Athena/Validator/Constraints/IP.html","kind":"class","full_name":"Athena::Validator::Constraints::IP","name":"IP","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/ip.cr","line_number":43,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/ip.cr#L43"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"INVALID_IP_ERROR","name":"INVALID_IP_ERROR","value":"\"326b0aa4-3871-404d-986d-fe3e6c82005c\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is a valid IP address.\nBy default validates the value as an `IPv4` address, but can be customized to validate `IPv6`s, or both.\nThe underlying value is converted to a string via `#to_s` before being validated.\n\nNOTE: As with most other constraints, `nil` and empty strings are considered valid values, in order to allow the value to be optional.\nIf the value is required, consider combining this constraint with `AVD::Constraints::NotBlank`.\n\n## Configuration\n\n### Optional Arguments\n\n#### version\n\n**Type:** `AVD::Constraints::IP::Version` **Default:** `AVD::Constraints::IP::Version::V4`\n\nDefines the pattern that should be used to validate the IP address.\n\n#### message\n\n**Type:** `String` **Default:** `This is not a valid IP address.`\n\nThe message that will be shown if the value is not a valid IP address.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is a valid IP address.</p>","class_methods":[],"constructors":[{"id":"new(version:AVD::Constraints::IP::Version=:v4,message:String=&quot;ThisvalueisnotavalidIPaddress.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(version:AVD::Constraints::IP::Version=:v4,message:String=&quot;ThisvalueisnotavalidIPaddress.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"version","doc":null,"default_value":":v4","external_name":"version","restriction":"AVD::Constraints::IP::Version"},{"name":"message","doc":null,"default_value":"\"This value is not a valid IP address.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(version : AVD::Constraints::IP::Version = <span class=\"n\">:v4</span>, message : String = <span class=\"s\">&quot;This value is not a valid IP address.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/ip.cr#L81","def":{"name":"new","args":[{"name":"version","doc":null,"default_value":":v4","external_name":"version","restriction":"AVD::Constraints::IP::Version"},{"name":"message","doc":null,"default_value":"\"This value is not a valid IP address.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(version, message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/ip.cr#L43","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}},{"id":"version:AVD::Constraints::IP::Version-instance-method","html_id":"version:AVD::Constraints::IP::Version-instance-method","name":"version","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : AVD::Constraints::IP::Version","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/ip.cr#L79","def":{"name":"version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Constraints::IP::Version","visibility":"Public","body":"@version"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraints/IP/Validator","path":"Athena/Validator/Constraints/IP/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::IP::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/ip.cr","line_number":90,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/ip.cr#L90"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/IP","kind":"class","full_name":"Athena::Validator::Constraints::IP","name":"IP"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::IP):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::IP):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::IP"}],"args_string":"(value : _, constraint : AVD::Constraints::IP) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/ip.cr#L92","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::IP"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"value = value.to_s\nif value.nil? || value.empty?\n  return\nend\nif value.matches?(constraint.version.pattern)\n  return\nend\nself.context.add_violation(constraint.message, INVALID_IP_ERROR, value)\n"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Constraints/IP/Version","path":"Athena/Validator/Constraints/IP/Version.html","kind":"enum","full_name":"Athena::Validator::Constraints::IP::Version","name":"Version","abstract":false,"superclass":null,"ancestors":[{"html_id":"athena/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"athena/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/ip.cr","line_number":45,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/ip.cr#L45"}],"repository_name":"athena","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"V4","name":"V4","value":"0","doc":"Validates for `IPv4` addresses.","summary":"<p>Validates for <code>IPv4</code> addresses.</p>"},{"id":"V6","name":"V6","value":"1","doc":"Validates for `IPv6` addresses.","summary":"<p>Validates for <code>IPv6</code> addresses.</p>"},{"id":"V4_V6","name":"V4_V6","value":"2","doc":"Validates for `IPv4` or `IPv6` addresses.","summary":"<p>Validates for <code>IPv4</code> or <code>IPv6</code> addresses.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/IP","kind":"class","full_name":"Athena::Validator::Constraints::IP","name":"IP"},"doc":"Determines _how_ the IP address should be validated.","summary":"<p>Determines <em>how</em> the IP address should be validated.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"pattern:::Regex-instance-method","html_id":"pattern:::Regex-instance-method","name":"pattern","doc":"Returns the `::Regex` pattern for `self`.","summary":"<p>Returns the <code>::Regex</code> pattern for <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : ::Regex","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/ip.cr#L56","def":{"name":"pattern","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Regex","visibility":"Public","body":"case self\nin .v4?\n  self.v4_regex\nin .v6?\n  self.v6_regex\nin .v4_v6?\n  ::Regex.union(self.v4_regex, self.v6_regex)\nend"}},{"id":"v4?-instance-method","html_id":"v4?-instance-method","name":"v4?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/ip.cr#L47","def":{"name":"v4?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == V4"}},{"id":"v4_v6?-instance-method","html_id":"v4_v6?-instance-method","name":"v4_v6?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/ip.cr#L53","def":{"name":"v4_v6?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == V4_V6"}},{"id":"v6?-instance-method","html_id":"v6?-instance-method","name":"v6?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/ip.cr#L50","def":{"name":"v6?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == V6"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Constraints/ISBN","path":"Athena/Validator/Constraints/ISBN.html","kind":"class","full_name":"Athena::Validator::Constraints::ISBN","name":"ISBN","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/isbn.cr","line_number":79,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/isbn.cr#L79"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"CHECKSUM_FAILED_ERROR","name":"CHECKSUM_FAILED_ERROR","value":"\"f51bae62-6833-43b1-bc27-ae4445c59e30\"","doc":null,"summary":null},{"id":"INVALID_CHARACTERS_ERROR","name":"INVALID_CHARACTERS_ERROR","value":"\"25d35907-d822-4bcc-82cc-852e30c89c0d\"","doc":null,"summary":null},{"id":"TOO_LONG_ERROR","name":"TOO_LONG_ERROR","value":"\"ebd28c75-bb42-43d6-9053-f0ea2ea93d44\"","doc":null,"summary":null},{"id":"TOO_SHORT_ERROR","name":"TOO_SHORT_ERROR","value":"\"5da9e91f-7956-40f7-9788-4124463d783e\"","doc":null,"summary":null},{"id":"TYPE_NOT_RECOGNIZED_ERROR","name":"TYPE_NOT_RECOGNIZED_ERROR","value":"\"8d83f04d-2503-4547-97a1-935fcccd1ae1\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that an [International Standard Book Number (ISBN)](https://en.wikipedia.org/wiki/Isbn) is either a valid `ISBN-10` or `ISBN-13`.\nThe underlying value is converted to a string via `#to_s` before being validated.\n\nNOTE: As with most other constraints, `nil` and empty strings are considered valid values, in order to allow the value to be optional.\nIf the value is required, consider combining this constraint with `AVD::Constraints::NotBlank`.\n\n## Configuration\n\n### Optional Arguments\n\n#### type\n\n**Type:** `AVD::Constraints::ISBN::Type` **Default:** `AVD::Constraints::ISBN::Type::Both`\n\nType of ISBN to validate against.\n\n#### message\n\n**Type:** `String` **Default:** `\"\"`\n\nThe message that will be shown if the value is invalid.\nThis message has priority over the other messages if not empty.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### isbn10_message\n\n**Type:** `String` **Default:** `This value is not a valid ISBN-10.`\n\nThe message that will be shown if [type](#type) is `AVD::Constraints::ISBN::Type::ISBN10` and the value is invalid.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### isbn13_message\n\n**Type:** `String` **Default:** `This value is not a valid ISBN-13.`\n\nThe message that will be shown if [type](#type) is `AVD::Constraints::ISBN::Type::ISBN13` and the value is invalid.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### both_message\n\n**Type:** `String` **Default:** `This value is neither a valid ISBN-10 nor a valid ISBN-13.`\n\nThe message that will be shown if [type](#type) is `AVD::Constraints::ISBN::Type::Both` and the value is invalid.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that an <a href=\"https://en.wikipedia.org/wiki/Isbn\" target=\"_blank\">International Standard Book Number (ISBN)</a> is either a valid <code><a href=\"../../../Athena/Validator/Constraints/ISBN.html\">ISBN</a>-10</code> or <code><a href=\"../../../Athena/Validator/Constraints/ISBN.html\">ISBN</a>-13</code>.</p>","class_methods":[],"constructors":[{"id":"new(type:AVD::Constraints::ISBN::Type=:both,isbn10_message:String=&quot;ThisvalueisnotavalidISBN-10.&quot;,isbn13_message:String=&quot;ThisvalueisnotavalidISBN-13.&quot;,both_message:String=&quot;ThisvalueisneitheravalidISBN-10noravalidISBN-13.&quot;,message:String=&quot;&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(type:AVD::Constraints::ISBN::Type=:both,isbn10_message:String=&quot;ThisvalueisnotavalidISBN-10.&quot;,isbn13_message:String=&quot;ThisvalueisnotavalidISBN-13.&quot;,both_message:String=&quot;ThisvalueisneitheravalidISBN-10noravalidISBN-13.&quot;,message:String=&quot;&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":":both","external_name":"type","restriction":"AVD::Constraints::ISBN::Type"},{"name":"isbn10_message","doc":null,"default_value":"\"This value is not a valid ISBN-10.\"","external_name":"isbn10_message","restriction":"String"},{"name":"isbn13_message","doc":null,"default_value":"\"This value is not a valid ISBN-13.\"","external_name":"isbn13_message","restriction":"String"},{"name":"both_message","doc":null,"default_value":"\"This value is neither a valid ISBN-10 nor a valid ISBN-13.\"","external_name":"both_message","restriction":"String"},{"name":"message","doc":null,"default_value":"\"\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(type : AVD::Constraints::ISBN::Type = <span class=\"n\">:both</span>, isbn10_message : String = <span class=\"s\">&quot;This value is not a valid ISBN-10.&quot;</span>, isbn13_message : String = <span class=\"s\">&quot;This value is not a valid ISBN-13.&quot;</span>, both_message : String = <span class=\"s\">&quot;This value is neither a valid ISBN-10 nor a valid ISBN-13.&quot;</span>, message : String = <span class=\"s\">&quot;&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/isbn.cr#L113","def":{"name":"new","args":[{"name":"type","doc":null,"default_value":":both","external_name":"type","restriction":"AVD::Constraints::ISBN::Type"},{"name":"isbn10_message","doc":null,"default_value":"\"This value is not a valid ISBN-10.\"","external_name":"isbn10_message","restriction":"String"},{"name":"isbn13_message","doc":null,"default_value":"\"This value is not a valid ISBN-13.\"","external_name":"isbn13_message","restriction":"String"},{"name":"both_message","doc":null,"default_value":"\"This value is neither a valid ISBN-10 nor a valid ISBN-13.\"","external_name":"both_message","restriction":"String"},{"name":"message","doc":null,"default_value":"\"\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(type, isbn10_message, isbn13_message, both_message, message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"both_message:String-instance-method","html_id":"both_message:String-instance-method","name":"both_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/isbn.cr#L111","def":{"name":"both_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@both_message"}},{"id":"isbn10_message:String-instance-method","html_id":"isbn10_message:String-instance-method","name":"isbn10_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/isbn.cr#L109","def":{"name":"isbn10_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@isbn10_message"}},{"id":"isbn13_message:String-instance-method","html_id":"isbn13_message:String-instance-method","name":"isbn13_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/isbn.cr#L110","def":{"name":"isbn13_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@isbn13_message"}},{"id":"message:String-instance-method","html_id":"message:String-instance-method","name":"message","doc":"Returns the message that should be rendered if `self` is found to be invalid.\n\nNOTE: Some subtypes do not use this and instead define multiple message\nproperties in order to support more specific error messages.","summary":"<p>Returns the message that should be rendered if <code>self</code> is found to be invalid.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/isbn.cr#L125","def":{"name":"message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"if @message.empty?\nelse\n  return @message\nend\n@type.message(self)\n"}},{"id":"type:AVD::Constraints::ISBN::Type-instance-method","html_id":"type:AVD::Constraints::ISBN::Type-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : AVD::Constraints::ISBN::Type","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/isbn.cr#L108","def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Constraints::ISBN::Type","visibility":"Public","body":"@type"}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/isbn.cr#L79","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraints/ISBN/Type","path":"Athena/Validator/Constraints/ISBN/Type.html","kind":"enum","full_name":"Athena::Validator::Constraints::ISBN::Type","name":"Type","abstract":false,"superclass":null,"ancestors":[{"html_id":"athena/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"athena/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/isbn.cr","line_number":80,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/isbn.cr#L80"}],"repository_name":"athena","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"ISBN10","name":"ISBN10","value":"0","doc":null,"summary":null},{"id":"ISBN13","name":"ISBN13","value":"1","doc":null,"summary":null},{"id":"Both","name":"Both","value":"2","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/ISBN","kind":"class","full_name":"Athena::Validator::Constraints::ISBN","name":"ISBN"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"both?-instance-method","html_id":"both?-instance-method","name":"both?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/isbn.cr#L83","def":{"name":"both?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Both"}},{"id":"isbn10?-instance-method","html_id":"isbn10?-instance-method","name":"isbn10?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/isbn.cr#L81","def":{"name":"isbn10?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ISBN10"}},{"id":"isbn13?-instance-method","html_id":"isbn13?-instance-method","name":"isbn13?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/isbn.cr#L82","def":{"name":"isbn13?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ISBN13"}},{"id":"message(constraint:AVD::Constraints::ISBN):String-instance-method","html_id":"message(constraint:AVD::Constraints::ISBN):String-instance-method","name":"message","doc":null,"summary":null,"abstract":false,"args":[{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::ISBN"}],"args_string":"(constraint : AVD::Constraints::ISBN) : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/isbn.cr#L85","def":{"name":"message","args":[{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::ISBN"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"case self\nin .isbn10?\n  constraint.isbn10_message\nin .isbn13?\n  constraint.isbn13_message\nin .both?\n  constraint.both_message\nend"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Constraints/ISBN/Validator","path":"Athena/Validator/Constraints/ISBN/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::ISBN::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/isbn.cr","line_number":131,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/isbn.cr#L131"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/ISBN","kind":"class","full_name":"Athena::Validator::Constraints::ISBN","name":"ISBN"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::ISBN):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::ISBN):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::ISBN"}],"args_string":"(value : _, constraint : AVD::Constraints::ISBN) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/isbn.cr#L133","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::ISBN"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"value = value.to_s\nif value.nil? || value.empty?\n  return\nend\ncanonical = value.gsub('-', \"\")\ncode = case constraint.type\nin .isbn10?\n  self.validate_isbn10(canonical)\nin .isbn13?\n  self.validate_isbn13(canonical)\nin .both?\n  both_code = self.validate_isbn10(canonical)\n  if TOO_LONG_ERROR == both_code\n    both_code = self.validate_isbn13(canonical)\n    if TOO_SHORT_ERROR == both_code\n      both_code = TYPE_NOT_RECOGNIZED_ERROR\n    end\n  end\n  both_code\nend\nif code.nil?\n  return\nend\nself.context.add_violation(constraint.message, code, value)\n"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Constraints/IsFalse","path":"Athena/Validator/Constraints/IsFalse.html","kind":"class","full_name":"Athena::Validator::Constraints::IsFalse","name":"IsFalse","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/is_false.cr","line_number":32,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/is_false.cr#L32"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"NOT_FALSE_ERROR","name":"NOT_FALSE_ERROR","value":"\"55c076a0-dbaf-453c-90cf-b94664276dbc\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is `false`.\n\n## Configuration\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value should be false.`\n\nThe message that will be shown if the value is not `false`.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is <code>false</code>.</p>","class_methods":[],"constructors":[{"id":"new(message:String=&quot;Thisvalueshouldbefalse.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(message:String=&quot;Thisvalueshouldbefalse.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"This value should be false.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(message : String = <span class=\"s\">&quot;This value should be false.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/is_false.cr#L39","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"\"This value should be false.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/is_false.cr#L32","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraints/IsFalse/Validator","path":"Athena/Validator/Constraints/IsFalse/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::IsFalse::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/is_false.cr","line_number":47,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/is_false.cr#L47"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/IsFalse","kind":"class","full_name":"Athena::Validator::Constraints::IsFalse","name":"IsFalse"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::IsFalse):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::IsFalse):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::IsFalse"}],"args_string":"(value : _, constraint : AVD::Constraints::IsFalse) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/is_false.cr#L49","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::IsFalse"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if value.nil? || (value == false)\n  return\nend\nself.context.add_violation(constraint.message, NOT_FALSE_ERROR, value)\n"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Constraints/ISIN","path":"Athena/Validator/Constraints/ISIN.html","kind":"class","full_name":"Athena::Validator::Constraints::ISIN","name":"ISIN","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/isin.cr","line_number":36,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/isin.cr#L36"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"INVALID_CHECKSUM_ERROR","name":"INVALID_CHECKSUM_ERROR","value":"\"c7d37ffb-0273-4f57-91f7-f47bf49aad08\"","doc":null,"summary":null},{"id":"INVALID_LENGTH_ERROR","name":"INVALID_LENGTH_ERROR","value":"\"1d1c3fbe-5b6f-42be-afa5-6840655865da\"","doc":null,"summary":null},{"id":"INVALID_PATTERN_ERROR","name":"INVALID_PATTERN_ERROR","value":"\"0b6ba8c4-b6aa-44dc-afac-a6f7a9a2556d\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is a valid [International Securities Identification Number (ISIN)](https://en.wikipedia.org/wiki/International_Securities_Identification_Number).\nThe underlying value is converted to a string via `#to_s` before being validated.\n\nNOTE: As with most other constraints, `nil` and empty strings are considered valid values, in order to allow the value to be optional.\nIf the value is required, consider combining this constraint with `AVD::Constraints::NotBlank`.\n\n## Configuration\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value is not a valid International Securities Identification Number (ISIN).`\n\nThe message that will be shown if the value is not a valid ISIN.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is a valid <a href=\"https://en.wikipedia.org/wiki/International_Securities_Identification_Number\" target=\"_blank\">International Securities Identification Number (ISIN)</a>.</p>","class_methods":[],"constructors":[{"id":"new(message:String=&quot;ThisvalueisnotavalidInternationalSecuritiesIdentificationNumber(ISIN).&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(message:String=&quot;ThisvalueisnotavalidInternationalSecuritiesIdentificationNumber(ISIN).&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"This value is not a valid International Securities Identification Number (ISIN).\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(message : String = <span class=\"s\">&quot;This value is not a valid International Securities Identification Number (ISIN).&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/isin.cr#L50","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"\"This value is not a valid International Securities Identification Number (ISIN).\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/isin.cr#L36","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraints/ISIN/Validator","path":"Athena/Validator/Constraints/ISIN/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::ISIN::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/isin.cr","line_number":58,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/isin.cr#L58"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/ISIN","kind":"class","full_name":"Athena::Validator::Constraints::ISIN","name":"ISIN"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::ISIN):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::ISIN):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::ISIN"}],"args_string":"(value : _, constraint : AVD::Constraints::ISIN) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/isin.cr#L62","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::ISIN"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"value = value.to_s\nif value.nil? || value.empty?\n  return\nend\nvalue = value.upcase\nif VALIDATION_LENGTH != value.size\n  return self.context.add_violation(constraint.message, INVALID_LENGTH_ERROR, value)\nend\nif value.matches?(VALIDATION_PATTERN)\nelse\n  return self.context.add_violation(constraint.message, INVALID_PATTERN_ERROR, value)\nend\nif self.is_correct_checksum(value)\n  return\nend\nself.context.add_violation(constraint.message, INVALID_CHECKSUM_ERROR, value)\n"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Constraints/IsNil","path":"Athena/Validator/Constraints/IsNil.html","kind":"class","full_name":"Athena::Validator::Constraints::IsNil","name":"IsNil","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/is_nil.cr","line_number":32,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/is_nil.cr#L32"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"NOT_NIL_ERROR","name":"NOT_NIL_ERROR","value":"\"2c88e3c7-9275-4b9b-81b4-48c6c44b1804\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is `nil`.\n\n## Configuration\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value should be null.`\n\nThe message that will be shown if the value is not `nil`.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is <code>nil</code>.</p>","class_methods":[],"constructors":[{"id":"new(message:String=&quot;Thisvalueshouldbenull.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(message:String=&quot;Thisvalueshouldbenull.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"This value should be null.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(message : String = <span class=\"s\">&quot;This value should be null.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/is_nil.cr#L39","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"\"This value should be null.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/is_nil.cr#L32","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraints/IsNil/Validator","path":"Athena/Validator/Constraints/IsNil/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::IsNil::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/is_nil.cr","line_number":47,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/is_nil.cr#L47"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/IsNil","kind":"class","full_name":"Athena::Validator::Constraints::IsNil","name":"IsNil"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::IsNil):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::IsNil):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::IsNil"}],"args_string":"(value : _, constraint : AVD::Constraints::IsNil) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/is_nil.cr#L49","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::IsNil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if value.nil?\n  return\nend\nself.context.add_violation(constraint.message, NOT_NIL_ERROR, value)\n"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Constraints/ISSN","path":"Athena/Validator/Constraints/ISSN.html","kind":"class","full_name":"Athena::Validator::Constraints::ISSN","name":"ISSN","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/issn.cr","line_number":50,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/issn.cr#L50"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"CHECKSUM_FAILED_ERROR","name":"CHECKSUM_FAILED_ERROR","value":"\"62c01bab-fe8f-4072-aac8-aa4bdcde8361\"","doc":null,"summary":null},{"id":"INVALID_CASE_ERROR","name":"INVALID_CASE_ERROR","value":"\"66f892f3-9eed-4176-b823-0dafde72202a\"","doc":null,"summary":null},{"id":"INVALID_CHARACTERS_ERROR","name":"INVALID_CHARACTERS_ERROR","value":"\"85c5d3aa-fd0a-4cd0-8cf7-e014e6379d59\"","doc":null,"summary":null},{"id":"MISSING_HYPHEN_ERROR","name":"MISSING_HYPHEN_ERROR","value":"\"d6c120a9-0b56-4e45-b4bc-7fd186f2cfbd\"","doc":null,"summary":null},{"id":"TOO_LONG_ERROR","name":"TOO_LONG_ERROR","value":"\"fab8e3ea-2f77-4da7-b40f-d9b24ff8c0cc\"","doc":null,"summary":null},{"id":"TOO_SHORT_ERROR","name":"TOO_SHORT_ERROR","value":"\"85c5d3aa-fd0a-4cd0-8cf7-e014e6379d59\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is a valid [International Standard Serial Number (ISSN)](https://en.wikipedia.org/wiki/Issn).\nThe underlying value is converted to a string via `#to_s` before being validated.\n\nNOTE: As with most other constraints, `nil` and empty strings are considered valid values, in order to allow the value to be optional.\nIf the value is required, consider combining this constraint with `AVD::Constraints::NotBlank`.\n\n## Configuration\n\n### Optional Arguments\n\n#### case_sensitive\n\n**Type:** `Bool` **Default:** `false`\n\nThe validator will allow ISSN values to end with a lowercase `x` by default.\nWhen set to `true`, this requires an uppcase case `X`.\n\n#### require_hypen\n\n**Type:** `Bool` **Default:** `false`\n\nThe validator will allow non hyphenated values by default.\nWhen set to `true`, this requires a hyphenated ISSN value.\n\n#### message\n\n**Type:** `String` **Default:** `This value is not a valid International Standard Serial Number (ISSN).`\n\nThe message that will be shown if the value is not a valid ISSN.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is a valid <a href=\"https://en.wikipedia.org/wiki/Issn\" target=\"_blank\">International Standard Serial Number (ISSN)</a>.</p>","class_methods":[],"constructors":[{"id":"new(case_sensitive:Bool=false,require_hypen:Bool=false,message:String=&quot;ThisvalueisnotavalidInternationalStandardSerialNumber(ISSN).&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(case_sensitive:Bool=false,require_hypen:Bool=false,message:String=&quot;ThisvalueisnotavalidInternationalStandardSerialNumber(ISSN).&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"case_sensitive","doc":null,"default_value":"false","external_name":"case_sensitive","restriction":"Bool"},{"name":"require_hypen","doc":null,"default_value":"false","external_name":"require_hypen","restriction":"Bool"},{"name":"message","doc":null,"default_value":"\"This value is not a valid International Standard Serial Number (ISSN).\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(case_sensitive : Bool = <span class=\"n\">false</span>, require_hypen : Bool = <span class=\"n\">false</span>, message : String = <span class=\"s\">&quot;This value is not a valid International Standard Serial Number (ISSN).&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/issn.cr#L70","def":{"name":"new","args":[{"name":"case_sensitive","doc":null,"default_value":"false","external_name":"case_sensitive","restriction":"Bool"},{"name":"require_hypen","doc":null,"default_value":"false","external_name":"require_hypen","restriction":"Bool"},{"name":"message","doc":null,"default_value":"\"This value is not a valid International Standard Serial Number (ISSN).\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(case_sensitive, require_hypen, message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"case_sensitive?:Bool-instance-method","html_id":"case_sensitive?:Bool-instance-method","name":"case_sensitive?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/issn.cr#L67","def":{"name":"case_sensitive?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@case_sensitive"}},{"id":"require_hypen?:Bool-instance-method","html_id":"require_hypen?:Bool-instance-method","name":"require_hypen?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/issn.cr#L68","def":{"name":"require_hypen?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@require_hypen"}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/issn.cr#L50","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraints/ISSN/Validator","path":"Athena/Validator/Constraints/ISSN/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::ISSN::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/issn.cr","line_number":80,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/issn.cr#L80"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/ISSN","kind":"class","full_name":"Athena::Validator::Constraints::ISSN","name":"ISSN"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::ISSN):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::ISSN):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::ISSN"}],"args_string":"(value : _, constraint : AVD::Constraints::ISSN) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/issn.cr#L82","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::ISSN"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"value = value.to_s\nif value.nil? || value.empty?\n  return\nend\ncanonical = value\nif canonical[4]? == '-'\n  canonical = canonical.delete('-')\nelse\n  if constraint.require_hypen?\n    return self.context.add_violation(constraint.message, MISSING_HYPHEN_ERROR, value)\n  end\nend\nself.validate_size(canonical) do |code|\n  return self.context.add_violation(constraint.message, code, value)\nend\nchar = self.validate_characters(canonical) do\n  return self.context.add_violation(constraint.message, INVALID_CHARACTERS_ERROR, value)\nend\nif constraint.case_sensitive? && (char == 'x')\n  return self.context.add_violation(constraint.message, INVALID_CASE_ERROR, value)\nend\nself.validate_checksum(char, canonical) do\n  self.context.add_violation(constraint.message, CHECKSUM_FAILED_ERROR, value)\nend\n"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Constraints/IsTrue","path":"Athena/Validator/Constraints/IsTrue.html","kind":"class","full_name":"Athena::Validator::Constraints::IsTrue","name":"IsTrue","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/is_true.cr","line_number":32,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/is_true.cr#L32"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"NOT_TRUE_ERROR","name":"NOT_TRUE_ERROR","value":"\"beabd93e-3673-4dfc-8796-01bd1504dd19\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is `true`.\n\n## Configuration\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value should be true.`\n\nThe message that will be shown if the value is not `true`.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is <code>true</code>.</p>","class_methods":[],"constructors":[{"id":"new(message:String=&quot;Thisvalueshouldbetrue.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(message:String=&quot;Thisvalueshouldbetrue.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"This value should be true.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(message : String = <span class=\"s\">&quot;This value should be true.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/is_true.cr#L39","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"\"This value should be true.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/is_true.cr#L32","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraints/IsTrue/Validator","path":"Athena/Validator/Constraints/IsTrue/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::IsTrue::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/is_true.cr","line_number":47,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/is_true.cr#L47"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/IsTrue","kind":"class","full_name":"Athena::Validator::Constraints::IsTrue","name":"IsTrue"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::IsTrue):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::IsTrue):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::IsTrue"}],"args_string":"(value : _, constraint : AVD::Constraints::IsTrue) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/is_true.cr#L49","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::IsTrue"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if value.nil? || (value == true)\n  return\nend\nself.context.add_violation(constraint.message, NOT_TRUE_ERROR, value)\n"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Constraints/LessThan","path":"Athena/Validator/Constraints/LessThan.html","kind":"class","full_name":"Athena::Validator::Constraints::LessThan(ValueType)","name":"LessThan","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraints/AbstractComparison","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison","name":"AbstractComparison"},{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/less_than.cr","line_number":42,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/less_than.cr#L42"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"TOO_HIGH_ERROR","name":"TOO_HIGH_ERROR","value":"\"d9fbedb3-c576-45b5-b4dc-996030349bbf\"","doc":null,"summary":null}],"included_modules":[{"html_id":"athena/Athena/Validator/Constraints/AbstractComparison","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison","name":"AbstractComparison"}],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Validator/Constraints/Negative","kind":"class","full_name":"Athena::Validator::Constraints::Negative","name":"Negative"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is less than another.\n\n## Configuration\n\n### Required Arguments\n\n#### value\n\n**Type:** `Number | String | Time`\n\nDefines the value that the value being validated should be compared to.\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value should be less than {{ compared_value }}.`\n\nThe message that will be shown if the value is not less than the comparison value.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ compared_value }}` - The expected value.\n* `{{ compared_value_type }}` - The type of the expected value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is less than another.</p>","class_methods":[],"constructors":[{"id":"new(value:ValueType,message:String=default_error_message,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(value:ValueType,message:String=default_error_message,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"ValueType"},{"name":"message","doc":null,"default_value":"default_error_message","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(value : ValueType, message : String = default_error_message, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/abstract_comparison.cr#L9","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"ValueType"},{"name":"message","doc":null,"default_value":"default_error_message","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = LessThan(ValueType).allocate\n_.initialize(value, message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"default_error_message:String-instance-method","html_id":"default_error_message:String-instance-method","name":"default_error_message","doc":"Returns the `AVD::Constraint#message` for this constraint.","summary":"<p>Returns the <code><a href=\"../../../Athena/Validator/Constraint.html#message:String-instance-method\">AVD::Constraint#message</a></code> for this constraint.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/less_than.cr#L51","def":{"name":"default_error_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"This value should be less than {{ compared_value }}.\""}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/less_than.cr#L42","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraints/LessThan/Validator","path":"Athena/Validator/Constraints/LessThan/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::LessThan::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraints/ComparisonValidator","kind":"struct","full_name":"Athena::Validator::Constraints::ComparisonValidator","name":"ComparisonValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraints/ComparisonValidator","kind":"struct","full_name":"Athena::Validator::Constraints::ComparisonValidator","name":"ComparisonValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/less_than.cr","line_number":55,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/less_than.cr#L55"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/LessThan","kind":"class","full_name":"Athena::Validator::Constraints::LessThan(ValueType)","name":"LessThan"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"compare_values(actual:Number,expected:Number):Bool-instance-method","html_id":"compare_values(actual:Number,expected:Number):Bool-instance-method","name":"compare_values","doc":null,"summary":null,"abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"Number"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"Number"}],"args_string":"(actual : Number, expected : Number) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/less_than.cr#L56","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"Number"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"actual < expected"}},{"id":"compare_values(actual:String,expected:String):Bool-instance-method","html_id":"compare_values(actual:String,expected:String):Bool-instance-method","name":"compare_values","doc":null,"summary":null,"abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"String"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"String"}],"args_string":"(actual : String, expected : String) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/less_than.cr#L60","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"String"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"actual < expected"}},{"id":"compare_values(actual:Time,expected:Time):Bool-instance-method","html_id":"compare_values(actual:Time,expected:Time):Bool-instance-method","name":"compare_values","doc":null,"summary":null,"abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"Time"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"Time"}],"args_string":"(actual : Time, expected : Time) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/less_than.cr#L64","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"Time"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"actual < expected"}},{"id":"compare_values(actual:_,expected:_):NoReturn-instance-method","html_id":"compare_values(actual:_,expected:_):NoReturn-instance-method","name":"compare_values","doc":"Returns `true` if the provided *actual* and *expected* values are compatible, otherwise `false`.","summary":"<p>Returns <code>true</code> if the provided <em>actual</em> and <em>expected</em> values are compatible, otherwise <code>false</code>.</p>","abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"_"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"_"}],"args_string":"(actual : _, expected : _) : NoReturn","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/less_than.cr#L69","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"_"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NoReturn","visibility":"Public","body":"self.raise_invalid_type(actual, \"Number | String | Time\")"}},{"id":"error_code:String-instance-method","html_id":"error_code:String-instance-method","name":"error_code","doc":"Returns the expected error code for `self`.","summary":"<p>Returns the expected error code for <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/less_than.cr#L75","def":{"name":"error_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"TOO_HIGH_ERROR"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Constraints/LessThanOrEqual","path":"Athena/Validator/Constraints/LessThanOrEqual.html","kind":"class","full_name":"Athena::Validator::Constraints::LessThanOrEqual(ValueType)","name":"LessThanOrEqual","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraints/AbstractComparison","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison","name":"AbstractComparison"},{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/less_than_or_equal.cr","line_number":42,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/less_than_or_equal.cr#L42"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"TOO_HIGH_ERROR","name":"TOO_HIGH_ERROR","value":"\"515a12ff-82f2-4434-9635-137164d5b467\"","doc":null,"summary":null}],"included_modules":[{"html_id":"athena/Athena/Validator/Constraints/AbstractComparison","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison","name":"AbstractComparison"}],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Validator/Constraints/NegativeOrZero","kind":"class","full_name":"Athena::Validator::Constraints::NegativeOrZero","name":"NegativeOrZero"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is less than or equal to another.\n\n## Configuration\n\n### Required Arguments\n\n#### value\n\n**Type:** `Number | String | Time`\n\nDefines the value that the value being validated should be compared to.\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value should be less than or equal to {{ compared_value }}.`\n\nThe message that will be shown if the value is not less than or equal to the comparison value.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ compared_value }}` - The expected value.\n* `{{ compared_value_type }}` - The type of the expected value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is less than or equal to another.</p>","class_methods":[],"constructors":[{"id":"new(value:ValueType,message:String=default_error_message,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(value:ValueType,message:String=default_error_message,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"ValueType"},{"name":"message","doc":null,"default_value":"default_error_message","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(value : ValueType, message : String = default_error_message, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/abstract_comparison.cr#L9","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"ValueType"},{"name":"message","doc":null,"default_value":"default_error_message","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = LessThanOrEqual(ValueType).allocate\n_.initialize(value, message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"default_error_message:String-instance-method","html_id":"default_error_message:String-instance-method","name":"default_error_message","doc":"Returns the `AVD::Constraint#message` for this constraint.","summary":"<p>Returns the <code><a href=\"../../../Athena/Validator/Constraint.html#message:String-instance-method\">AVD::Constraint#message</a></code> for this constraint.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/less_than_or_equal.cr#L51","def":{"name":"default_error_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"This value should be less than or equal to {{ compared_value }}.\""}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/less_than_or_equal.cr#L42","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraints/LessThanOrEqual/Validator","path":"Athena/Validator/Constraints/LessThanOrEqual/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::LessThanOrEqual::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraints/ComparisonValidator","kind":"struct","full_name":"Athena::Validator::Constraints::ComparisonValidator","name":"ComparisonValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraints/ComparisonValidator","kind":"struct","full_name":"Athena::Validator::Constraints::ComparisonValidator","name":"ComparisonValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/less_than_or_equal.cr","line_number":55,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/less_than_or_equal.cr#L55"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/LessThanOrEqual","kind":"class","full_name":"Athena::Validator::Constraints::LessThanOrEqual(ValueType)","name":"LessThanOrEqual"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"compare_values(actual:Number,expected:Number):Bool-instance-method","html_id":"compare_values(actual:Number,expected:Number):Bool-instance-method","name":"compare_values","doc":null,"summary":null,"abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"Number"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"Number"}],"args_string":"(actual : Number, expected : Number) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/less_than_or_equal.cr#L56","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"Number"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"actual <= expected"}},{"id":"compare_values(actual:String,expected:String):Bool-instance-method","html_id":"compare_values(actual:String,expected:String):Bool-instance-method","name":"compare_values","doc":null,"summary":null,"abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"String"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"String"}],"args_string":"(actual : String, expected : String) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/less_than_or_equal.cr#L60","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"String"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"actual <= expected"}},{"id":"compare_values(actual:Time,expected:Time):Bool-instance-method","html_id":"compare_values(actual:Time,expected:Time):Bool-instance-method","name":"compare_values","doc":null,"summary":null,"abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"Time"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"Time"}],"args_string":"(actual : Time, expected : Time) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/less_than_or_equal.cr#L64","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"Time"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"actual <= expected"}},{"id":"compare_values(actual:_,expected:_):NoReturn-instance-method","html_id":"compare_values(actual:_,expected:_):NoReturn-instance-method","name":"compare_values","doc":"Returns `true` if the provided *actual* and *expected* values are compatible, otherwise `false`.","summary":"<p>Returns <code>true</code> if the provided <em>actual</em> and <em>expected</em> values are compatible, otherwise <code>false</code>.</p>","abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"_"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"_"}],"args_string":"(actual : _, expected : _) : NoReturn","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/less_than_or_equal.cr#L69","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"_"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NoReturn","visibility":"Public","body":"self.raise_invalid_type(actual, \"Number | String | Time\")"}},{"id":"error_code:String-instance-method","html_id":"error_code:String-instance-method","name":"error_code","doc":"Returns the expected error code for `self`.","summary":"<p>Returns the expected error code for <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/less_than_or_equal.cr#L75","def":{"name":"error_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"TOO_HIGH_ERROR"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Constraints/Luhn","path":"Athena/Validator/Constraints/Luhn.html","kind":"class","full_name":"Athena::Validator::Constraints::Luhn","name":"Luhn","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/luhn.cr","line_number":36,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/luhn.cr#L36"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"CHECKSUM_FAILED_ERROR","name":"CHECKSUM_FAILED_ERROR","value":"\"a4f089dd-fd63-4d50-ac30-34ed2a8dc9dd\"","doc":null,"summary":null},{"id":"INVALID_CHARACTERS_ERROR","name":"INVALID_CHARACTERS_ERROR","value":"\"c42b8d36-d9e9-4f5f-aad6-5190e27a1102\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a credit card number passes the [Luhn algorithm](https://en.wikipedia.org/wiki/Luhn_algorithm); a useful first step to validating a credit card.\nThe underlying value is converted to a string via `#to_s` before being validated.\n\nNOTE: As with most other constraints, `nil` and empty strings are considered valid values, in order to allow the value to be optional.\nIf the value is required, consider combining this constraint with `AVD::Constraints::NotBlank`.\n\n## Configuration\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value is not a valid credit card number.`\n\nThe message that will be shown if the value is not pass the Luhn check.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a credit card number passes the <a href=\"https://en.wikipedia.org/wiki/Luhn_algorithm\" target=\"_blank\">Luhn algorithm</a>; a useful first step to validating a credit card.</p>","class_methods":[],"constructors":[{"id":"new(message:String=&quot;Thisvalueisnotavalidcreditcardnumber.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(message:String=&quot;Thisvalueisnotavalidcreditcardnumber.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"This value is not a valid credit card number.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(message : String = <span class=\"s\">&quot;This value is not a valid credit card number.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/luhn.cr#L45","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"\"This value is not a valid credit card number.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/luhn.cr#L36","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraints/Luhn/Validator","path":"Athena/Validator/Constraints/Luhn/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::Luhn::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/luhn.cr","line_number":53,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/luhn.cr#L53"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/Luhn","kind":"class","full_name":"Athena::Validator::Constraints::Luhn","name":"Luhn"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::Luhn):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::Luhn):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Luhn"}],"args_string":"(value : _, constraint : AVD::Constraints::Luhn) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/luhn.cr#L55","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Luhn"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"value = value.to_s\nif value.nil? || value.empty?\n  return\nend\ncharacters = value.chars\nif characters.all?(&.number?)\nelse\n  return self.context.add_violation(constraint.message, INVALID_CHARACTERS_ERROR, value)\nend\nlast_dig : Int32 = characters.pop.to_i\nchecksum : Int32 = (characters.reverse.map_with_index do |n, idx|\n  val = idx.even? ? n.to_i * 2 : n.to_i\n  if val > 9\n    val = val - 9\n  end\n  val\nend.sum + last_dig)\nif (!checksum.zero?) && (checksum.divisible_by?(10))\n  return\nend\nself.context.add_violation(constraint.message, CHECKSUM_FAILED_ERROR, value)\n"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Constraints/Negative","path":"Athena/Validator/Constraints/Negative.html","kind":"class","full_name":"Athena::Validator::Constraints::Negative","name":"Negative","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraints/LessThan","kind":"class","full_name":"Athena::Validator::Constraints::LessThan","name":"LessThan"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraints/LessThan","kind":"class","full_name":"Athena::Validator::Constraints::LessThan","name":"LessThan"},{"html_id":"athena/Athena/Validator/Constraints/AbstractComparison","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison","name":"AbstractComparison"},{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/negative.cr","line_number":35,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/negative.cr#L35"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is a negative number.\nUse `AVD::Constraints::NegativeOrZero` if you wish to also allow `0`.\n\n## Configuration\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value should be negative.`\n\nThe message that will be shown if the value is not less than `0`.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ compared_value }}` - The expected value.\n* `{{ compared_value_type }}` - The type of the expected value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is a negative number.</p>","class_methods":[],"constructors":[{"id":"new(message:String=&quot;Thisvalueshouldbenegative.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(message:String=&quot;Thisvalueshouldbenegative.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"This value should be negative.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(message : String = <span class=\"s\">&quot;This value should be negative.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/negative.cr#L36","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"\"This value should be negative.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/negative.cr#L44","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"AVD::Constraints::LessThan::Validator"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Constraints/NegativeOrZero","path":"Athena/Validator/Constraints/NegativeOrZero.html","kind":"class","full_name":"Athena::Validator::Constraints::NegativeOrZero","name":"NegativeOrZero","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraints/LessThanOrEqual","kind":"class","full_name":"Athena::Validator::Constraints::LessThanOrEqual","name":"LessThanOrEqual"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraints/LessThanOrEqual","kind":"class","full_name":"Athena::Validator::Constraints::LessThanOrEqual","name":"LessThanOrEqual"},{"html_id":"athena/Athena/Validator/Constraints/AbstractComparison","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison","name":"AbstractComparison"},{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/negative_or_zero.cr","line_number":35,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/negative_or_zero.cr#L35"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is a negative number, or `0`.\nUse `AVD::Constraints::Negative` if you don't want to allow `0`.\n\n## Configuration\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value should be negative or zero.`\n\nThe message that will be shown if the value is not less than or equal to `0`.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ compared_value }}` - The expected value.\n* `{{ compared_value_type }}` - The type of the expected value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe `AVD::Constraint@payload` is not used by `Athena::Validator`, but its processing is completely up to you","summary":"<p>Validates that a value is a negative number, or <code>0</code>.</p>","class_methods":[],"constructors":[{"id":"new(message:String=&quot;Thisvalueshouldbenegativeorzero.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(message:String=&quot;Thisvalueshouldbenegativeorzero.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"This value should be negative or zero.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(message : String = <span class=\"s\">&quot;This value should be negative or zero.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/negative_or_zero.cr#L36","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"\"This value should be negative or zero.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/negative_or_zero.cr#L44","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"AVD::Constraints::LessThanOrEqual::Validator"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Constraints/NotBlank","path":"Athena/Validator/Constraints/NotBlank.html","kind":"class","full_name":"Athena::Validator::Constraints::NotBlank","name":"NotBlank","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/not_blank.cr","line_number":38,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/not_blank.cr#L38"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"IS_BLANK_ERROR","name":"IS_BLANK_ERROR","value":"\"0d0c3254-3642-4cb0-9882-46ee5918e6e3\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is not blank; meaning not equal to a blank string, an empty `Iterable`, `false`, or optionally `nil`.\n\n## Configuration\n\n### Optional Arguments\n\n#### allow_nil\n\n**Type:** `Bool` **Default:** `false`\n\nIf set to `true`, `nil` values are considered valid and will not trigger a violation.\n\n#### message\n\n**Type:** `String` **Default:** `This value should not be blank.`\n\nThe message that will be shown if the value is blank.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is not blank; meaning not equal to a blank string, an empty <code>Iterable</code>, <code>false</code>, or optionally <code>nil</code>.</p>","class_methods":[],"constructors":[{"id":"new(allow_nil:Bool=false,message:String=&quot;Thisvalueshouldnotbeblank.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(allow_nil:Bool=false,message:String=&quot;Thisvalueshouldnotbeblank.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"allow_nil","doc":null,"default_value":"false","external_name":"allow_nil","restriction":"Bool"},{"name":"message","doc":null,"default_value":"\"This value should not be blank.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(allow_nil : Bool = <span class=\"n\">false</span>, message : String = <span class=\"s\">&quot;This value should not be blank.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/not_blank.cr#L47","def":{"name":"new","args":[{"name":"allow_nil","doc":null,"default_value":"false","external_name":"allow_nil","restriction":"Bool"},{"name":"message","doc":null,"default_value":"\"This value should not be blank.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(allow_nil, message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"allow_nil?:Bool-instance-method","html_id":"allow_nil?:Bool-instance-method","name":"allow_nil?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/not_blank.cr#L45","def":{"name":"allow_nil?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@allow_nil"}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/not_blank.cr#L38","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraints/NotBlank/Validator","path":"Athena/Validator/Constraints/NotBlank/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::NotBlank::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/not_blank.cr","line_number":56,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/not_blank.cr#L56"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/NotBlank","kind":"class","full_name":"Athena::Validator::Constraints::NotBlank","name":"NotBlank"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:String?,constraint:AVD::Constraints::NotBlank):Nil-instance-method","html_id":"validate(value:String?,constraint:AVD::Constraints::NotBlank):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String | ::Nil"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::NotBlank"}],"args_string":"(value : String?, constraint : AVD::Constraints::NotBlank) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/not_blank.cr#L58","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String | ::Nil"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::NotBlank"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"validate_value(value, constraint) do |v|\n  v.blank?\nend"}},{"id":"validate(value:Bool?,constraint:AVD::Constraints::NotBlank):Nil-instance-method","html_id":"validate(value:Bool?,constraint:AVD::Constraints::NotBlank):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Bool | ::Nil"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::NotBlank"}],"args_string":"(value : Bool?, constraint : AVD::Constraints::NotBlank) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/not_blank.cr#L65","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Bool | ::Nil"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::NotBlank"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"validate_value(value, constraint) do |v|\n  v == false\nend"}},{"id":"validate(value:Iterable?,constraint:AVD::Constraints::NotBlank):Nil-instance-method","html_id":"validate(value:Iterable?,constraint:AVD::Constraints::NotBlank):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Iterable | ::Nil"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::NotBlank"}],"args_string":"(value : Iterable?, constraint : AVD::Constraints::NotBlank) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/not_blank.cr#L72","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Iterable | ::Nil"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::NotBlank"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"validate_value(value, constraint) do |v|\n  v.empty?\nend"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Constraints/NotEqualTo","path":"Athena/Validator/Constraints/NotEqualTo.html","kind":"class","full_name":"Athena::Validator::Constraints::NotEqualTo(ValueType)","name":"NotEqualTo","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraints/AbstractComparison","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison","name":"AbstractComparison"},{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/not_equal_to.cr","line_number":40,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/not_equal_to.cr#L40"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"IS_EQUAL_ERROR","name":"IS_EQUAL_ERROR","value":"\"984a0525-d73e-40c0-81c2-2ecbca7e4c96\"","doc":null,"summary":null}],"included_modules":[{"html_id":"athena/Athena/Validator/Constraints/AbstractComparison","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison","name":"AbstractComparison"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is not equal to another.\n\n## Configuration\n\n### Required Arguments\n\n#### value\n\nDefines the value that the value being validated should be compared to.\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value should not be equal to {{ compared_value }}.`\n\nThe message that will be shown if the value is equal to the comparison value.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ compared_value }}` - The expected value.\n* `{{ compared_value_type }}` - The type of the expected value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is not equal to another.</p>","class_methods":[],"constructors":[{"id":"new(value:ValueType,message:String=default_error_message,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(value:ValueType,message:String=default_error_message,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"ValueType"},{"name":"message","doc":null,"default_value":"default_error_message","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(value : ValueType, message : String = default_error_message, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/abstract_comparison.cr#L9","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"ValueType"},{"name":"message","doc":null,"default_value":"default_error_message","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = NotEqualTo(ValueType).allocate\n_.initialize(value, message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"default_error_message:String-instance-method","html_id":"default_error_message:String-instance-method","name":"default_error_message","doc":"Returns the `AVD::Constraint#message` for this constraint.","summary":"<p>Returns the <code><a href=\"../../../Athena/Validator/Constraint.html#message:String-instance-method\">AVD::Constraint#message</a></code> for this constraint.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/not_equal_to.cr#L49","def":{"name":"default_error_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"\"This value should not be equal to {{ compared_value }}.\""}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/not_equal_to.cr#L40","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraints/NotEqualTo/Validator","path":"Athena/Validator/Constraints/NotEqualTo/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::NotEqualTo::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraints/ComparisonValidator","kind":"struct","full_name":"Athena::Validator::Constraints::ComparisonValidator","name":"ComparisonValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraints/ComparisonValidator","kind":"struct","full_name":"Athena::Validator::Constraints::ComparisonValidator","name":"ComparisonValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/not_equal_to.cr","line_number":53,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/not_equal_to.cr#L53"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/NotEqualTo","kind":"class","full_name":"Athena::Validator::Constraints::NotEqualTo(ValueType)","name":"NotEqualTo"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"compare_values(actual:_,expected:_):Bool-instance-method","html_id":"compare_values(actual:_,expected:_):Bool-instance-method","name":"compare_values","doc":"Returns `true` if the provided *actual* and *expected* values are compatible, otherwise `false`.","summary":"<p>Returns <code>true</code> if the provided <em>actual</em> and <em>expected</em> values are compatible, otherwise <code>false</code>.</p>","abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"_"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"_"}],"args_string":"(actual : _, expected : _) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/not_equal_to.cr#L55","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"_"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"actual != expected"}},{"id":"error_code:String-instance-method","html_id":"error_code:String-instance-method","name":"error_code","doc":"Returns the expected error code for `self`.","summary":"<p>Returns the expected error code for <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/not_equal_to.cr#L60","def":{"name":"error_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"IS_EQUAL_ERROR"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Constraints/NotNil","path":"Athena/Validator/Constraints/NotNil.html","kind":"class","full_name":"Athena::Validator::Constraints::NotNil","name":"NotNil","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/not_nil.cr","line_number":35,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/not_nil.cr#L35"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"IS_NIL_ERROR","name":"IS_NIL_ERROR","value":"\"c7e77b14-744e-44c0-aa7e-391c69cc335c\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is not `nil`.\n\nNOTE: Due to Crystal's static typing, when validating objects the property's type must be nilable,\notherwise `nil` is inherently not allowed due to the compiler's type checking.\n\n## Configuration\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value should not be null.`\n\nThe message that will be shown if the value is `nil`.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is not <code>nil</code>.</p>","class_methods":[],"constructors":[{"id":"new(message:String=&quot;Thisvalueshouldnotbenull.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(message:String=&quot;Thisvalueshouldnotbenull.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"This value should not be null.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(message : String = <span class=\"s\">&quot;This value should not be null.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/not_nil.cr#L42","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"\"This value should not be null.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/not_nil.cr#L35","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraints/NotNil/Validator","path":"Athena/Validator/Constraints/NotNil/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::NotNil::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/not_nil.cr","line_number":50,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/not_nil.cr#L50"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/NotNil","kind":"class","full_name":"Athena::Validator::Constraints::NotNil","name":"NotNil"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::NotNil):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::NotNil):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::NotNil"}],"args_string":"(value : _, constraint : AVD::Constraints::NotNil) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/not_nil.cr#L52","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::NotNil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if value.nil?\nelse\n  return\nend\nself.context.add_violation(constraint.message, IS_NIL_ERROR, value)\n"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Constraints/Positive","path":"Athena/Validator/Constraints/Positive.html","kind":"class","full_name":"Athena::Validator::Constraints::Positive","name":"Positive","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraints/GreaterThan","kind":"class","full_name":"Athena::Validator::Constraints::GreaterThan","name":"GreaterThan"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraints/GreaterThan","kind":"class","full_name":"Athena::Validator::Constraints::GreaterThan","name":"GreaterThan"},{"html_id":"athena/Athena/Validator/Constraints/AbstractComparison","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison","name":"AbstractComparison"},{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/positive.cr","line_number":35,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/positive.cr#L35"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is a positive number.\nUse `AVD::Constraints::PositiveOrZero` if you wish to also allow `0`.\n\n## Configuration\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value should be positive.`\n\nThe message that will be shown if the value is not greater than `0`.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ compared_value }}` - The expected value.\n* `{{ compared_value_type }}` - The type of the expected value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is a positive number.</p>","class_methods":[],"constructors":[{"id":"new(message:String=&quot;Thisvalueshouldbepositive.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(message:String=&quot;Thisvalueshouldbepositive.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"This value should be positive.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(message : String = <span class=\"s\">&quot;This value should be positive.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/positive.cr#L36","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"\"This value should be positive.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/positive.cr#L44","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"AVD::Constraints::GreaterThan::Validator"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Constraints/PositiveOrZero","path":"Athena/Validator/Constraints/PositiveOrZero.html","kind":"class","full_name":"Athena::Validator::Constraints::PositiveOrZero","name":"PositiveOrZero","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraints/GreaterThanOrEqual","kind":"class","full_name":"Athena::Validator::Constraints::GreaterThanOrEqual","name":"GreaterThanOrEqual"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraints/GreaterThanOrEqual","kind":"class","full_name":"Athena::Validator::Constraints::GreaterThanOrEqual","name":"GreaterThanOrEqual"},{"html_id":"athena/Athena/Validator/Constraints/AbstractComparison","kind":"module","full_name":"Athena::Validator::Constraints::AbstractComparison","name":"AbstractComparison"},{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/positive_or_zero.cr","line_number":35,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/positive_or_zero.cr#L35"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is a positive number, or `0`.\nUse `AVD::Constraints::Positive` if you don't want to allow `0`.\n\n## Configuration\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This value should be positive or zero.`\n\nThe message that will be shown if the value is not greater than or equal to `0`.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ compared_value }}` - The expected value.\n* `{{ compared_value_type }}` - The type of the expected value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is a positive number, or <code>0</code>.</p>","class_methods":[],"constructors":[{"id":"new(message:String=&quot;Thisvalueshouldbepositiveorzero.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(message:String=&quot;Thisvalueshouldbepositiveorzero.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"This value should be positive or zero.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(message : String = <span class=\"s\">&quot;This value should be positive or zero.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/positive_or_zero.cr#L36","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"\"This value should be positive or zero.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/positive_or_zero.cr#L44","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"AVD::Constraints::GreaterThanOrEqual::Validator"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Constraints/Range","path":"Athena/Validator/Constraints/Range.html","kind":"class","full_name":"Athena::Validator::Constraints::Range","name":"Range","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/range.cr","line_number":71,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/range.cr#L71"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"NOT_IN_RANGE_ERROR","name":"NOT_IN_RANGE_ERROR","value":"\"7e62386d-30ae-4e7c-918f-1b7e571c6d69\"","doc":null,"summary":null},{"id":"TOO_HIGH_ERROR","name":"TOO_HIGH_ERROR","value":"\"5d9aed01-ac49-4d8e-9c16-e4aab74ea774\"","doc":null,"summary":null},{"id":"TOO_LOW_ERROR","name":"TOO_LOW_ERROR","value":"\"f0316644-882e-4779-a404-ee7ac97ddecc\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a `Number` or `Time` value is between some minimum and maximum.\n\n## Configuration\n\n### Required Arguments\n\n#### range\n\n**Type:** `::Range`\n\nThe `::Range` that defines the minimum and maximum values, if any.\nAn endless range can be used to only have a minimum or maximum.\n\n### Optional Arguments\n\nNOTE: This constraint does not support a `message` argument.\n\n#### not_in_range_message\n\n**Type:** `String` **Default:** `This value should be between {{ min }} and {{ max }}.`\n\nThe message that will be shown if the value is less than the min or greater than the max.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ min }}` - The lower limit.\n* `{{ max }}` - The upper limit.\n\n#### min_message\n\n**Type:** `String` **Default:** `This value should be {{ limit }} or more.`\n\nThe message that will be shown if the value is less than the min, and no max has been provided.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ limit }}` - The lower limit.\n\n#### max_message\n\n**Type:** `String` **Default:** `This value should be {{ limit }} or less.`\n\nThe message that will be shown if the value is more than the max, and no min has been provided.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ limit }}` - The upper limit.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a <code>Number</code> or <code>Time</code> value is between some minimum and maximum.</p>","class_methods":[],"constructors":[{"id":"new(range:::Range,not_in_range_message:String=&quot;Thisvalueshouldbebetween{{min}}and{{max}}.&quot;,min_message:String=&quot;Thisvalueshouldbe{{limit}}ormore.&quot;,max_message:String=&quot;Thisvalueshouldbe{{limit}}orless.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(range:::Range,not_in_range_message:String=&quot;Thisvalueshouldbebetween{{min}}and{{max}}.&quot;,min_message:String=&quot;Thisvalueshouldbe{{limit}}ormore.&quot;,max_message:String=&quot;Thisvalueshouldbe{{limit}}orless.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"::Range"},{"name":"not_in_range_message","doc":null,"default_value":"\"This value should be between {{ min }} and {{ max }}.\"","external_name":"not_in_range_message","restriction":"String"},{"name":"min_message","doc":null,"default_value":"\"This value should be {{ limit }} or more.\"","external_name":"min_message","restriction":"String"},{"name":"max_message","doc":null,"default_value":"\"This value should be {{ limit }} or less.\"","external_name":"max_message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(range : ::Range, not_in_range_message : String = <span class=\"s\">&quot;This value should be between {{ min }} and {{ max }}.&quot;</span>, min_message : String = <span class=\"s\">&quot;This value should be {{ limit }} or more.&quot;</span>, max_message : String = <span class=\"s\">&quot;This value should be {{ limit }} or less.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/range.cr#L88","def":{"name":"new","args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"::Range"},{"name":"not_in_range_message","doc":null,"default_value":"\"This value should be between {{ min }} and {{ max }}.\"","external_name":"not_in_range_message","restriction":"String"},{"name":"min_message","doc":null,"default_value":"\"This value should be {{ limit }} or more.\"","external_name":"min_message","restriction":"String"},{"name":"max_message","doc":null,"default_value":"\"This value should be {{ limit }} or less.\"","external_name":"max_message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(range.begin, range.end, not_in_range_message, min_message, max_message, groups, payload)"}}],"instance_methods":[{"id":"max:Number::Primitive|Time|Nil-instance-method","html_id":"max:Number::Primitive|Time|Nil-instance-method","name":"max","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Number::Primitive | Time | Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/range.cr#L83","def":{"name":"max","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Number::Primitive | Time | Nil","visibility":"Public","body":"@max"}},{"id":"max_message:String-instance-method","html_id":"max_message:String-instance-method","name":"max_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/range.cr#L86","def":{"name":"max_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@max_message"}},{"id":"min:Number::Primitive|Time|Nil-instance-method","html_id":"min:Number::Primitive|Time|Nil-instance-method","name":"min","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Number::Primitive | Time | Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/range.cr#L82","def":{"name":"min","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Number::Primitive | Time | Nil","visibility":"Public","body":"@min"}},{"id":"min_message:String-instance-method","html_id":"min_message:String-instance-method","name":"min_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/range.cr#L85","def":{"name":"min_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@min_message"}},{"id":"not_in_range_message:String-instance-method","html_id":"not_in_range_message:String-instance-method","name":"not_in_range_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/range.cr#L84","def":{"name":"not_in_range_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@not_in_range_message"}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/range.cr#L71","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraints/Range/Validator","path":"Athena/Validator/Constraints/Range/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::Range::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/range.cr","line_number":111,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/range.cr#L111"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/Range","kind":"class","full_name":"Athena::Validator::Constraints::Range","name":"Range"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:Number|Time|Nil,constraint:AVD::Constraints::Range):Nil-instance-method","html_id":"validate(value:Number|Time|Nil,constraint:AVD::Constraints::Range):Nil-instance-method","name":"validate","doc":":inherit:\n\nameba:disable Metrics/CyclomaticComplexity","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Number | Time | Nil"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Range"}],"args_string":"(value : Number | Time | Nil, constraint : AVD::Constraints::Range) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/range.cr#L115","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Number | Time | Nil"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Range"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if value.nil?\n  return\nend\nmin = constraint.min\nmax = constraint.max\ncase {value, min, max}\nwhen {Number, ::Union(Number::Primitive, ::Nil), ::Union(Number::Primitive, ::Nil)}\n  if (min && max) && (value < min || value > max)\n    return self.add_not_in_range_violation(constraint, value, min, max)\n  end\n  if max && value > max\n    return self.add_too_high_violation(constraint, value, max)\n  end\n  if min && value < min\n    add_too_low_violation(constraint, value, min)\n  end\nwhen {Time, ::Union(Time, ::Nil), ::Union(Time, ::Nil)}\n  if (min && max) && (value < min || value > max)\n    return self.add_not_in_range_violation(constraint, value, min, max)\n  end\n  if max && value > max\n    return self.add_too_high_violation(constraint, value, max)\n  end\n  if min && value < min\n    add_too_low_violation(constraint, value, min)\n  end\nend\n"}},{"id":"validate(value:_,constraint:AVD::Constraints::Range):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::Range):Nil-instance-method","name":"validate","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Range"}],"args_string":"(value : _, constraint : AVD::Constraints::Range) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/range.cr#L135","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Range"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"raise(AVD::Exceptions::UnexpectedValueError.new(value, \"Number | Time\"))"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Constraints/Regex","path":"Athena/Validator/Constraints/Regex.html","kind":"class","full_name":"Athena::Validator::Constraints::Regex","name":"Regex","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/regex.cr","line_number":51,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/regex.cr#L51"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"REGEX_FAILED_ERROR","name":"REGEX_FAILED_ERROR","value":"\"108987a0-2d81-44a0-b8d4-1c7ab8815343\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value matches a regular expression.\nThe underlying value is converted to a string via `#to_s` before being validated.\n\nNOTE: As with most other constraints, `nil` and empty strings are considered valid values, in order to allow the value to be optional.\nIf the value is required, consider combining this constraint with `AVD::Constraints::NotBlank`.\n\n## Configuration\n\n### Required Arguments\n\n#### pattern\n\n**Type:** `::Regex`\n\nThe `::Regex` pattern that the value should match.\n\n### Optional Arguments\n\n#### match\n\n**Type:** `Bool` **Default:** `true`\n\nIf set to `false`, validation will require the value does _NOT_ match the [pattern](#pattern).\n\n#### message\n\n**Type:** `String` **Default:** `This value should match '{{ pattern }}'.`\n\nThe message that will be shown if the value does not match the [pattern](#pattern).\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ pattern }}` - The regular expression pattern that the value should match.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value matches a regular expression.</p>","class_methods":[],"constructors":[{"id":"new(pattern:::Regex,match:Bool=true,message:String=&quot;Thisvalueshouldmatch&#39;{{pattern}}&#39;.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(pattern:::Regex,match:Bool=true,message:String=&quot;Thisvalueshouldmatch&#39;{{pattern}}&#39;.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pattern","doc":null,"default_value":"","external_name":"pattern","restriction":"::Regex"},{"name":"match","doc":null,"default_value":"true","external_name":"match","restriction":"Bool"},{"name":"message","doc":null,"default_value":"\"This value should match '{{ pattern }}'.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(pattern : ::Regex, match : Bool = <span class=\"n\">true</span>, message : String = <span class=\"s\">&quot;This value should match &#39;{{ pattern }}&#39;.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/regex.cr#L61","def":{"name":"new","args":[{"name":"pattern","doc":null,"default_value":"","external_name":"pattern","restriction":"::Regex"},{"name":"match","doc":null,"default_value":"true","external_name":"match","restriction":"Bool"},{"name":"message","doc":null,"default_value":"\"This value should match '{{ pattern }}'.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(pattern, match, message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"match?:Bool-instance-method","html_id":"match?:Bool-instance-method","name":"match?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/regex.cr#L59","def":{"name":"match?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@match"}},{"id":"pattern:::Regex-instance-method","html_id":"pattern:::Regex-instance-method","name":"pattern","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ::Regex","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/regex.cr#L58","def":{"name":"pattern","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Regex","visibility":"Public","body":"@pattern"}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/regex.cr#L51","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraints/Regex/Validator","path":"Athena/Validator/Constraints/Regex/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::Regex::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/regex.cr","line_number":71,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/regex.cr#L71"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/Regex","kind":"class","full_name":"Athena::Validator::Constraints::Regex","name":"Regex"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::Regex):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::Regex):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Regex"}],"args_string":"(value : _, constraint : AVD::Constraints::Regex) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/regex.cr#L73","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Regex"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"value = value.to_s\nif value.nil? || value.empty?\n  return\nend\nif constraint.match? ^ (value.matches?(constraint.pattern))\nelse\n  return\nend\n((self.context.build_violation(constraint.message, REGEX_FAILED_ERROR, value)).add_parameter(\"{{ pattern }}\", constraint.pattern)).add\n"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Constraints/Sequentially","path":"Athena/Validator/Constraints/Sequentially.html","kind":"class","full_name":"Athena::Validator::Constraints::Sequentially","name":"Sequentially","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraints/Composite","kind":"class","full_name":"Athena::Validator::Constraints::Composite","name":"Composite"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraints/Composite","kind":"class","full_name":"Athena::Validator::Constraints::Composite","name":"Composite"},{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/sequentially.cr","line_number":66,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/sequentially.cr#L66"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates a value against a collection of constraints, stopping once the first violation is raised.\n\n## Configuration\n\n### Required Arguments\n\n#### constraints\n\n**Type:** `Array(AVD::Constraint) | AVD::Constraint`\n\nThe `AVD::Constraint`(s) that are to be applied sequentially.\n\n### Optional Arguments\n\nNOTE: This constraint does not support a `message` argument.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.\n\n## Usage\n\nSuppose you have an object with a `address` property which should meet the following criteria:\n\n* Is not a blank string\n* Is at least 10 characters long\n* Is in a specific format\n* Is geolocalizable using an external API\n\nIf you were to apply all of these constraints to the `address` property, you may run into some problems.\nFor example, multiple violations may be added for the same property, or you may perform a useless and heavy\nexternal call to geolocalize the address when it is not in a proper format.\n\nTo solve this we can validate these constraints sequentially.\n\n```\nclass Location\n  include AVD::Validatable\n\n  PATTERN = /some_pattern/\n\n  def initialize(@address : String); end\n\n  @[Assert::Sequentially([\n    @[Assert::NotBlank],\n    @[Assert::Size(10..)],\n    @[Assert::Regex(Location::PATTERN)],\n    @[Assert::CustomGeolocalizationConstraint],\n  ])]\n  getter address : String\nend\n```\n\nNOTE: The annotation approach only supports two levels of nested annotations.\nManually wire up the constraint via code if you require more than that.","summary":"<p>Validates a value against a collection of constraints, stopping once the first violation is raised.</p>","class_methods":[],"constructors":[{"id":"new(constraints:Array(AVD::Constraint)|AVD::Constraint,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(constraints:Array(AVD::Constraint)|AVD::Constraint,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"constraints","doc":null,"default_value":"","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(constraints : Array(AVD::Constraint) | AVD::Constraint, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/sequentially.cr#L67","def":{"name":"new","args":[{"name":"constraints","doc":null,"default_value":"","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(constraints, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/sequentially.cr#L66","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraints/Sequentially/Validator","path":"Athena/Validator/Constraints/Sequentially/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::Sequentially::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/sequentially.cr","line_number":75,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/sequentially.cr#L75"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/Sequentially","kind":"class","full_name":"Athena::Validator::Constraints::Sequentially","name":"Sequentially"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::Sequentially):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::Sequentially):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Sequentially"}],"args_string":"(value : _, constraint : AVD::Constraints::Sequentially) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/sequentially.cr#L77","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Sequentially"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"validator = self.context.validator.in_context(self.context)\norigional_count = validator.violations.size\nconstraint.constraints.each do |c|\n  if origional_count != (validator.validate(value, c)).violations.size\n    break\n  end\nend\n"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Constraints/Size","path":"Athena/Validator/Constraints/Size.html","kind":"class","full_name":"Athena::Validator::Constraints::Size","name":"Size","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/size.cr","line_number":76,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/size.cr#L76"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"TOO_LONG_ERROR","name":"TOO_LONG_ERROR","value":"\"a1fa7a63-ea3b-46a0-adcc-5e1bcc26f73a\"","doc":null,"summary":null},{"id":"TOO_SHORT_ERROR","name":"TOO_SHORT_ERROR","value":"\"8ba31c71-1b37-4b76-8bc9-66896589b01f\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that the `#size` of a `String` or `Indexable` value is between some minimum and maximum.\n\n## Configuration\n\n### Required Arguments\n\n#### range\n\n**Type:** `::Range`\n\nThe `::Range` that defines the minimum and maximum values, if any.\nAn endless range can be used to only have a minimum or maximum.\n\n### Optional Arguments\n\nNOTE: This constraint does not support a `message` argument.\n\n#### exact_message\n\n**Type:** `String` **Default:** `This value should have exactly {{ limit }} {{ type }}.|This value should have exactly {{ limit }} {{ type }}s.`\n\nThe message that will be shown if min and max values are equal and the underlying value’s size is not exactly this value.\nThe message is pluralized depending on how many elements/characters the underlying value has.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ limit }}` - The exact expected size.\n* `{{ type }}` - `character` if the value is a string or `item` if the value is an indexable.\n\n#### min_message\n\n**Type:** `String` **Default:** `This value is too short. It should have {{ limit }} {{ type }} or more.|This value is too short. It should have {{ limit }} {{ type }}s or more.`\n\nThe message that will be shown if the underlying value’s size is less than the min.\nThe message is pluralized depending on how many elements/characters the underlying value has.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ limit }}` - The expected minimum size.\n* `{{ type }}` - `character` if the value is a string or `item` if the value is an indexable.\n\n#### max_message\n\n**Type:** `String` **Default:** `This value is too long. It should have {{ limit }} {{ type }} or less.|This value is too long. It should have {{ limit }} {{ type }}s or less.`\n\nThe message that will be shown if the underlying value’s size is greater than the max.\nThe message is pluralized depending on how many elements/characters the underlying value has.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n* `{{ limit }}` - The expected minimum size.\n* `{{ type }}` - `character` if the value is a string or `item` if the value is an indexable.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that the <code>#size</code> of a <code>String</code> or <code>Indexable</code> value is between some minimum and maximum.</p>","class_methods":[],"constructors":[{"id":"new(range:::Range,min_message:String=&quot;Thisvalueistooshort.Itshouldhave{{limit}}{{type}}ormore.|Thisvalueistooshort.Itshouldhave{{limit}}{{type}}sormore.&quot;,max_message:String=&quot;Thisvalueistoolong.Itshouldhave{{limit}}{{type}}orless.|Thisvalueistoolong.Itshouldhave{{limit}}{{type}}sorless.&quot;,exact_message:String=&quot;Thisvalueshouldhaveexactly{{limit}}{{type}}.|Thisvalueshouldhaveexactly{{limit}}{{type}}s.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(range:::Range,min_message:String=&quot;Thisvalueistooshort.Itshouldhave{{limit}}{{type}}ormore.|Thisvalueistooshort.Itshouldhave{{limit}}{{type}}sormore.&quot;,max_message:String=&quot;Thisvalueistoolong.Itshouldhave{{limit}}{{type}}orless.|Thisvalueistoolong.Itshouldhave{{limit}}{{type}}sorless.&quot;,exact_message:String=&quot;Thisvalueshouldhaveexactly{{limit}}{{type}}.|Thisvalueshouldhaveexactly{{limit}}{{type}}s.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"::Range"},{"name":"min_message","doc":null,"default_value":"\"This value is too short. It should have {{ limit }} {{ type }} or more.|This value is too short. It should have {{ limit }} {{ type }}s or more.\"","external_name":"min_message","restriction":"String"},{"name":"max_message","doc":null,"default_value":"\"This value is too long. It should have {{ limit }} {{ type }} or less.|This value is too long. It should have {{ limit }} {{ type }}s or less.\"","external_name":"max_message","restriction":"String"},{"name":"exact_message","doc":null,"default_value":"\"This value should have exactly {{ limit }} {{ type }}.|This value should have exactly {{ limit }} {{ type }}s.\"","external_name":"exact_message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(range : ::Range, min_message : String = <span class=\"s\">&quot;This value is too short. It should have {{ limit }} {{ type }} or more.|This value is too short. It should have {{ limit }} {{ type }}s or more.&quot;</span>, max_message : String = <span class=\"s\">&quot;This value is too long. It should have {{ limit }} {{ type }} or less.|This value is too long. It should have {{ limit }} {{ type }}s or less.&quot;</span>, exact_message : String = <span class=\"s\">&quot;This value should have exactly {{ limit }} {{ type }}.|This value should have exactly {{ limit }} {{ type }}s.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/size.cr#L91","def":{"name":"new","args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"::Range"},{"name":"min_message","doc":null,"default_value":"\"This value is too short. It should have {{ limit }} {{ type }} or more.|This value is too short. It should have {{ limit }} {{ type }}s or more.\"","external_name":"min_message","restriction":"String"},{"name":"max_message","doc":null,"default_value":"\"This value is too long. It should have {{ limit }} {{ type }} or less.|This value is too long. It should have {{ limit }} {{ type }}s or less.\"","external_name":"max_message","restriction":"String"},{"name":"exact_message","doc":null,"default_value":"\"This value should have exactly {{ limit }} {{ type }}.|This value should have exactly {{ limit }} {{ type }}s.\"","external_name":"exact_message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(range.begin, range.end, min_message, max_message, exact_message, groups, payload)"}}],"instance_methods":[{"id":"exact_message:String-instance-method","html_id":"exact_message:String-instance-method","name":"exact_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/size.cr#L89","def":{"name":"exact_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@exact_message"}},{"id":"max:Int32?-instance-method","html_id":"max:Int32?-instance-method","name":"max","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/size.cr#L86","def":{"name":"max","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32 | ::Nil","visibility":"Public","body":"@max"}},{"id":"max_message:String-instance-method","html_id":"max_message:String-instance-method","name":"max_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/size.cr#L88","def":{"name":"max_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@max_message"}},{"id":"min:Int32?-instance-method","html_id":"min:Int32?-instance-method","name":"min","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/size.cr#L85","def":{"name":"min","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32 | ::Nil","visibility":"Public","body":"@min"}},{"id":"min_message:String-instance-method","html_id":"min_message:String-instance-method","name":"min_message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/size.cr#L87","def":{"name":"min_message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@min_message"}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/size.cr#L76","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraints/Size/Validator","path":"Athena/Validator/Constraints/Size/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::Size::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/size.cr","line_number":114,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/size.cr#L114"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/Size","kind":"class","full_name":"Athena::Validator::Constraints::Size","name":"Size"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:String|Indexable,constraint:AVD::Constraints::Size):Nil-instance-method","html_id":"validate(value:String|Indexable,constraint:AVD::Constraints::Size):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String | Indexable"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Size"}],"args_string":"(value : String | Indexable, constraint : AVD::Constraints::Size) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/size.cr#L116","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String | Indexable"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Size"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if value.nil?\n  return\nend\nsize = value.size\nmin = constraint.min\nmax = constraint.max\nif max && size > max\n  (((((self.context.build_violation(min == max ? constraint.exact_message : constraint.max_message, TOO_LONG_ERROR, value)).add_parameter(\"{{ limit }}\", max)).add_parameter(\"{{ type }}\", value.is_a?(String) ? \"character\" : \"item\")).invalid_value(value)).plural(max)).add\nend\nif min && size < min\n  (((((self.context.build_violation(min == max ? constraint.exact_message : constraint.min_message, TOO_SHORT_ERROR, value)).add_parameter(\"{{ limit }}\", min)).add_parameter(\"{{ type }}\", value.is_a?(String) ? \"character\" : \"item\")).invalid_value(value)).plural(min)).add\nend\n"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Constraints/Unique","path":"Athena/Validator/Constraints/Unique.html","kind":"class","full_name":"Athena::Validator::Constraints::Unique","name":"Unique","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/unique.cr","line_number":32,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/unique.cr#L32"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"IS_NOT_UNIQUE_ERROR","name":"IS_NOT_UNIQUE_ERROR","value":"\"fd1f83d6-94b5-44bc-b39d-b1ff367ebfb8\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that all elements of an `Indexable` are unique.\n\n## Configuration\n\n### Optional Arguments\n\n#### message\n\n**Type:** `String` **Default:** `This collection should contain only unique elements.`\n\nThe message that will be shown if at least one element is repeated in the collection.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that all elements of an <code>Indexable</code> are unique.</p>","class_methods":[],"constructors":[{"id":"new(message:String=&quot;Thiscollectionshouldcontainonlyuniqueelements.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(message:String=&quot;Thiscollectionshouldcontainonlyuniqueelements.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"This collection should contain only unique elements.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(message : String = <span class=\"s\">&quot;This collection should contain only unique elements.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/unique.cr#L39","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"\"This collection should contain only unique elements.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/unique.cr#L32","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraints/Unique/Validator","path":"Athena/Validator/Constraints/Unique/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::Unique::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/unique.cr","line_number":47,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/unique.cr#L47"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/Unique","kind":"class","full_name":"Athena::Validator::Constraints::Unique","name":"Unique"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"compare_values(actual:_,expected:_):NoReturn-instance-method","html_id":"compare_values(actual:_,expected:_):NoReturn-instance-method","name":"compare_values","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"_"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"_"}],"args_string":"(actual : _, expected : _) : NoReturn","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/unique.cr#L60","def":{"name":"compare_values","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":"_"},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NoReturn","visibility":"Public","body":"self.raise_invalid_type(actual, \"Indexable\")"}},{"id":"validate(value:Indexable?,constraint:AVD::Constraints::Unique):Nil-instance-method","html_id":"validate(value:Indexable?,constraint:AVD::Constraints::Unique):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Indexable | ::Nil"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Unique"}],"args_string":"(value : Indexable?, constraint : AVD::Constraints::Unique) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/unique.cr#L49","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Indexable | ::Nil"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Unique"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if value.nil?\n  return\nend\nset = Set(typeof(value[0])).new(value.size)\nif value.all? do |x|\n  set.add?(x)\nend\nelse\n  self.context.add_violation(constraint.message, IS_NOT_UNIQUE_ERROR, value)\nend\n"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Constraints/URL","path":"Athena/Validator/Constraints/URL.html","kind":"class","full_name":"Athena::Validator::Constraints::URL","name":"URL","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/url.cr","line_number":48,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/url.cr#L48"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"INVALID_URL_ERROR","name":"INVALID_URL_ERROR","value":"\"e87ceba6-a896-4906-9957-b102045272ee\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Validates that a value is a valid URL string.\nThe underlying value is converted to a string via `#to_s` before being validated.\n\nNOTE: As with most other constraints, `nil` and empty strings are considered valid values, in order to allow the value to be optional.\nIf the value is required, consider combining this constraint with `AVD::Constraints::NotBlank`.\n\n## Configuration\n\n### Optional Arguments\n\n#### protocols\n\n**Type:** `Array(String)` **Default:** `[\"http\", \"https\"]`\n\nThe protocols considered to be valid for the URL.\n\n#### relative_protocol\n\n**Type:** `Bool` **Default:** `false`\n\nIf `true` the protocol is considered optional.\n\n#### message\n\n**Type:** `String` **Default:** `This value is not a valid URL.`\n\nThe message that will be shown if the URL is not valid.\n\n##### Placeholders\n\nThe following placeholders can be used in this message:\n\n* `{{ value }}` - The current (invalid) value.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.","summary":"<p>Validates that a value is a valid URL string.</p>","class_methods":[],"constructors":[{"id":"new(protocols:Array(String)=[&quot;http&quot;,&quot;https&quot;],relative_protocol:Bool=false,message:String=&quot;ThisvalueisnotavalidURL.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(protocols:Array(String)=[&quot;http&quot;,&quot;https&quot;],relative_protocol:Bool=false,message:String=&quot;ThisvalueisnotavalidURL.&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"protocols","doc":null,"default_value":"[\"http\", \"https\"]","external_name":"protocols","restriction":"Array(String)"},{"name":"relative_protocol","doc":null,"default_value":"false","external_name":"relative_protocol","restriction":"Bool"},{"name":"message","doc":null,"default_value":"\"This value is not a valid URL.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(protocols : Array(String) = [<span class=\"s\">&quot;http&quot;</span>, <span class=\"s\">&quot;https&quot;</span>], relative_protocol : Bool = <span class=\"n\">false</span>, message : String = <span class=\"s\">&quot;This value is not a valid URL.&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/url.cr#L58","def":{"name":"new","args":[{"name":"protocols","doc":null,"default_value":"[\"http\", \"https\"]","external_name":"protocols","restriction":"Array(String)"},{"name":"relative_protocol","doc":null,"default_value":"false","external_name":"relative_protocol","restriction":"Bool"},{"name":"message","doc":null,"default_value":"\"This value is not a valid URL.\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(protocols, relative_protocol, message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"protocols:Array(String)-instance-method","html_id":"protocols:Array(String)-instance-method","name":"protocols","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/url.cr#L55","def":{"name":"protocols","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@protocols"}},{"id":"relative_protocol?:Bool-instance-method","html_id":"relative_protocol?:Bool-instance-method","name":"relative_protocol?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/url.cr#L56","def":{"name":"relative_protocol?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@relative_protocol"}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/url.cr#L48","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraints/URL/Validator","path":"Athena/Validator/Constraints/URL/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::URL::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/url.cr","line_number":68,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/url.cr#L68"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/URL","kind":"class","full_name":"Athena::Validator::Constraints::URL","name":"URL"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"pattern(constraint:AVD::Constraints::URL):::Regex-instance-method","html_id":"pattern(constraint:AVD::Constraints::URL):::Regex-instance-method","name":"pattern","doc":null,"summary":null,"abstract":false,"args":[{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::URL"}],"args_string":"(constraint : AVD::Constraints::URL) : ::Regex","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/url.cr#L79","def":{"name":"pattern","args":[{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::URL"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Regex","visibility":"Public","body":"/^#{constraint.relative_protocol? ? \"(?:(#{constraint.protocols.join('|')}):)?\" : \"(#{constraint.protocols.join('|')}):\"}\\/\\/(((?:[\\_\\.\\pL\\pN-]|\\%[0-9A-Fa-f]{2})+:)?((?:[\\_\\.\\pL\\pN-]|\\%[0-9A-Fa-f]{2})+)@)?(([\\pL\\pN\\pS\\-\\_\\.])+(\\.?([\\pL\\pN]|xn\\-\\-[\\pL\\pN-]+)+\\.?)|\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|\\[(?:(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){6})(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:::(?:(?:(?:[0-9a-f]{1,4})):){5})(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:[0-9a-f]{1,4})))?::(?:(?:(?:[0-9a-f]{1,4})):){4})(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){0,1}(?:(?:[0-9a-f]{1,4})))?::(?:(?:(?:[0-9a-f]{1,4})):){3})(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){0,2}(?:(?:[0-9a-f]{1,4})))?::(?:(?:(?:[0-9a-f]{1,4})):){2})(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){0,3}(?:(?:[0-9a-f]{1,4})))?::(?:(?:[0-9a-f]{1,4})):)(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){0,4}(?:(?:[0-9a-f]{1,4})))?::)(?:(?:(?:(?:(?:[0-9a-f]{1,4})):(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){0,5}(?:(?:[0-9a-f]{1,4})))?::)(?:(?:[0-9a-f]{1,4})))|(?:(?:(?:(?:(?:(?:[0-9a-f]{1,4})):){0,6}(?:(?:[0-9a-f]{1,4})))?::))))\\])(:[0-9]+)?(?:\\/ (?:[\\pL\\pN\\-._\\~!$&\\'()*+,;=:@]|\\%[0-9A-Fa-f]{2})* )*(?:\\? (?:[\\pL\\pN\\-._\\~!$&\\'[\\]()*+,;=:@\\/?]|\\%[0-9A-Fa-f]{2})* )?(?:\\# (?:[\\pL\\pN\\-._\\~!$&\\'()*+,;=:@\\/?]|\\%[0-9A-Fa-f]{2})* )?$/ix"}},{"id":"validate(value:_,constraint:AVD::Constraints::URL):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::URL):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::URL"}],"args_string":"(value : _, constraint : AVD::Constraints::URL) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/url.cr#L70","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::URL"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"value = value.to_s\nif value.nil? || value.empty?\n  return\nend\nif value.matches?(self.pattern(constraint))\n  return\nend\nself.context.add_violation(constraint.message, INVALID_URL_ERROR, value)\n"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Constraints/Valid","path":"Athena/Validator/Constraints/Valid.html","kind":"class","full_name":"Athena::Validator::Constraints::Valid","name":"Valid","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/valid.cr","line_number":53,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/valid.cr#L53"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints","kind":"module","full_name":"Athena::Validator::Constraints","name":"Constraints"},"doc":"Tells the validator that it should also validate objects embedded as properties on an object being validated.\n\n## Configuration\n\n### Optional Arguments\n\nNOTE: This constraint does not support a `message` argument.\n\n#### groups\n\n**Type:** `Array(String) | String | Nil` **Default:** `nil`\n\nThe [validation groups](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#validation-groups) this constraint belongs to.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if `nil`.\n\n#### payload\n\n**Type:** `Hash(String, String)?` **Default:** `nil`\n\nAny arbitrary domain-specific data that should be stored with this constraint.\nThe [payload](https://athena-framework.github.io/validator/Athena/Validator/Constraint.html#payload) is not used by `Athena::Validator`, but its processing is completely up to you.\n\n## Usage\n\nWithout this constraint, objects embedded in another object are not valided.\n\n```\nclass SubObjectOne\n  include AVD::Validatable\n\n  @[Assert::NotBlank]\n  getter string : String = \"\"\nend\n\nclass SubObjectTwo\n  include AVD::Validatable\n\n  @[Assert::NotBlank]\n  getter string : String = \"\"\nend\n\nclass MyObject\n  include AVD::Validatable\n\n  # This object is not validated when validating `MyObject`.\n  getter sub_object_one : SubObjectOne = SubObjectOne.new\n\n  # Have the validator also validate `SubObjectTwo` when validating `MyObject`.\n  @[Assert::Valid]\n  getter sub_object_two : SubObjectTwo = SubObjectTwo.new\nend\n```","summary":"<p>Tells the validator that it should also validate objects embedded as properties on an object being validated.</p>","class_methods":[],"constructors":[{"id":"new(traverse:Bool=true,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(traverse:Bool=true,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"traverse","doc":null,"default_value":"true","external_name":"traverse","restriction":"Bool"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(traverse : Bool = <span class=\"n\">true</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/valid.cr#L56","def":{"name":"new","args":[{"name":"traverse","doc":null,"default_value":"true","external_name":"traverse","restriction":"Bool"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(traverse, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"traverse?:Bool-instance-method","html_id":"traverse?:Bool-instance-method","name":"traverse?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/valid.cr#L54","def":{"name":"traverse?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@traverse"}},{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/valid.cr#L53","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Constraints/Valid/Validator","path":"Athena/Validator/Constraints/Valid/Validator.html","kind":"struct","full_name":"Athena::Validator::Constraints::Valid::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraints/valid.cr","line_number":64,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/valid.cr#L64"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Constraints/Valid","kind":"class","full_name":"Athena::Validator::Constraints::Valid","name":"Valid"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:AVD::Constraints::Valid):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraints::Valid):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Valid"}],"args_string":"(value : _, constraint : AVD::Constraints::Valid) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraints/valid.cr#L66","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraints::Valid"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if value.nil?\n  return\nend\n(self.context.validator.in_context(self.context)).validate(value, groups: self.context.group)\n"}}],"macros":[],"types":[]}]}]},{"html_id":"athena/Athena/Validator/ConstraintValidator","path":"Athena/Validator/ConstraintValidator.html","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator","abstract":true,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraint_validator.cr","line_number":4,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraint_validator.cr#L4"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"}],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Validator/Constraints/All/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::All::Validator","name":"Validator"},{"html_id":"athena/Athena/Validator/Constraints/AtLeastOneOf/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::AtLeastOneOf::Validator","name":"Validator"},{"html_id":"athena/Athena/Validator/Constraints/Blank/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::Blank::Validator","name":"Validator"},{"html_id":"athena/Athena/Validator/Constraints/Callback/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::Callback::Validator","name":"Validator"},{"html_id":"athena/Athena/Validator/Constraints/Choice/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::Choice::Validator","name":"Validator"},{"html_id":"athena/Athena/Validator/Constraints/ComparisonValidator","kind":"struct","full_name":"Athena::Validator::Constraints::ComparisonValidator","name":"ComparisonValidator"},{"html_id":"athena/Athena/Validator/Constraints/Compound/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::Compound::Validator","name":"Validator"},{"html_id":"athena/Athena/Validator/Constraints/Email/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::Email::Validator","name":"Validator"},{"html_id":"athena/Athena/Validator/Constraints/IP/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::IP::Validator","name":"Validator"},{"html_id":"athena/Athena/Validator/Constraints/ISBN/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::ISBN::Validator","name":"Validator"},{"html_id":"athena/Athena/Validator/Constraints/IsFalse/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::IsFalse::Validator","name":"Validator"},{"html_id":"athena/Athena/Validator/Constraints/ISIN/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::ISIN::Validator","name":"Validator"},{"html_id":"athena/Athena/Validator/Constraints/IsNil/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::IsNil::Validator","name":"Validator"},{"html_id":"athena/Athena/Validator/Constraints/ISSN/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::ISSN::Validator","name":"Validator"},{"html_id":"athena/Athena/Validator/Constraints/IsTrue/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::IsTrue::Validator","name":"Validator"},{"html_id":"athena/Athena/Validator/Constraints/Luhn/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::Luhn::Validator","name":"Validator"},{"html_id":"athena/Athena/Validator/Constraints/NotBlank/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::NotBlank::Validator","name":"Validator"},{"html_id":"athena/Athena/Validator/Constraints/NotNil/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::NotNil::Validator","name":"Validator"},{"html_id":"athena/Athena/Validator/Constraints/Range/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::Range::Validator","name":"Validator"},{"html_id":"athena/Athena/Validator/Constraints/Regex/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::Regex::Validator","name":"Validator"},{"html_id":"athena/Athena/Validator/Constraints/Sequentially/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::Sequentially::Validator","name":"Validator"},{"html_id":"athena/Athena/Validator/Constraints/Size/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::Size::Validator","name":"Validator"},{"html_id":"athena/Athena/Validator/Constraints/Unique/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::Unique::Validator","name":"Validator"},{"html_id":"athena/Athena/Validator/Constraints/URL/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::URL::Validator","name":"Validator"},{"html_id":"athena/Athena/Validator/Constraints/Valid/Validator","kind":"struct","full_name":"Athena::Validator::Constraints::Valid::Validator","name":"Validator"},{"html_id":"athena/Athena/Validator/ServiceConstraintValidator","kind":"struct","full_name":"Athena::Validator::ServiceConstraintValidator","name":"ServiceConstraintValidator"},{"html_id":"athena/Athena/Validator/Spec/FailingConstraint/Validator","kind":"struct","full_name":"Athena::Validator::Spec::FailingConstraint::Validator","name":"Validator"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator","kind":"module","full_name":"Athena::Validator","name":"Validator"},"doc":"Basic implementation of `AVD::ConstraintValidatorInterface`.","summary":"<p>Basic implementation of <code><a href=\"../../Athena/Validator/ConstraintValidatorInterface.html\">AVD::ConstraintValidatorInterface</a></code>.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraint_validator.cr#L4","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"context:AVD::ExecutionContextInterface-instance-method","html_id":"context:AVD::ExecutionContextInterface-instance-method","name":"context","doc":"Returns the a reference to the `AVD::ExecutionContextInterface`\nto which violations within `self` should be added.\n\nSee the type for more information.","summary":"<p>Returns the a reference to the <code><a href=\"../../Athena/Validator/ExecutionContextInterface.html\">AVD::ExecutionContextInterface</a></code> to which violations within <code>self</code> should be added.</p>","abstract":false,"args":[],"args_string":" : AVD::ExecutionContextInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraint_validator.cr#L8","def":{"name":"context","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ExecutionContextInterface","visibility":"Public","body":"@context.not_nil!"}},{"id":"raise_invalid_type(value:_,supported_types:String):NoReturn-instance-method","html_id":"raise_invalid_type(value:_,supported_types:String):NoReturn-instance-method","name":"raise_invalid_type","doc":"Can be used to raise an `AVD::Exceptions::UnexpectedValueError`\nin case `self` is only able to validate values of the *supported_types*.\n\n```\n# Define a validate method to catch values of other types.\n# Overloads above would handle the valid types.\ndef validate(value : _, constraint : AVD::Constraints::MyConstraint) : Nil\n  self.raise_invalid_type value, \"Int | Float\"\nend\n```\n\nThis would result in a violation with the message `This value should be a valid: Int | Float`\nbeing added to the current `#context`.","summary":"<p>Can be used to raise an <code><a href=\"../../Athena/Validator/Exceptions/UnexpectedValueError.html\">AVD::Exceptions::UnexpectedValueError</a></code> in case <code>self</code> is only able to validate values of the <em>supported_types</em>.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"supported_types","doc":null,"default_value":"","external_name":"supported_types","restriction":"String"}],"args_string":"(value : _, supported_types : String) : NoReturn","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraint_validator.cr#L33","def":{"name":"raise_invalid_type","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"supported_types","doc":null,"default_value":"","external_name":"supported_types","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NoReturn","visibility":"Public","body":"raise(AVD::Exceptions::UnexpectedValueError.new(value, supported_types))"}},{"id":"validate(value:_,constraint:AVD::Constraint):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraint):Nil-instance-method","name":"validate","doc":"Validate the provided *value* against the provided *constraint*.\n\nViolations should be added to the current `#context`.","summary":"<p>Validate the provided <em>value</em> against the provided <em>constraint</em>.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint"}],"args_string":"(value : _, constraint : AVD::Constraint) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraint_validator.cr#L16","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/ConstraintValidatorFactory","path":"Athena/Validator/ConstraintValidatorFactory.html","kind":"struct","full_name":"Athena::Validator::ConstraintValidatorFactory","name":"ConstraintValidatorFactory","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Validator/ConstraintValidatorFactoryInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorFactoryInterface","name":"ConstraintValidatorFactoryInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraint_validator_factory.cr","line_number":4,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraint_validator_factory.cr#L4"},{"filename":"src/ext/validator.cr","line_number":11,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/ext/validator.cr#L11"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Validator/ConstraintValidatorFactoryInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorFactoryInterface","name":"ConstraintValidatorFactoryInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator","kind":"module","full_name":"Athena::Validator","name":"Validator"},"doc":"Basic implementation of `AVD::ConstraintValidatorFactoryInterface`.","summary":"<p>Basic implementation of <code><a href=\"../../Athena/Validator/ConstraintValidatorFactoryInterface.html\">AVD::ConstraintValidatorFactoryInterface</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"validator(validator_class:AVD::ServiceConstraintValidator.class):AVD::ConstraintValidator-instance-method","html_id":"validator(validator_class:AVD::ServiceConstraintValidator.class):AVD::ConstraintValidator-instance-method","name":"validator","doc":"Returns an `AVD::ConstraintValidator` based on the provided *validator_class*.\n\nNOTE: This overloaded is intended to be used for service based validators that are already\ninstantiated and were provided via DI.","summary":"<p>Returns an <code><a href=\"../../Athena/Validator/ConstraintValidator.html\">AVD::ConstraintValidator</a></code> based on the provided <em>validator_class</em>.</p>","abstract":false,"args":[{"name":"validator_class","doc":null,"default_value":"","external_name":"validator_class","restriction":"AVD::ServiceConstraintValidator.class"}],"args_string":"(validator_class : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ServiceConstraintValidator</span>.<span class=\"k\">class</span>) : AVD::ConstraintValidator","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraint_validator_factory.cr#L22","def":{"name":"validator","args":[{"name":"validator_class","doc":null,"default_value":"","external_name":"validator_class","restriction":"AVD::ServiceConstraintValidator.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator","visibility":"Public","body":"@validators[validator_class]"}},{"id":"validator(validator_class:AVD::ConstraintValidator.class):AVD::ConstraintValidator-instance-method","html_id":"validator(validator_class:AVD::ConstraintValidator.class):AVD::ConstraintValidator-instance-method","name":"validator","doc":"Returns an `AVD::ConstraintValidator` based on the provided *validator_class*.","summary":"<p>Returns an <code><a href=\"../../Athena/Validator/ConstraintValidator.html\">AVD::ConstraintValidator</a></code> based on the provided <em>validator_class</em>.</p>","abstract":false,"args":[{"name":"validator_class","doc":null,"default_value":"","external_name":"validator_class","restriction":"AVD::ConstraintValidator.class"}],"args_string":"(validator_class : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>) : AVD::ConstraintValidator","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraint_validator_factory.cr#L27","def":{"name":"validator","args":[{"name":"validator_class","doc":null,"default_value":"","external_name":"validator_class","restriction":"AVD::ConstraintValidator.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator","visibility":"Public","body":"if validator = @validators[validator_class]?\n  return validator\nend\n@validators[validator_class] = validator_class.new\n"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/ConstraintValidatorFactoryInterface","path":"Athena/Validator/ConstraintValidatorFactoryInterface.html","kind":"module","full_name":"Athena::Validator::ConstraintValidatorFactoryInterface","name":"ConstraintValidatorFactoryInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-validator/src/constraint_validator_factory_interface.cr","line_number":4,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraint_validator_factory_interface.cr#L4"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Validator/ConstraintValidatorFactory","kind":"struct","full_name":"Athena::Validator::ConstraintValidatorFactory","name":"ConstraintValidatorFactory"}],"namespace":{"html_id":"athena/Athena/Validator","kind":"module","full_name":"Athena::Validator","name":"Validator"},"doc":"Provides validator instances based on a validator class, caching the instance.\n\n`AVD::ServiceConstraintValidator`s are instantiated externally and injected into the factory.","summary":"<p>Provides validator instances based on a validator class, caching the instance.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"validator(validator:AVD::ConstraintValidator.class):AVD::ConstraintValidatorInterface-instance-method","html_id":"validator(validator:AVD::ConstraintValidator.class):AVD::ConstraintValidatorInterface-instance-method","name":"validator","doc":"Returns an `AVD::ConstraintValidatorInterface` instance based on the provided *validator_class*.","summary":"<p>Returns an <code><a href=\"../../Athena/Validator/ConstraintValidatorInterface.html\">AVD::ConstraintValidatorInterface</a></code> instance based on the provided <em>validator_class</em>.</p>","abstract":true,"args":[{"name":"validator","doc":null,"default_value":"","external_name":"validator","restriction":"AVD::ConstraintValidator.class"}],"args_string":"(validator : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>) : AVD::ConstraintValidatorInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraint_validator_factory_interface.cr#L6","def":{"name":"validator","args":[{"name":"validator","doc":null,"default_value":"","external_name":"validator","restriction":"AVD::ConstraintValidator.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidatorInterface","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","path":"Athena/Validator/ConstraintValidatorInterface.html","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-validator/src/constraint_validator_interface.cr","line_number":58,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraint_validator_interface.cr#L58"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"}],"namespace":{"html_id":"athena/Athena/Validator","kind":"module","full_name":"Athena::Validator","name":"Validator"},"doc":"A constraint validator is responsible for implementing the actual validation logic for a given `AVD::Constraint`.\n\nConstraint validators should inherit from this type and implement a `#validate` method.\nMost commonly the validator type will be defined within the namespace of the related `AVD::Constraint` itself.\n\nThe `#validate` method itself does not return anything.\nViolations are added to the current `#context`, either as a single error message, or augmented with additional metadata about the failure.\nSee `AVD::ExecutionContextInterface` for more information on how violations can be added.\n\n### Example\n\n```\nclass AVD::Constraints::MyConstraint < AVD::Constraint\n  # Initializer/etc for the constraint\n\n  struct Validator < AVD::ConstraintValidator\n    # Define a validate method that handles values of any type, and our `MyConstraint` constraint.\n    def validate(value : _, constraint : AVD::Constraints::MyConstraint) : Nil\n      # Implement logic to determine if the value is valid.\n      # Violations should be added to the current `#context`,\n      # See `AVD::ExecutionContextInterface` for more information.\n    end\n  end\nend\n```\n\nOverloads of the `#validate` method can also be used to handle validating values of different types independently.\nIf the value cannot be handled by any of `self`'s validators, it is handled via `AVD::ConstraintValidator#validate`\nand is essentially a noop.\n\nIf a `AVD::Constraint` can only support values of certain types, `AVD::ConstraintValidator#raise_invalid_type`\nin a catchall overload can be used to add an invalid type `AVD::Violation::ConstraintViolationInterface`.\n\n```\nstruct Validator < AVD::ConstraintValidator\n  def validate(value : Number, constraint : AVD::Constraints::MyConstraint) : Nil\n    # Handle validating `Number` values\n  end\n\n  def validate(value : Time, constraint : AVD::Constraints::MyConstraint) : Nil\n    # Handle validating `Time` values\n  end\n\n  def validate(value : _, constraint : AVD::Constraints::MyConstraint) : Nil\n    # Add an invalid type violation for values of all other types.\n    self.raise_invalid_type value, \"Number | Time\"\n  end\nend\n```\n\nNOTE:  Normally custom validators should not handle `nil` or `blank` values as they are handled via other constraints.\n\n### Service Based Validators\n\nIf you're using `Athena::Validator` within the Athena ecosystem,\nconstraint validators can also be defined as services if they require external dependencies.\nSee `AVD::ServiceConstraintValidator` and `Athena::Routing` validator extension documentation for more information.","summary":"<p>A constraint validator is responsible for implementing the actual validation logic for a given <code><a href=\"../../Athena/Validator/Constraint.html\">AVD::Constraint</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"context:AVD::ExecutionContextInterface-instance-method","html_id":"context:AVD::ExecutionContextInterface-instance-method","name":"context","doc":"Returns the a reference to the `AVD::ExecutionContextInterface`\nto which violations within `self` should be added.\n\nSee the type for more information.","summary":"<p>Returns the a reference to the <code><a href=\"../../Athena/Validator/ExecutionContextInterface.html\">AVD::ExecutionContextInterface</a></code> to which violations within <code>self</code> should be added.</p>","abstract":true,"args":[],"args_string":" : AVD::ExecutionContextInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraint_validator_interface.cr#L68","def":{"name":"context","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ExecutionContextInterface","visibility":"Public","body":""}},{"id":"validate(value:_,constraint:AVD::Constraint):Nil-instance-method","html_id":"validate(value:_,constraint:AVD::Constraint):Nil-instance-method","name":"validate","doc":"Validate the provided *value* against the provided *constraint*.\n\nViolations should be added to the current `#context`.","summary":"<p>Validate the provided <em>value</em> against the provided <em>constraint</em>.</p>","abstract":true,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint"}],"args_string":"(value : _, constraint : AVD::Constraint) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraint_validator_interface.cr#L62","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Exceptions","path":"Athena/Validator/Exceptions.html","kind":"module","full_name":"Athena::Validator::Exceptions","name":"Exceptions","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-validator/src/athena-validator.cr","line_number":399,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/athena-validator.cr#L399"},{"filename":"lib/athena-validator/src/exceptions/validator_error.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/exceptions/validator_error.cr#L3"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator","kind":"module","full_name":"Athena::Validator","name":"Validator"},"doc":"Contains all custom exceptions defined within `Athena::Validator`.","summary":"<p>Contains all custom exceptions defined within <code><a href=\"../../Athena/Validator.html\">Athena::Validator</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Exceptions/UnexpectedValueError","path":"Athena/Validator/Exceptions/UnexpectedValueError.html","kind":"class","full_name":"Athena::Validator::Exceptions::UnexpectedValueError","name":"UnexpectedValueError","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Exceptions/ValidatorError","kind":"class","full_name":"Athena::Validator::Exceptions::ValidatorError","name":"ValidatorError"},"ancestors":[{"html_id":"athena/Athena/Validator/Exceptions/ValidatorError","kind":"class","full_name":"Athena::Validator::Exceptions::ValidatorError","name":"ValidatorError"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/exceptions/unexpected_value_error.cr","line_number":6,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/exceptions/unexpected_value_error.cr#L6"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Exceptions","kind":"module","full_name":"Athena::Validator::Exceptions","name":"Exceptions"},"doc":"Raised when an `AVD::ConstraintValidatorInterface` is unable to validate a value of an unsupported type.\n\nSee `AVD::ConstraintValidator#raise_invalid_type`.","summary":"<p>Raised when an <code><a href=\"../../../Athena/Validator/ConstraintValidatorInterface.html\">AVD::ConstraintValidatorInterface</a></code> is unable to validate a value of an unsupported type.</p>","class_methods":[],"constructors":[{"id":"new(value:_,supported_types:String)-class-method","html_id":"new(value:_,supported_types:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"supported_types","doc":null,"default_value":"","external_name":"supported_types","restriction":"String"}],"args_string":"(value : _, supported_types : String)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/exceptions/unexpected_value_error.cr#L10","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"supported_types","doc":null,"default_value":"","external_name":"supported_types","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(value, supported_types)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"supported_types:String-instance-method","html_id":"supported_types:String-instance-method","name":"supported_types","doc":"A string representing a union of the supported_type(s).","summary":"<p>A string representing a union of the supported_type(s).</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/exceptions/unexpected_value_error.cr#L8","def":{"name":"supported_types","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@supported_types"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Exceptions/ValidationFailed","path":"Athena/Validator/Exceptions/ValidationFailed.html","kind":"class","full_name":"Athena::Validator::Exceptions::ValidationFailed","name":"ValidationFailed","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/UnprocessableEntity","kind":"class","full_name":"Athena::Routing::Exceptions::UnprocessableEntity","name":"UnprocessableEntity"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/UnprocessableEntity","kind":"class","full_name":"Athena::Routing::Exceptions::UnprocessableEntity","name":"UnprocessableEntity"},{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ext/validator/validation_failed_exception.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/ext/validator/validation_failed_exception.cr#L2"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Exceptions","kind":"module","full_name":"Athena::Validator::Exceptions","name":"Exceptions"},"doc":"Wraps an `AVD::Violation::ConstraintViolationListInterface` as an `ART::Exceptions::UnprocessableEntity`; exposing the violations within the response body.","summary":"<p>Wraps an <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationListInterface.html\">AVD::Violation::ConstraintViolationListInterface</a></code> as an <code><a href=\"../../../Athena/Routing/Exceptions/UnprocessableEntity.html\">ART::Exceptions::UnprocessableEntity</a></code>; exposing the violations within the response body.</p>","class_methods":[],"constructors":[{"id":"new(violations:AVD::Violation::ConstraintViolationInterface|AVD::Violation::ConstraintViolationListInterface,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(violations:AVD::Violation::ConstraintViolationInterface|AVD::Violation::ConstraintViolationListInterface,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"violations","doc":null,"default_value":"","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationInterface | AVD::Violation::ConstraintViolationListInterface"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(violations : AVD::Violation::ConstraintViolationInterface | AVD::Violation::ConstraintViolationListInterface, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/ext/validator/validation_failed_exception.cr#L5","def":{"name":"new","args":[{"name":"violations","doc":null,"default_value":"","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationInterface | AVD::Violation::ConstraintViolationListInterface"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(violations, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"to_json(builder:JSON::Builder):Nil-instance-method","html_id":"to_json(builder:JSON::Builder):Nil-instance-method","name":"to_json","doc":"Serializes `self` to JSON in the format of `{\"code\":400,\"message\":\"Exception message\"}`","summary":"<p>Serializes <code>self</code> to JSON in the format of <code>{\"code\":400,\"message\":\"Exception message\"}</code></p>","abstract":false,"args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"JSON::Builder"}],"args_string":"(builder : JSON::Builder) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/ext/validator/validation_failed_exception.cr#L15","def":{"name":"to_json","args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"builder.object do\n  builder.field(\"code\", self.status_code)\n  builder.field(\"message\", @message)\n  builder.field(\"errors\") do\n    @violations.to_json(builder)\n  end\nend"}},{"id":"violations:Athena::Validator::Violation::ConstraintViolationList-instance-method","html_id":"violations:Athena::Validator::Violation::ConstraintViolationList-instance-method","name":"violations","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Athena::Validator::Violation::ConstraintViolationList","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/ext/validator/validation_failed_exception.cr#L3","def":{"name":"violations","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Athena::Validator::Violation::ConstraintViolationList","visibility":"Public","body":"@violations"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Exceptions/ValidatorError","path":"Athena/Validator/Exceptions/ValidatorError.html","kind":"class","full_name":"Athena::Validator::Exceptions::ValidatorError","name":"ValidatorError","abstract":false,"superclass":{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/exceptions/validator_error.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/exceptions/validator_error.cr#L3"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Validator/Exceptions/UnexpectedValueError","kind":"class","full_name":"Athena::Validator::Exceptions::UnexpectedValueError","name":"UnexpectedValueError"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Exceptions","kind":"module","full_name":"Athena::Validator::Exceptions","name":"Exceptions"},"doc":"Base type of all `Athena::Validator` errors.\nCan be used to rescue any exception originating from `Athena::Validator`.","summary":"<p>Base type of all <code><a href=\"../../../Athena/Validator.html\">Athena::Validator</a></code> errors.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/ExecutionContext","path":"Athena/Validator/ExecutionContext.html","kind":"class","full_name":"Athena::Validator::ExecutionContext(Root)","name":"ExecutionContext","abstract":false,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Athena/Validator/ExecutionContextInterface","kind":"module","full_name":"Athena::Validator::ExecutionContextInterface","name":"ExecutionContextInterface"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/execution_context.cr","line_number":5,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context.cr#L5"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Validator/ExecutionContextInterface","kind":"module","full_name":"Athena::Validator::ExecutionContextInterface","name":"ExecutionContextInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator","kind":"module","full_name":"Athena::Validator","name":"Validator"},"doc":"Basic implementation of `AVD::ExecutionContextInterface`.","summary":"<p>Basic implementation of <code><a href=\"../../Athena/Validator/ExecutionContextInterface.html\">AVD::ExecutionContextInterface</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(validator:AVD::Validator::ValidatorInterface,root:Root)-class-method","html_id":"new(validator:AVD::Validator::ValidatorInterface,root:Root)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"validator","doc":null,"default_value":"","external_name":"validator","restriction":"AVD::Validator::ValidatorInterface"},{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"Root"}],"args_string":"(validator : AVD::Validator::ValidatorInterface, root : Root)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context.cr#L35","def":{"name":"new","args":[{"name":"validator","doc":null,"default_value":"","external_name":"validator","restriction":"AVD::Validator::ValidatorInterface"},{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"Root"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = ExecutionContext(Root).allocate\n_.initialize(validator, root)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_violation(message:String,parameters:Hash(String,String)={}ofString=>String):Nil-instance-method","html_id":"add_violation(message:String,parameters:Hash(String,String)={}ofString=>String):Nil-instance-method","name":"add_violation","doc":"Adds a violation with the provided *message*, and optionally *parameters* based on the node currently being validated.","summary":"<p>Adds a violation with the provided <em>message</em>, and optionally <em>parameters</em> based on the node currently being validated.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"parameters","doc":null,"default_value":"{} of String => String","external_name":"parameters","restriction":"Hash(String, String)"}],"args_string":"(message : String, parameters : Hash(String, String) = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context.cr#L87","def":{"name":"add_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"parameters","doc":null,"default_value":"{} of String => String","external_name":"parameters","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"(self.build_violation(message, parameters)).add"}},{"id":"add_violation(message:String,code:String):Nil-instance-method","html_id":"add_violation(message:String,code:String):Nil-instance-method","name":"add_violation","doc":"Adds a violation with the provided *message* and *code*","summary":"<p>Adds a violation with the provided <em>message</em> and <em>code</em></p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"}],"args_string":"(message : String, code : String) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context.cr#L77","def":{"name":"add_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"(self.build_violation(message, code)).add"}},{"id":"add_violation(message:String,code:String,value:_):Nil-instance-method","html_id":"add_violation(message:String,code:String,value:_):Nil-instance-method","name":"add_violation","doc":"Adds a violation with the provided *message*, and *code*, *value* parameter.\n\nThe provided *value* is added to the violations' parameters as `\"{{ value }}\"`.","summary":"<p>Adds a violation with the provided <em>message</em>, and <em>code</em>, <em>value</em> parameter.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"args_string":"(message : String, code : String, value : _) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context.cr#L82","def":{"name":"add_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"(self.build_violation(message, code, value)).add"}},{"id":"build_violation(message:String,parameters:Hash(String,String)={}ofString=>String):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"build_violation(message:String,parameters:Hash(String,String)={}ofString=>String):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"build_violation","doc":"Returns an `AVD::Violation::ConstraintViolationBuilderInterface` with the provided *message*.\n\nCan be used to add additional information to the `AVD::Violation::ConstraintViolationInterface` being adding it to `self`.","summary":"<p>Returns an <code><a href=\"../../Athena/Validator/Violation/ConstraintViolationBuilderInterface.html\">AVD::Violation::ConstraintViolationBuilderInterface</a></code> with the provided <em>message</em>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"parameters","doc":null,"default_value":"{} of String => String","external_name":"parameters","restriction":"Hash(String, String)"}],"args_string":"(message : String, parameters : Hash(String, String) = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context.cr#L102","def":{"name":"build_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"parameters","doc":null,"default_value":"{} of String => String","external_name":"parameters","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":"AVD::Violation::ConstraintViolationBuilder.new(@violations, @constraint, message, parameters, @root, @property_path, @value_container)"}},{"id":"build_violation(message:String,code:String):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"build_violation(message:String,code:String):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"build_violation","doc":"Returns an `AVD::Violation::ConstraintViolationBuilderInterface` with the provided *message*, and *code*.","summary":"<p>Returns an <code><a href=\"../../Athena/Validator/Violation/ConstraintViolationBuilderInterface.html\">AVD::Violation::ConstraintViolationBuilderInterface</a></code> with the provided <em>message</em>, and <em>code</em>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"}],"args_string":"(message : String, code : String) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context.cr#L92","def":{"name":"build_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":"(self.build_violation(message)).code(code)"}},{"id":"build_violation(message:String,code:String,value:_):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"build_violation(message:String,code:String,value:_):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"build_violation","doc":"Returns an `AVD::Violation::ConstraintViolationBuilderInterface` with the provided *message*, and *code*, and *value*.\n\nThe provided *value* is added to the violations' parameters as `\"{{ value }}\"`.","summary":"<p>Returns an <code><a href=\"../../Athena/Validator/Violation/ConstraintViolationBuilderInterface.html\">AVD::Violation::ConstraintViolationBuilderInterface</a></code> with the provided <em>message</em>, and <em>code</em>, and <em>value</em>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"args_string":"(message : String, code : String, value : _) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context.cr#L97","def":{"name":"build_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":"((self.build_violation(message)).code(code)).add_parameter(\"{{ value }}\", value)"}},{"id":"class_name-instance-method","html_id":"class_name-instance-method","name":"class_name","doc":"Returns the class that is currently being validated.","summary":"<p>Returns the class that is currently being validated.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context.cr#L54","def":{"name":"class_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@metadata.try(&.class_name)"}},{"id":"constraint:AVD::Constraint?-instance-method","html_id":"constraint:AVD::Constraint?-instance-method","name":"constraint","doc":"Returns the `AVD::Constraint` that is currently being validated, if any.","summary":"<p>Returns the <code><a href=\"../../Athena/Validator/Constraint.html\">AVD::Constraint</a></code> that is currently being validated, if any.</p>","abstract":false,"args":[],"args_string":" : AVD::Constraint?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context.cr#L9","def":{"name":"constraint","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Constraint | ::Nil","visibility":"Public","body":"@constraint"}},{"id":"group:String?-instance-method","html_id":"group:String?-instance-method","name":"group","doc":"Returns the group that is currently being validated, if any.","summary":"<p>Returns the group that is currently being validated, if any.</p>","abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context.cr#L12","def":{"name":"group","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@group"}},{"id":"metadata:AVD::Metadata::MetadataInterface?-instance-method","html_id":"metadata:AVD::Metadata::MetadataInterface?-instance-method","name":"metadata","doc":"Returns an `AVD::Metadata::MetadataInterface` object for the value currently being validated.\n\nThis would be an `AVD::Metadata::PropertyMetadataInterface` if the current value is an object,\nan `AVD::Metadata::GenericMetadata` if the current value is a plain value, and an\n`AVD::Metadata::ClassMetadata` if the current value value is an entire class.","summary":"<p>Returns an <code><a href=\"../../Athena/Validator/Metadata/MetadataInterface.html\">AVD::Metadata::MetadataInterface</a></code> object for the value currently being validated.</p>","abstract":false,"args":[],"args_string":" : AVD::Metadata::MetadataInterface?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context.cr#L24","def":{"name":"metadata","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Metadata::MetadataInterface | ::Nil","visibility":"Public","body":"@metadata"}},{"id":"object-instance-method","html_id":"object-instance-method","name":"object","doc":"Returns the object that is currently being validated.","summary":"<p>Returns the object that is currently being validated.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context.cr#L49","def":{"name":"object","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@object_container.value"}},{"id":"object_container:AVD::Container-instance-method","html_id":"object_container:AVD::Container-instance-method","name":"object_container","doc":"The object that is currently being validated.","summary":"<p>The object that is currently being validated.</p>","abstract":false,"args":[],"args_string":" : AVD::Container","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context.cr#L33","def":{"name":"object_container","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Container","visibility":"Public","body":"@object_container"}},{"id":"property_name:String?-instance-method","html_id":"property_name:String?-instance-method","name":"property_name","doc":"Returns the property name of the node currently being validated.","summary":"<p>Returns the property name of the node currently being validated.</p>","abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context.cr#L59","def":{"name":"property_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@metadata.try(&.name)"}},{"id":"property_path(path:String=&quot;&quot;):String-instance-method","html_id":"property_path(path:String=&quot;&quot;):String-instance-method","name":"property_path","doc":"Returns the path to the property that is currently being validated.\n\nFor example, given a `Person` object that has an `Address` property;\nthe property path would be empty initially.  When the `address` property\nis being validated the *property_path* would be `address`.\nWhen the street property of the related `Address` object is being validated\nthe *property_path* would be `address.street`.\n\nThis also works for collections of objects.  If the `Person` object had multiple\naddresses, the property path when validating the first street of the first address\nwould be `addresses[0].street`.","summary":"<p>Returns the path to the property that is currently being validated.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"\"\"","external_name":"path","restriction":"String"}],"args_string":"(path : String = <span class=\"s\">&quot;&quot;</span>) : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context.cr#L64","def":{"name":"property_path","args":[{"name":"path","doc":null,"default_value":"\"\"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"AVD::PropertyPath.append(@property_path, path)"}},{"id":"root:Root-instance-method","html_id":"root:Root-instance-method","name":"root","doc":"Returns the object initially passed to `AVD::Validator::ValidatorInterface#validate`.","summary":"<p>Returns the object initially passed to <code><a href=\"../../Athena/Validator/Validator/ValidatorInterface.html#validate(value:_,constraints:Array(AVD::Constraint)%7CAVD::Constraint%7CNil=nil,groups:Array(String)%7CString%7CAVD::Constraints::GroupSequence%7CNil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method\">AVD::Validator::ValidatorInterface#validate</a></code>.</p>","abstract":false,"args":[],"args_string":" : Root","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context.cr#L30","def":{"name":"root","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Root","visibility":"Public","body":"@root"}},{"id":"validator:AVD::Validator::ValidatorInterface-instance-method","html_id":"validator:AVD::Validator::ValidatorInterface-instance-method","name":"validator","doc":"Returns a reference to an `AVD::Validator::ValidatorInterface` that can be used to validate\nadditional constraints as part of another constraint.","summary":"<p>Returns a reference to an <code><a href=\"../../Athena/Validator/Validator/ValidatorInterface.html\">AVD::Validator::ValidatorInterface</a></code> that can be used to validate additional constraints as part of another constraint.</p>","abstract":false,"args":[],"args_string":" : AVD::Validator::ValidatorInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context.cr#L15","def":{"name":"validator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ValidatorInterface","visibility":"Public","body":"@validator"}},{"id":"value-instance-method","html_id":"value-instance-method","name":"value","doc":"Returns the value that is currently being validated.","summary":"<p>Returns the value that is currently being validated.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context.cr#L44","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value_container.value"}},{"id":"violations:AVD::Violation::ConstraintViolationList-instance-method","html_id":"violations:AVD::Violation::ConstraintViolationList-instance-method","name":"violations","doc":"Returns the `AVD::Violation::ConstraintViolationInterface` instances generated by the validator thus far.","summary":"<p>Returns the <code><a href=\"../../Athena/Validator/Violation/ConstraintViolationInterface.html\">AVD::Violation::ConstraintViolationInterface</a></code> instances generated by the validator thus far.</p>","abstract":false,"args":[],"args_string":" : AVD::Violation::ConstraintViolationList","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context.cr#L18","def":{"name":"violations","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationList","visibility":"Public","body":"@violations"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/ExecutionContextInterface","path":"Athena/Validator/ExecutionContextInterface.html","kind":"module","full_name":"Athena::Validator::ExecutionContextInterface","name":"ExecutionContextInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-validator/src/execution_context_interface.cr","line_number":20,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context_interface.cr#L20"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Validator/ExecutionContext","kind":"class","full_name":"Athena::Validator::ExecutionContext(Root)","name":"ExecutionContext"}],"namespace":{"html_id":"athena/Athena/Validator","kind":"module","full_name":"Athena::Validator","name":"Validator"},"doc":"Stores contextual data related to the current validation run.\n\nThis includes the violations generated so far, the current constraint, value being validated, etc.\n\n### Adding Violations\n\nAs mentioned in the `AVD::ConstraintValidatorInterface` documentation,\nviolations are not returned from the `AVD::ConstraintValidatorInterface#validate` method.\nInstead they are added to the `AVD::ConstraintValidatorInterface#context` instance.\n\nThe simplest way to do so is via the `#add_violation` method, which accepts the violation message,\nand any parameters that should be used to render the message.\nAdditional overloads exist to make adding a value with a specific message, and code, or message, code, and `{{ value }}` placeholder value easier.\n\n#### Building violations\n\nIn some cases you may wish to add additional data to the `AVD::Violation::ConstraintViolationInterface` before adding it to `self`.\nTo do this, you can also use the `#build_violation` method, which returns an `AVD::Violation::ConstraintViolationBuilderInterface`\nthat can be used to construct a violation, with an easier API.","summary":"<p>Stores contextual data related to the current validation run.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"add_violation(message:String,code:String,value:_):Nil-instance-method","html_id":"add_violation(message:String,code:String,value:_):Nil-instance-method","name":"add_violation","doc":"Adds a violation with the provided *message*, and *code*, *value* parameter.\n\nThe provided *value* is added to the violations' parameters as `\"{{ value }}\"`.","summary":"<p>Adds a violation with the provided <em>message</em>, and <em>code</em>, <em>value</em> parameter.</p>","abstract":true,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"args_string":"(message : String, code : String, value : _) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context_interface.cr#L30","def":{"name":"add_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"add_violation(message:String,parameters:Hash(String,String)={}ofString=>String):Nil-instance-method","html_id":"add_violation(message:String,parameters:Hash(String,String)={}ofString=>String):Nil-instance-method","name":"add_violation","doc":"Adds a violation with the provided *message*, and optionally *parameters* based on the node currently being validated.","summary":"<p>Adds a violation with the provided <em>message</em>, and optionally <em>parameters</em> based on the node currently being validated.</p>","abstract":true,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"parameters","doc":null,"default_value":"{} of String => String","external_name":"parameters","restriction":"Hash(String, String)"}],"args_string":"(message : String, parameters : Hash(String, String) = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context_interface.cr#L22","def":{"name":"add_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"parameters","doc":null,"default_value":"{} of String => String","external_name":"parameters","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"add_violation(message:String,code:String):Nil-instance-method","html_id":"add_violation(message:String,code:String):Nil-instance-method","name":"add_violation","doc":"Adds a violation with the provided *message* and *code*","summary":"<p>Adds a violation with the provided <em>message</em> and <em>code</em></p>","abstract":true,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"}],"args_string":"(message : String, code : String) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context_interface.cr#L25","def":{"name":"add_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"build_violation(message:String,code:String,value:_):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"build_violation(message:String,code:String,value:_):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"build_violation","doc":"Returns an `AVD::Violation::ConstraintViolationBuilderInterface` with the provided *message*, and *code*, and *value*.\n\nThe provided *value* is added to the violations' parameters as `\"{{ value }}\"`.","summary":"<p>Returns an <code><a href=\"../../Athena/Validator/Violation/ConstraintViolationBuilderInterface.html\">AVD::Violation::ConstraintViolationBuilderInterface</a></code> with the provided <em>message</em>, and <em>code</em>, and <em>value</em>.</p>","abstract":true,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"args_string":"(message : String, code : String, value : _) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context_interface.cr#L43","def":{"name":"build_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":""}},{"id":"build_violation(message:String,parameters:Hash(String,String)={}ofString=>String):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"build_violation(message:String,parameters:Hash(String,String)={}ofString=>String):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"build_violation","doc":"Returns an `AVD::Violation::ConstraintViolationBuilderInterface` with the provided *message*.\n\nCan be used to add additional information to the `AVD::Violation::ConstraintViolationInterface` being adding it to `self`.","summary":"<p>Returns an <code><a href=\"../../Athena/Validator/Violation/ConstraintViolationBuilderInterface.html\">AVD::Violation::ConstraintViolationBuilderInterface</a></code> with the provided <em>message</em>.</p>","abstract":true,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"parameters","doc":null,"default_value":"{} of String => String","external_name":"parameters","restriction":"Hash(String, String)"}],"args_string":"(message : String, parameters : Hash(String, String) = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context_interface.cr#L35","def":{"name":"build_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"parameters","doc":null,"default_value":"{} of String => String","external_name":"parameters","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":""}},{"id":"build_violation(message:String,code:String):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"build_violation(message:String,code:String):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"build_violation","doc":"Returns an `AVD::Violation::ConstraintViolationBuilderInterface` with the provided *message*, and *code*.","summary":"<p>Returns an <code><a href=\"../../Athena/Validator/Violation/ConstraintViolationBuilderInterface.html\">AVD::Violation::ConstraintViolationBuilderInterface</a></code> with the provided <em>message</em>, and <em>code</em>.</p>","abstract":true,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"}],"args_string":"(message : String, code : String) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context_interface.cr#L38","def":{"name":"build_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":""}},{"id":"class_name-instance-method","html_id":"class_name-instance-method","name":"class_name","doc":"Returns the class that is currently being validated.","summary":"<p>Returns the class that is currently being validated.</p>","abstract":true,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context_interface.cr#L46","def":{"name":"class_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"constraint:AVD::Constraint?-instance-method","html_id":"constraint:AVD::Constraint?-instance-method","name":"constraint","doc":"Returns the `AVD::Constraint` that is currently being validated, if any.","summary":"<p>Returns the <code><a href=\"../../Athena/Validator/Constraint.html\">AVD::Constraint</a></code> that is currently being validated, if any.</p>","abstract":true,"args":[],"args_string":" : AVD::Constraint?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context_interface.cr#L49","def":{"name":"constraint","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Constraint | ::Nil","visibility":"Public","body":""}},{"id":"group:String?-instance-method","html_id":"group:String?-instance-method","name":"group","doc":"Returns the group that is currently being validated, if any.","summary":"<p>Returns the group that is currently being validated, if any.</p>","abstract":true,"args":[],"args_string":" : String?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context_interface.cr#L52","def":{"name":"group","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":""}},{"id":"metadata:AVD::Metadata::MetadataInterface?-instance-method","html_id":"metadata:AVD::Metadata::MetadataInterface?-instance-method","name":"metadata","doc":"Returns an `AVD::Metadata::MetadataInterface` object for the value currently being validated.\n\nThis would be an `AVD::Metadata::PropertyMetadataInterface` if the current value is an object,\nan `AVD::Metadata::GenericMetadata` if the current value is a plain value, and an\n`AVD::Metadata::ClassMetadata` if the current value value is an entire class.","summary":"<p>Returns an <code><a href=\"../../Athena/Validator/Metadata/MetadataInterface.html\">AVD::Metadata::MetadataInterface</a></code> object for the value currently being validated.</p>","abstract":true,"args":[],"args_string":" : AVD::Metadata::MetadataInterface?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context_interface.cr#L59","def":{"name":"metadata","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Metadata::MetadataInterface | ::Nil","visibility":"Public","body":""}},{"id":"object-instance-method","html_id":"object-instance-method","name":"object","doc":"Returns the object that is currently being validated.","summary":"<p>Returns the object that is currently being validated.</p>","abstract":true,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context_interface.cr#L62","def":{"name":"object","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"property_name:String?-instance-method","html_id":"property_name:String?-instance-method","name":"property_name","doc":"Returns the property name of the node currently being validated.","summary":"<p>Returns the property name of the node currently being validated.</p>","abstract":true,"args":[],"args_string":" : String?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context_interface.cr#L65","def":{"name":"property_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":""}},{"id":"property_path:String-instance-method","html_id":"property_path:String-instance-method","name":"property_path","doc":"Returns the path to the property that is currently being validated.\n\nFor example, given a `Person` object that has an `Address` property;\nthe property path would be empty initially.  When the `address` property\nis being validated the *property_path* would be `address`.\nWhen the street property of the related `Address` object is being validated\nthe *property_path* would be `address.street`.\n\nThis also works for collections of objects.  If the `Person` object had multiple\naddresses, the property path when validating the first street of the first address\nwould be `addresses[0].street`.","summary":"<p>Returns the path to the property that is currently being validated.</p>","abstract":true,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context_interface.cr#L78","def":{"name":"property_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}},{"id":"root-instance-method","html_id":"root-instance-method","name":"root","doc":"Returns the object initially passed to `AVD::Validator::ValidatorInterface#validate`.","summary":"<p>Returns the object initially passed to <code><a href=\"../../Athena/Validator/Validator/ValidatorInterface.html#validate(value:_,constraints:Array(AVD::Constraint)%7CAVD::Constraint%7CNil=nil,groups:Array(String)%7CString%7CAVD::Constraints::GroupSequence%7CNil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method\">AVD::Validator::ValidatorInterface#validate</a></code>.</p>","abstract":true,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context_interface.cr#L81","def":{"name":"root","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"validator:AVD::Validator::ValidatorInterface-instance-method","html_id":"validator:AVD::Validator::ValidatorInterface-instance-method","name":"validator","doc":"Returns a reference to an `AVD::Validator::ValidatorInterface` that can be used to validate\nadditional constraints as part of another constraint.","summary":"<p>Returns a reference to an <code><a href=\"../../Athena/Validator/Validator/ValidatorInterface.html\">AVD::Validator::ValidatorInterface</a></code> that can be used to validate additional constraints as part of another constraint.</p>","abstract":true,"args":[],"args_string":" : AVD::Validator::ValidatorInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context_interface.cr#L85","def":{"name":"validator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ValidatorInterface","visibility":"Public","body":""}},{"id":"value-instance-method","html_id":"value-instance-method","name":"value","doc":"Returns the value that is currently being validated.","summary":"<p>Returns the value that is currently being validated.</p>","abstract":true,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context_interface.cr#L88","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"violations:AVD::Violation::ConstraintViolationListInterface-instance-method","html_id":"violations:AVD::Violation::ConstraintViolationListInterface-instance-method","name":"violations","doc":"Returns the `AVD::Violation::ConstraintViolationInterface` instances generated by the validator thus far.","summary":"<p>Returns the <code><a href=\"../../Athena/Validator/Violation/ConstraintViolationInterface.html\">AVD::Violation::ConstraintViolationInterface</a></code> instances generated by the validator thus far.</p>","abstract":true,"args":[],"args_string":" : AVD::Violation::ConstraintViolationListInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/execution_context_interface.cr#L91","def":{"name":"violations","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationListInterface","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Metadata","path":"Athena/Validator/Metadata.html","kind":"module","full_name":"Athena::Validator::Metadata","name":"Metadata","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-validator/src/athena-validator.cr","line_number":406,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/athena-validator.cr#L406"},{"filename":"lib/athena-validator/src/metadata/cascading_strategy.cr","line_number":4,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/cascading_strategy.cr#L4"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator","kind":"module","full_name":"Athena::Validator","name":"Validator"},"doc":"Contains types used to store metadata associated with a given `AVD::Validatable` instance.\n\nMost likely you won't have to work any of these directly.\nHowever if you are adding constraints manually to properties using the `self.load_metadata` method,\nyou should be familiar with `AVD::Metadata::ClassMetadata`.","summary":"<p>Contains types used to store metadata associated with a given <code><a href=\"../../Athena/Validator/Validatable.html\">AVD::Validatable</a></code> instance.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Metadata/CascadingStrategy","path":"Athena/Validator/Metadata/CascadingStrategy.html","kind":"enum","full_name":"Athena::Validator::Metadata::CascadingStrategy","name":"CascadingStrategy","abstract":false,"superclass":null,"ancestors":[{"html_id":"athena/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"athena/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/metadata/cascading_strategy.cr","line_number":4,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/cascading_strategy.cr#L4"}],"repository_name":"athena","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"None","name":"None","value":"0","doc":null,"summary":null},{"id":"Cascade","name":"Cascade","value":"1","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Metadata","kind":"module","full_name":"Athena::Validator::Metadata","name":"Metadata"},"doc":"Determines whether an object should be cascaded.\n\nIf cascading is enabled, the validator will also validate embeded objects.","summary":"<p>Determines whether an object should be cascaded.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"cascade?-instance-method","html_id":"cascade?-instance-method","name":"cascade?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/cascading_strategy.cr#L6","def":{"name":"cascade?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Cascade"}},{"id":"none?-instance-method","html_id":"none?-instance-method","name":"none?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/cascading_strategy.cr#L5","def":{"name":"none?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == None"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Metadata/ClassMetadata","path":"Athena/Validator/Metadata/ClassMetadata.html","kind":"class","full_name":"Athena::Validator::Metadata::ClassMetadata(T)","name":"ClassMetadata","abstract":false,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Athena/Validator/Metadata/GenericMetadata","kind":"module","full_name":"Athena::Validator::Metadata::GenericMetadata","name":"GenericMetadata"},{"html_id":"athena/Athena/Validator/Metadata/MetadataInterface","kind":"module","full_name":"Athena::Validator::Metadata::MetadataInterface","name":"MetadataInterface"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/metadata/class_metadata.cr","line_number":8,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/class_metadata.cr#L8"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Validator/Metadata/GenericMetadata","kind":"module","full_name":"Athena::Validator::Metadata::GenericMetadata","name":"GenericMetadata"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Metadata","kind":"module","full_name":"Athena::Validator::Metadata","name":"Metadata"},"doc":"Represents metadata associated with an `AVD::Validatable` instance.\n\n`self` is lazily initialized and cached at the class level.\n\nIncludes metadata about the class; such as its name, constraints, etc.","summary":"<p>Represents metadata associated with an <code><a href=\"../../../Athena/Validator/Validatable.html\">AVD::Validatable</a></code> instance.</p>","class_methods":[],"constructors":[{"id":"build:self-class-method","html_id":"build:self-class-method","name":"build","doc":"Builds `self`, auto registering any annotation based annotations on `T`,\nas well as those registered via `T.load_metadata`.","summary":"<p>Builds <code>self</code>, auto registering any annotation based annotations on <code>T</code>, as well as those registered via <code>T.load_metadata</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/class_metadata.cr#L13","def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"class_metadata = new\n{% if true %}\n      # Add property constraints\n      {% for ivar, idx in T.instance_vars %}\n        {% for constraint in AVD::Constraint.all_subclasses.reject(&.abstract?) %}\n          {% ann_name = (constraint.name(generic_args: false).split(\"::\")).last.id %}\n\n          {% if ann = ivar.annotation((Assert.constant(ann_name)).resolve) %}\n            {% default_arg = ann.args.empty? ? nil : ann.args.first %}\n\n            {% if default_arg.is_a?(ArrayLiteral) %}\n              {% default_arg = default_arg.map do |arg|\n  if arg.is_a?(Annotation)\n    arg_name = (((arg.stringify.gsub(/@\\[/, \"\")).gsub(/\\(.*/, \"\")).split(\"::\")).last.gsub(/\\]/, \"\")\n    inner_default_arg = arg.args.empty? ? nil : arg.args.first\n    inner_default_arg = if inner_default_arg.is_a?(ArrayLiteral)\n      inner_default_arg.map do |inner_arg|\n        if inner_arg.is_a?(Annotation)\n          inner_arg_name = (((inner_arg.stringify.gsub(/@\\[/, \"\")).gsub(/\\(.*/, \"\")).split(\"::\")).last.gsub(/\\]/, \"\")\n          inner_inner_default_arg = inner_arg.args.empty? ? nil : inner_arg.args.first\n          \"AVD::Constraints::#{inner_arg_name.id}.new(#{inner_inner_default_arg ? \"#{inner_inner_default_arg},\".id : \"\".id}#{inner_arg.named_args.double_splat})\".id\n        else\n          inner_arg\n        end\n      end\n    else\n      inner_default_arg\n    end\n    if (arg_name == \"All\") || (arg_name == \"AtLeastOneOf\")\n      inner_default_arg = \"#{inner_default_arg} of AVD::Constraint\".id\n    end\n    \"AVD::Constraints::#{arg_name.id}.new(#{inner_default_arg ? \"#{inner_default_arg},\".id : \"\".id}#{arg.named_args.double_splat})\".id\n  else\n    arg\n  end\nend %}\n            {% end %}\n\n            class_metadata.add_property_constraint(\n              AVD::Metadata::PropertyMetadata(T, {{ idx }}).new({{ ivar.name.stringify }}),\n              {{ constraint.name(generic_args: false).id }}.new(\n                {{ default_arg ? \"#{default_arg},\".id : \"\".id }} # Default argument\n                {{ ann.named_args.double_splat }}\n              )\n            )\n          {% end %}\n        {% end %}\n      {% end %}\n\n      # Add getter constraints\n      {% for m, idx in T.methods %}\n        {% for constraint in AVD::Constraint.all_subclasses.reject(&.abstract?) %}\n          {% ann_name = (constraint.name(generic_args: false).split(\"::\")).last.id %}\n\n          {% if ann = m.annotation((Assert.constant(ann_name)).resolve) %}\n            {% default_arg = ann.args.empty? ? nil : ann.args.first %}\n\n            class_metadata.add_getter_constraint(\n              AVD::Metadata::GetterMetadata(T, {{ idx }}).new({{ m.name.stringify }}),\n              {{ constraint.name(generic_args: false).id }}.new(\n                {{ default_arg ? \"#{default_arg},\".id : \"\".id }} # Default argument\n                {{ ann.named_args.double_splat }}\n              )\n            )\n          {% end %}\n        {% end %}\n      {% end %}\n\n      # Add callback constraints\n      {% for callback in T.methods.select(&.annotation(Assert::Callback)) %}\n        class_metadata.add_constraint AVD::Constraints::Callback.new(callback_name: {{ callback.name.stringify }}, {{ (callback.annotation(Assert::Callback)).named_args.double_splat }})\n      {% end %}\n\n      {% for callback in T.class.methods.select(&.annotation(Assert::Callback)) %}\n        class_metadata.add_constraint AVD::Constraints::Callback.new(callback: ->T.{{ callback.name.id }}(AVD::Constraints::Callback::ValueContainer, AVD::ExecutionContextInterface, Hash(String, String)?), {{ (callback.annotation(Assert::Callback)).named_args.double_splat }})\n      {% end %}\n    {% end %}\n{% if T.class.has_method?(:load_metadata) %}\n      T.load_metadata class_metadata\n    {% end %}\n{% if group_sequence = T.annotation(Assert::GroupSequence) %}\n      class_metadata.group_sequence = [{{ group_sequence.args.splat }}]\n    {% end %}\nclass_metadata\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/class_metadata.cr#L126","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = ClassMetadata(T).allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_constraint(constraints:Array(AVD::Constraint)):self-instance-method","html_id":"add_constraint(constraints:Array(AVD::Constraint)):self-instance-method","name":"add_constraint","doc":"Adds each of the provided *constraints* to `self`.","summary":"<p>Adds each of the provided <em>constraints</em> to <code>self</code>.</p>","abstract":false,"args":[{"name":"constraints","doc":null,"default_value":"","external_name":"constraints","restriction":"Array(AVD::Constraint)"}],"args_string":"(constraints : Array(AVD::Constraint)) : <span class=\"k\">self</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/class_metadata.cr#L135","def":{"name":"add_constraint","args":[{"name":"constraints","doc":null,"default_value":"","external_name":"constraints","restriction":"Array(AVD::Constraint)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"constraints.each do |constraint|\n  self.add_constraint(constraint)\nend\nself\n"}},{"id":"add_constraint(constraint:AVD::Constraint):self-instance-method","html_id":"add_constraint(constraint:AVD::Constraint):self-instance-method","name":"add_constraint","doc":"Adds the provided *constraint* to `self`'s `#constraints` array.\n\nSets `#cascading_strategy` to `AVD::Metadata::CascadingStrategy::Cascade` if the *constraint* is `AVD::Constraints::Valid`.\n\nAlso adds the `#class_name` based group via `AVD::Constraint#add_implicit_group`.","summary":"<p>Adds the provided <em>constraint</em> to <code>self</code>'s <code>#constraints</code> array.</p>","abstract":false,"args":[{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint"}],"args_string":"(constraint : AVD::Constraint) : <span class=\"k\">self</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/class_metadata.cr#L146","def":{"name":"add_constraint","args":[{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"constraint.add_implicit_group(@default_group)\nsuper(constraint)\nself\n"}},{"id":"add_getter_constraint(method_name:String,constraint:AVD::Constraint):self-instance-method","html_id":"add_getter_constraint(method_name:String,constraint:AVD::Constraint):self-instance-method","name":"add_getter_constraint","doc":"Adds the provided *constraint* to the provided *method_name*.","summary":"<p>Adds the provided <em>constraint</em> to the provided <em>method_name</em>.</p>","abstract":false,"args":[{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":"String"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint"}],"args_string":"(method_name : String, constraint : AVD::Constraint) : <span class=\"k\">self</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/class_metadata.cr#L155","def":{"name":"add_getter_constraint","args":[{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":"String"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"self.add_getter_constraint(AVD::Metadata::GetterMetadata(T, Nil).new(method_name), constraint)"}},{"id":"add_property_constraint(property_name:String,constraints:Array(AVD::Constraint)):self-instance-method","html_id":"add_property_constraint(property_name:String,constraints:Array(AVD::Constraint)):self-instance-method","name":"add_property_constraint","doc":"Adds each of the provided *constraints* to the provided *property_name*.","summary":"<p>Adds each of the provided <em>constraints</em> to the provided <em>property_name</em>.</p>","abstract":false,"args":[{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"constraints","doc":null,"default_value":"","external_name":"constraints","restriction":"Array(AVD::Constraint)"}],"args_string":"(property_name : String, constraints : Array(AVD::Constraint)) : <span class=\"k\">self</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/class_metadata.cr#L170","def":{"name":"add_property_constraint","args":[{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"constraints","doc":null,"default_value":"","external_name":"constraints","restriction":"Array(AVD::Constraint)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"constraints.each do |constraint|\n  self.add_property_constraint(property_name, constraint)\nend\nself\n"}},{"id":"add_property_constraint(property_name:String,constraint:AVD::Constraint):self-instance-method","html_id":"add_property_constraint(property_name:String,constraint:AVD::Constraint):self-instance-method","name":"add_property_constraint","doc":"Adds the provided *constraint* to the provided *property_name*.","summary":"<p>Adds the provided <em>constraint</em> to the provided <em>property_name</em>.</p>","abstract":false,"args":[{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint"}],"args_string":"(property_name : String, constraint : AVD::Constraint) : <span class=\"k\">self</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/class_metadata.cr#L179","def":{"name":"add_property_constraint","args":[{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"self.add_property_constraint(AVD::Metadata::PropertyMetadata(T, Nil).new(property_name), constraint)"}},{"id":"add_property_constraints(property_hash:Hash(String,AVD::Constraint|Array(AVD::Constraint))):self-instance-method","html_id":"add_property_constraints(property_hash:Hash(String,AVD::Constraint|Array(AVD::Constraint))):self-instance-method","name":"add_property_constraints","doc":"Adds a hash of constraints to `self`, where the keys represent the property names, and the value\nis the constraint/array of constraints to add.","summary":"<p>Adds a hash of constraints to <code>self</code>, where the keys represent the property names, and the value is the constraint/array of constraints to add.</p>","abstract":false,"args":[{"name":"property_hash","doc":null,"default_value":"","external_name":"property_hash","restriction":"Hash(String, AVD::Constraint | Array(AVD::Constraint))"}],"args_string":"(property_hash : Hash(String, AVD::Constraint | Array(AVD::Constraint))) : <span class=\"k\">self</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/class_metadata.cr#L161","def":{"name":"add_property_constraints","args":[{"name":"property_hash","doc":null,"default_value":"","external_name":"property_hash","restriction":"Hash(String, AVD::Constraint | Array(AVD::Constraint))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"property_hash.each do |property_name, constraints|\n  self.add_property_constraint(property_name, constraints)\nend\nself\n"}},{"id":"class_name:T.class-instance-method","html_id":"class_name:T.class-instance-method","name":"class_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : <span class=\"t\">T</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/class_metadata.cr#L130","def":{"name":"class_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T.class","visibility":"Public","body":"T"}},{"id":"constrained_properties:Array(String)-instance-method","html_id":"constrained_properties:Array(String)-instance-method","name":"constrained_properties","doc":"Returns an array of the properties who `self` has constraints defined for.","summary":"<p>Returns an array of the properties who <code>self</code> has constraints defined for.</p>","abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/class_metadata.cr#L184","def":{"name":"constrained_properties","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@members.keys"}},{"id":"default_group:String-instance-method","html_id":"default_group:String-instance-method","name":"default_group","doc":"The `#class_name` based group for `self`.","summary":"<p>The <code><a href=\"../../../Athena/Validator/Metadata/ClassMetadata.html#class_name:T.class-instance-method\">#class_name</a></code> based group for <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/class_metadata.cr#L117","def":{"name":"default_group","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@default_group"}},{"id":"group_sequence:AVD::Constraints::GroupSequence?-instance-method","html_id":"group_sequence:AVD::Constraints::GroupSequence?-instance-method","name":"group_sequence","doc":"The `AVD::Constraints::GroupSequence` used by `self`, if any.","summary":"<p>The <code><a href=\"../../../Athena/Validator/Constraints/GroupSequence.html\">AVD::Constraints::GroupSequence</a></code> used by <code>self</code>, if any.</p>","abstract":false,"args":[],"args_string":" : AVD::Constraints::GroupSequence?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/class_metadata.cr#L120","def":{"name":"group_sequence","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Constraints::GroupSequence | ::Nil","visibility":"Public","body":"@group_sequence"}},{"id":"group_sequence=(sequence:Array(String)|AVD::Constraints::GroupSequence):self-instance-method","html_id":"group_sequence=(sequence:Array(String)|AVD::Constraints::GroupSequence):self-instance-method","name":"group_sequence=","doc":"Sets the `AVD::Constraints::GroupSequence` that should be used for `self`.\n\nRaises an `ArgumentError` if `self` is an `AVD::Constraints::GroupSequence::Provider`,\nthe *sequence* contains `AVD::Constraint::DEFAULT_GROUP`,\nor the `#class_name` based group is missing.","summary":"<p>Sets the <code><a href=\"../../../Athena/Validator/Constraints/GroupSequence.html\">AVD::Constraints::GroupSequence</a></code> that should be used for <code>self</code>.</p>","abstract":false,"args":[{"name":"sequence","doc":null,"default_value":"","external_name":"sequence","restriction":"Array(String) | AVD::Constraints::GroupSequence"}],"args_string":"(sequence : Array(String) | AVD::Constraints::GroupSequence) : <span class=\"k\">self</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/class_metadata.cr#L193","def":{"name":"group_sequence=","args":[{"name":"sequence","doc":null,"default_value":"","external_name":"sequence","restriction":"Array(String) | AVD::Constraints::GroupSequence"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"if @group_sequence_provider\n  raise(ArgumentError.new(\"Defining a static group sequence is not allowed with a group sequence provider.\"))\nend\nif sequence.is_a?(Array)\n  sequence = AVD::Constraints::GroupSequence.new(sequence)\nend\nif sequence.groups.includes?(AVD::Constraint::DEFAULT_GROUP)\n  raise(ArgumentError.new(\"The group '#{AVD::Constraint::DEFAULT_GROUP}' is not allowed in group sequences.\"))\nend\nif sequence.groups.includes?(@default_group)\nelse\n  raise(ArgumentError.new(\"The group '#{@default_group}' is missing from the group sequence.\"))\nend\n@group_sequence = sequence\nself\n"}},{"id":"group_sequence_provider=(active:Bool):Nil-instance-method","html_id":"group_sequence_provider=(active:Bool):Nil-instance-method","name":"group_sequence_provider=","doc":"Denotes `self` as a `AVD::Constraints::GroupSequence::Provider`.","summary":"<p>Denotes <code>self</code> as a <code><a href=\"../../../Athena/Validator/Constraints/GroupSequence/Provider.html\">AVD::Constraints::GroupSequence::Provider</a></code>.</p>","abstract":false,"args":[{"name":"active","doc":null,"default_value":"","external_name":"active","restriction":"Bool"}],"args_string":"(active : Bool) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/class_metadata.cr#L214","def":{"name":"group_sequence_provider=","args":[{"name":"active","doc":null,"default_value":"","external_name":"active","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if @group_sequence.nil?\nelse\n  raise(ArgumentError.new(\"Defining a group sequence provider is not allowed with a static group sequence.\"))\nend\n@group_sequence_provider = active\n"}},{"id":"has_property_metadata?(property_name:String):Bool-instance-method","html_id":"has_property_metadata?(property_name:String):Bool-instance-method","name":"has_property_metadata?","doc":"Returns `true` if `self` has property metadata for the provided *property_name*.","summary":"<p>Returns <code>true</code> if <code>self</code> has property metadata for the provided <em>property_name</em>.</p>","abstract":false,"args":[{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"}],"args_string":"(property_name : String) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/class_metadata.cr#L221","def":{"name":"has_property_metadata?","args":[{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@members.has_key?(property_name)"}},{"id":"name:String?-instance-method","html_id":"name:String?-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/class_metadata.cr#L230","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"nil"}},{"id":"property_metadata(property_name:String):Array(AVD::Metadata::PropertyMetadataInterface)-instance-method","html_id":"property_metadata(property_name:String):Array(AVD::Metadata::PropertyMetadataInterface)-instance-method","name":"property_metadata","doc":"Returns an `AVD::Metadata::PropertyMetadataInterface` instance for the provided *property_name*, if any.","summary":"<p>Returns an <code><a href=\"../../../Athena/Validator/Metadata/PropertyMetadataInterface.html\">AVD::Metadata::PropertyMetadataInterface</a></code> instance for the provided <em>property_name</em>, if any.</p>","abstract":false,"args":[{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"}],"args_string":"(property_name : String) : Array(AVD::Metadata::PropertyMetadataInterface)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/class_metadata.cr#L226","def":{"name":"property_metadata","args":[{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(AVD::Metadata::PropertyMetadataInterface)","visibility":"Public","body":"@members.fetch(property_name) do\n  [] of AVD::Metadata::PropertyMetadataInterface\nend"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Metadata/GenericMetadata","path":"Athena/Validator/Metadata/GenericMetadata.html","kind":"module","full_name":"Athena::Validator::Metadata::GenericMetadata","name":"GenericMetadata","abstract":false,"superclass":null,"ancestors":[{"html_id":"athena/Athena/Validator/Metadata/MetadataInterface","kind":"module","full_name":"Athena::Validator::Metadata::MetadataInterface","name":"MetadataInterface"}],"locations":[{"filename":"lib/athena-validator/src/metadata/generic_metadata.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/generic_metadata.cr#L3"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Validator/Metadata/MetadataInterface","kind":"module","full_name":"Athena::Validator::Metadata::MetadataInterface","name":"MetadataInterface"}],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Validator/Metadata/ClassMetadata","kind":"class","full_name":"Athena::Validator::Metadata::ClassMetadata(T)","name":"ClassMetadata"},{"html_id":"athena/Athena/Validator/Metadata/GetterMetadata","kind":"class","full_name":"Athena::Validator::Metadata::GetterMetadata(EntityType, MethodIdx)","name":"GetterMetadata"},{"html_id":"athena/Athena/Validator/Metadata/PropertyMetadata","kind":"class","full_name":"Athena::Validator::Metadata::PropertyMetadata(EntityType, PropertyIdx)","name":"PropertyMetadata"}],"namespace":{"html_id":"athena/Athena/Validator/Metadata","kind":"module","full_name":"Athena::Validator::Metadata","name":"Metadata"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"add_constraint(constraint:AVD::Constraint):AVD::Metadata::GenericMetadata-instance-method","html_id":"add_constraint(constraint:AVD::Constraint):AVD::Metadata::GenericMetadata-instance-method","name":"add_constraint","doc":"Adds the provided *constraint* to `self`'s `#constraints` array.\n\nSets `#cascading_strategy` to `AVD::Metadata::CascadingStrategy::Cascade` if the *constraint* is `AVD::Constraints::Valid`.","summary":"<p>Adds the provided <em>constraint</em> to <code>self</code>'s <code><a href=\"../../../Athena/Validator/Metadata/GenericMetadata.html#constraints:Array(AVD::Constraint)-instance-method\">#constraints</a></code> array.</p>","abstract":false,"args":[{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint"}],"args_string":"(constraint : AVD::Constraint) : AVD::Metadata::GenericMetadata","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/generic_metadata.cr#L16","def":{"name":"add_constraint","args":[{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Metadata::GenericMetadata","visibility":"Public","body":"if constraint.is_a?(AVD::Constraints::Valid)\n  @cascading_strategy = :cascade\n  return self\nend\n@constraints << constraint\nconstraint.groups.each do |group|\n  ((  __temp_29 = group\n  @constraints_by_group[__temp_29]? || (@constraints_by_group[__temp_29] = Array(AVD::Constraint).new))) << constraint\nend\nself\n"}},{"id":"add_constraints(constraints:Array(AVD::Constraint)):AVD::Metadata::GenericMetadata-instance-method","html_id":"add_constraints(constraints:Array(AVD::Constraint)):AVD::Metadata::GenericMetadata-instance-method","name":"add_constraints","doc":"Adds each of the provided *constraints* to `self`.","summary":"<p>Adds each of the provided <em>constraints</em> to <code>self</code>.</p>","abstract":false,"args":[{"name":"constraints","doc":null,"default_value":"","external_name":"constraints","restriction":"Array(AVD::Constraint)"}],"args_string":"(constraints : Array(AVD::Constraint)) : AVD::Metadata::GenericMetadata","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/generic_metadata.cr#L33","def":{"name":"add_constraints","args":[{"name":"constraints","doc":null,"default_value":"","external_name":"constraints","restriction":"Array(AVD::Constraint)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Metadata::GenericMetadata","visibility":"Public","body":"constraints.each(&->add_constraint(AVD::Constraint))\nself\n"}},{"id":"cascading_strategy:AVD::Metadata::CascadingStrategy-instance-method","html_id":"cascading_strategy:AVD::Metadata::CascadingStrategy-instance-method","name":"cascading_strategy","doc":"Returns the `AVD::Metadata::CascadingStrategy` for `self`.","summary":"<p>Returns the <code><a href=\"../../../Athena/Validator/Metadata/CascadingStrategy.html\">AVD::Metadata::CascadingStrategy</a></code> for <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : AVD::Metadata::CascadingStrategy","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/generic_metadata.cr#L11","def":{"name":"cascading_strategy","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Metadata::CascadingStrategy","visibility":"Public","body":"@cascading_strategy"}},{"id":"constraints:Array(AVD::Constraint)-instance-method","html_id":"constraints:Array(AVD::Constraint)-instance-method","name":"constraints","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(AVD::Constraint)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/generic_metadata.cr#L8","def":{"name":"constraints","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(AVD::Constraint)","visibility":"Public","body":"@constraints"}},{"id":"find_constraints(group:String):Array(AVD::Constraint)-instance-method","html_id":"find_constraints(group:String):Array(AVD::Constraint)-instance-method","name":"find_constraints","doc":"Returns an array of all constraints in the provided *group*.","summary":"<p>Returns an array of all constraints in the provided <em>group</em>.</p>","abstract":false,"args":[{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":"String"}],"args_string":"(group : String) : Array(AVD::Constraint)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/generic_metadata.cr#L40","def":{"name":"find_constraints","args":[{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(AVD::Constraint)","visibility":"Public","body":"@constraints_by_group[group]? || Array(AVD::Constraint).new"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Metadata/GetterMetadata","path":"Athena/Validator/Metadata/GetterMetadata.html","kind":"class","full_name":"Athena::Validator::Metadata::GetterMetadata(EntityType, MethodIdx)","name":"GetterMetadata","abstract":false,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Athena/Validator/Metadata/PropertyMetadataInterface","kind":"module","full_name":"Athena::Validator::Metadata::PropertyMetadataInterface","name":"PropertyMetadataInterface"},{"html_id":"athena/Athena/Validator/Metadata/MetadataInterface","kind":"module","full_name":"Athena::Validator::Metadata::MetadataInterface","name":"MetadataInterface"},{"html_id":"athena/Athena/Validator/Metadata/GenericMetadata","kind":"module","full_name":"Athena::Validator::Metadata::GenericMetadata","name":"GenericMetadata"},{"html_id":"athena/Athena/Validator/Metadata/MetadataInterface","kind":"module","full_name":"Athena::Validator::Metadata::MetadataInterface","name":"MetadataInterface"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/metadata/getter_metadata.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/getter_metadata.cr#L3"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Validator/Metadata/GenericMetadata","kind":"module","full_name":"Athena::Validator::Metadata::GenericMetadata","name":"GenericMetadata"},{"html_id":"athena/Athena/Validator/Metadata/PropertyMetadataInterface","kind":"module","full_name":"Athena::Validator::Metadata::PropertyMetadataInterface","name":"PropertyMetadataInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Metadata","kind":"module","full_name":"Athena::Validator::Metadata","name":"Metadata"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name:String)-class-method","html_id":"new(name:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/getter_metadata.cr#L10","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = GetterMetadata(EntityType, MethodIdx).allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"class_name:EntityType.class-instance-method","html_id":"class_name:EntityType.class-instance-method","name":"class_name","doc":"Returns the class the method `self` represents, belongs to.","summary":"<p>Returns the class the method <code>self</code> represents, belongs to.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">EntityType</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/getter_metadata.cr#L13","def":{"name":"class_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"EntityType.class","visibility":"Public","body":"EntityType"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":"Returns the name of the member represented by `self`.","summary":"<p>Returns the name of the member represented by <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/getter_metadata.cr#L8","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Metadata/MetadataFactory","path":"Athena/Validator/Metadata/MetadataFactory.html","kind":"class","full_name":"Athena::Validator::Metadata::MetadataFactory","name":"MetadataFactory","abstract":false,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Athena/Validator/Metadata/MetadataFactoryInterface","kind":"module","full_name":"Athena::Validator::Metadata::MetadataFactoryInterface","name":"MetadataFactoryInterface"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/metadata/metadata_factory.cr","line_number":4,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/metadata_factory.cr#L4"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Validator/Metadata/MetadataFactoryInterface","kind":"module","full_name":"Athena::Validator::Metadata::MetadataFactoryInterface","name":"MetadataFactoryInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Metadata","kind":"module","full_name":"Athena::Validator::Metadata","name":"Metadata"},"doc":"Basic implementation of `AVD::Metadata::MetadataFactoryInterface`.","summary":"<p>Basic implementation of <code><a href=\"../../../Athena/Validator/Metadata/MetadataFactoryInterface.html\">AVD::Metadata::MetadataFactoryInterface</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"metadata(object:AVD::Validatable):AVD::Metadata::ClassMetadata-instance-method","html_id":"metadata(object:AVD::Validatable):AVD::Metadata::ClassMetadata-instance-method","name":"metadata","doc":"Returns an `AVD::Metadata::ClassMetadata` instance for the related `AVD::Validatable` *object*.","summary":"<p>Returns an <code><a href=\"../../../Athena/Validator/Metadata/ClassMetadata.html\">AVD::Metadata::ClassMetadata</a></code> instance for the related <code><a href=\"../../../Athena/Validator/Validatable.html\">AVD::Validatable</a></code> <em>object</em>.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"}],"args_string":"(object : AVD::Validatable) : AVD::Metadata::ClassMetadata","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/metadata_factory.cr#L7","def":{"name":"metadata","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Metadata::ClassMetadata","visibility":"Public","body":"object.class.validation_class_metadata"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Metadata/MetadataFactoryInterface","path":"Athena/Validator/Metadata/MetadataFactoryInterface.html","kind":"module","full_name":"Athena::Validator::Metadata::MetadataFactoryInterface","name":"MetadataFactoryInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-validator/src/metadata/metadata_factory_interface.cr","line_number":1,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/metadata_factory_interface.cr#L1"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Validator/Metadata/MetadataFactory","kind":"class","full_name":"Athena::Validator::Metadata::MetadataFactory","name":"MetadataFactory"},{"html_id":"athena/Athena/Validator/Spec/MockMetadataFactory","kind":"struct","full_name":"Athena::Validator::Spec::MockMetadataFactory(T1, T2, T3, T4, T5)","name":"MockMetadataFactory"}],"namespace":{"html_id":"athena/Athena/Validator/Metadata","kind":"module","full_name":"Athena::Validator::Metadata","name":"Metadata"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"metadata(object:AVD::Validatable):AVD::Metadata::ClassMetadata-instance-method","html_id":"metadata(object:AVD::Validatable):AVD::Metadata::ClassMetadata-instance-method","name":"metadata","doc":"Returns an `AVD::Metadata::ClassMetadata` instance for the related `AVD::Validatable` *object*.","summary":"<p>Returns an <code><a href=\"../../../Athena/Validator/Metadata/ClassMetadata.html\">AVD::Metadata::ClassMetadata</a></code> instance for the related <code><a href=\"../../../Athena/Validator/Validatable.html\">AVD::Validatable</a></code> <em>object</em>.</p>","abstract":true,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"}],"args_string":"(object : AVD::Validatable) : AVD::Metadata::ClassMetadata","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/metadata_factory_interface.cr#L3","def":{"name":"metadata","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Metadata::ClassMetadata","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Metadata/MetadataInterface","path":"Athena/Validator/Metadata/MetadataInterface.html","kind":"module","full_name":"Athena::Validator::Metadata::MetadataInterface","name":"MetadataInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-validator/src/metadata/metadata_interface.cr","line_number":1,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/metadata_interface.cr#L1"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Validator/Metadata/GenericMetadata","kind":"module","full_name":"Athena::Validator::Metadata::GenericMetadata","name":"GenericMetadata"},{"html_id":"athena/Athena/Validator/Metadata/PropertyMetadataInterface","kind":"module","full_name":"Athena::Validator::Metadata::PropertyMetadataInterface","name":"PropertyMetadataInterface"}],"namespace":{"html_id":"athena/Athena/Validator/Metadata","kind":"module","full_name":"Athena::Validator::Metadata","name":"Metadata"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"cascading_strategy:AVD::Metadata::CascadingStrategy-instance-method","html_id":"cascading_strategy:AVD::Metadata::CascadingStrategy-instance-method","name":"cascading_strategy","doc":"Returns the `AVD::Metadata::CascadingStrategy` for `self`.","summary":"<p>Returns the <code><a href=\"../../../Athena/Validator/Metadata/CascadingStrategy.html\">AVD::Metadata::CascadingStrategy</a></code> for <code>self</code>.</p>","abstract":true,"args":[],"args_string":" : AVD::Metadata::CascadingStrategy","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/metadata_interface.cr#L3","def":{"name":"cascading_strategy","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Metadata::CascadingStrategy","visibility":"Public","body":""}},{"id":"constraints:Array(AVD::Constraint)-instance-method","html_id":"constraints:Array(AVD::Constraint)-instance-method","name":"constraints","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Array(AVD::Constraint)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/metadata_interface.cr#L5","def":{"name":"constraints","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(AVD::Constraint)","visibility":"Public","body":""}},{"id":"find_constraints(group:String):Array(AVD::Constraint)-instance-method","html_id":"find_constraints(group:String):Array(AVD::Constraint)-instance-method","name":"find_constraints","doc":"Returns an array of all constraints in the provided *group*.","summary":"<p>Returns an array of all constraints in the provided <em>group</em>.</p>","abstract":true,"args":[{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":"String"}],"args_string":"(group : String) : Array(AVD::Constraint)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/metadata_interface.cr#L8","def":{"name":"find_constraints","args":[{"name":"group","doc":null,"default_value":"","external_name":"group","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(AVD::Constraint)","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Metadata/PropertyMetadata","path":"Athena/Validator/Metadata/PropertyMetadata.html","kind":"class","full_name":"Athena::Validator::Metadata::PropertyMetadata(EntityType, PropertyIdx)","name":"PropertyMetadata","abstract":false,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Athena/Validator/Metadata/PropertyMetadataInterface","kind":"module","full_name":"Athena::Validator::Metadata::PropertyMetadataInterface","name":"PropertyMetadataInterface"},{"html_id":"athena/Athena/Validator/Metadata/MetadataInterface","kind":"module","full_name":"Athena::Validator::Metadata::MetadataInterface","name":"MetadataInterface"},{"html_id":"athena/Athena/Validator/Metadata/GenericMetadata","kind":"module","full_name":"Athena::Validator::Metadata::GenericMetadata","name":"GenericMetadata"},{"html_id":"athena/Athena/Validator/Metadata/MetadataInterface","kind":"module","full_name":"Athena::Validator::Metadata::MetadataInterface","name":"MetadataInterface"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/metadata/property_metadata.cr","line_number":3,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/property_metadata.cr#L3"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Validator/Metadata/GenericMetadata","kind":"module","full_name":"Athena::Validator::Metadata::GenericMetadata","name":"GenericMetadata"},{"html_id":"athena/Athena/Validator/Metadata/PropertyMetadataInterface","kind":"module","full_name":"Athena::Validator::Metadata::PropertyMetadataInterface","name":"PropertyMetadataInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Metadata","kind":"module","full_name":"Athena::Validator::Metadata","name":"Metadata"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name:String)-class-method","html_id":"new(name:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/property_metadata.cr#L10","def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = PropertyMetadata(EntityType, PropertyIdx).allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"class_name:EntityType.class-instance-method","html_id":"class_name:EntityType.class-instance-method","name":"class_name","doc":"Returns the class the property `self` represents, belongs to.","summary":"<p>Returns the class the property <code>self</code> represents, belongs to.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">EntityType</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/property_metadata.cr#L13","def":{"name":"class_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"EntityType.class","visibility":"Public","body":"EntityType"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":"Returns the name of the member represented by `self`.","summary":"<p>Returns the name of the member represented by <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/property_metadata.cr#L8","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Metadata/PropertyMetadataInterface","path":"Athena/Validator/Metadata/PropertyMetadataInterface.html","kind":"module","full_name":"Athena::Validator::Metadata::PropertyMetadataInterface","name":"PropertyMetadataInterface","abstract":false,"superclass":null,"ancestors":[{"html_id":"athena/Athena/Validator/Metadata/MetadataInterface","kind":"module","full_name":"Athena::Validator::Metadata::MetadataInterface","name":"MetadataInterface"}],"locations":[{"filename":"lib/athena-validator/src/metadata/property_metadata_interface.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/property_metadata_interface.cr#L2"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Validator/Metadata/MetadataInterface","kind":"module","full_name":"Athena::Validator::Metadata::MetadataInterface","name":"MetadataInterface"}],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Validator/Metadata/GetterMetadata","kind":"class","full_name":"Athena::Validator::Metadata::GetterMetadata(EntityType, MethodIdx)","name":"GetterMetadata"},{"html_id":"athena/Athena/Validator/Metadata/PropertyMetadata","kind":"class","full_name":"Athena::Validator::Metadata::PropertyMetadata(EntityType, PropertyIdx)","name":"PropertyMetadata"}],"namespace":{"html_id":"athena/Athena/Validator/Metadata","kind":"module","full_name":"Athena::Validator::Metadata","name":"Metadata"},"doc":"Stores metadata associated with a specific property.","summary":"<p>Stores metadata associated with a specific property.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":"Returns the name of the member represented by `self`.","summary":"<p>Returns the name of the member represented by <code>self</code>.</p>","abstract":true,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/metadata/property_metadata_interface.cr#L6","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/PropertyPath","path":"Athena/Validator/PropertyPath.html","kind":"module","full_name":"Athena::Validator::PropertyPath","name":"PropertyPath","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-validator/src/property_path.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/property_path.cr#L2"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator","kind":"module","full_name":"Athena::Validator","name":"Validator"},"doc":"Utility type for working with property paths.","summary":"<p>Utility type for working with property paths.</p>","class_methods":[{"id":"append(base_path:String,sub_path:String):String-class-method","html_id":"append(base_path:String,sub_path:String):String-class-method","name":"append","doc":"Appends the provided *sub_path* to the provided *base_path* based on the following rules:\n\n* If the base path is empty, the sub path is returned as is.\n* If the base path is not empty, and the sub path starts with an `[`,\nthe concatenation of the two paths is returned.\n* If the base path is not empty, and the sub path does not start with an `[`,\nthe concatenation of the two paths is returned, separated by a `.`.\n\n```\nAVD::PropertyPath.append \"\", \"sub_path\"          # => \"sub_path\"\nAVD::PropertyPath.append \"base_path\", \"[0]\"      # => \"base_path[0]\"\nAVD::PropertyPath.append \"base_path\", \"sub_path\" # => \"base_path.sub_path\"\n```","summary":"<p>Appends the provided <em>sub_path</em> to the provided <em>base_path</em> based on the following rules:</p>","abstract":false,"args":[{"name":"base_path","doc":null,"default_value":"","external_name":"base_path","restriction":"String"},{"name":"sub_path","doc":null,"default_value":"","external_name":"sub_path","restriction":"String"}],"args_string":"(base_path : String, sub_path : String) : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/property_path.cr#L16","def":{"name":"append","args":[{"name":"base_path","doc":null,"default_value":"","external_name":"base_path","restriction":"String"},{"name":"sub_path","doc":null,"default_value":"","external_name":"sub_path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"if sub_path.blank?\n  return base_path\nend\nif sub_path.starts_with?('[')\n  return \"#{base_path}#{sub_path}\"\nend\n!base_path.blank? ? \"#{base_path}.#{sub_path}\" : sub_path\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/ServiceConstraintValidator","path":"Athena/Validator/ServiceConstraintValidator.html","kind":"struct","full_name":"Athena::Validator::ServiceConstraintValidator","name":"ServiceConstraintValidator","abstract":true,"superclass":{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/constraint_validator.cr","line_number":40,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/constraint_validator.cr#L40"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator","kind":"module","full_name":"Athena::Validator","name":"Validator"},"doc":"Extension of `AVD::ConstraintValidator` used to denote a service validator\nthat can be used with [Athena Dependency Injection](https://github.com/athena-framework/dependency-injection).","summary":"<p>Extension of <code><a href=\"../../Athena/Validator/ConstraintValidator.html\">AVD::ConstraintValidator</a></code> used to denote a service validator that can be used with <a href=\"https://github.com/athena-framework/dependency-injection\" target=\"_blank\">Athena Dependency Injection</a>.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Spec","path":"Athena/Validator/Spec.html","kind":"module","full_name":"Athena::Validator::Spec","name":"Spec","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-validator/src/spec.cr","line_number":20,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L20"},{"filename":"lib/athena-validator/src/spec/abstract_validator_test_case.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec/abstract_validator_test_case.cr#L2"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator","kind":"module","full_name":"Athena::Validator","name":"Validator"},"doc":"A set of testing utilities/types to aid in testing `Athena::Validator` related types.\n\n### Getting Started\n\nRequire this module in your `spec_helper.cr` file.\n\n```\n# This also requires \"spec\" and \"athena-spec\".\nrequire \"athena-validator/spec\"\n```\n\nAdd `Athena::Spec` as a development dependency, then run a `shards install`.\nSee the individual types for more information.","summary":"<p>A set of testing utilities/types to aid in testing <code><a href=\"../../Athena/Validator.html\">Athena::Validator</a></code> related types.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Spec/ComparisonConstraintValidatorTestCase","path":"Athena/Validator/Spec/ComparisonConstraintValidatorTestCase.html","kind":"struct","full_name":"Athena::Validator::Spec::ComparisonConstraintValidatorTestCase","name":"ComparisonConstraintValidatorTestCase","abstract":true,"superclass":{"html_id":"athena/Athena/Validator/Spec/ConstraintValidatorTestCase","kind":"struct","full_name":"Athena::Validator::Spec::ConstraintValidatorTestCase","name":"ConstraintValidatorTestCase"},"ancestors":[{"html_id":"athena/Athena/Validator/Spec/ConstraintValidatorTestCase","kind":"struct","full_name":"Athena::Validator::Spec::ConstraintValidatorTestCase","name":"ConstraintValidatorTestCase"},{"html_id":"athena/Athena/Spec/TestCase","kind":"struct","full_name":"Athena::Spec::TestCase","name":"TestCase"},{"html_id":"athena/Athena/Spec/Methods","kind":"module","full_name":"Athena::Spec::Methods","name":"Methods"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/spec.cr","line_number":71,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L71"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Spec","kind":"module","full_name":"Athena::Validator::Spec","name":"Spec"},"doc":"Extension of `AVD::Spec::ConstraintValidatorTestCase` used for testing `AVD::Constraints::AbstractComparison` based constraints.\n\n### Example\n\nUsing the spec from `AVD::Constraints::EqualTo`:\n\n```\n# Makes for a bit less typing when needing to reference the constraint.\nprivate alias CONSTRAINT = AVD::Constraints::EqualTo\n\n# Define our test case inheriting from the abstract `ComparisonConstraintValidatorTestCase`.\nstruct EqualToValidatorTest < AVD::Spec::ComparisonConstraintValidatorTestCase\n  # Returns a Tuple of Tuples representing valid comparisons.\n  # The first item  is the actual value and the second item is the expected value.\n  def valid_comparisons : Tuple\n    {\n      {3, 3},\n      {'a', 'a'},\n      {\"a\", \"a\"},\n      {Time.utc(2020, 4, 7), Time.utc(2020, 4, 7)},\n      {nil, false},\n    }\n  end\n\n  # Returns a Tuple of Tuples representing invalid comparisons.\n  # The first item  is the actual value and the second item is the expected value.\n  def invalid_comparisons : Tuple\n    {\n      {1, 3},\n      {'b', 'a'},\n      {\"b\", \"a\"},\n      {Time.utc(2020, 4, 8), Time.utc(2020, 4, 7)},\n    }\n  end\n\n  # The error code related to the current CONSTRAINT.\n  def error_code : String\n    CONSTRAINT::NOT_EQUAL_ERROR\n  end\n\n  # Implement some abstract defs to return the validator and constraint class.\n  def create_validator : AVD::ConstraintValidatorInterface\n    CONSTRAINT::Validator.new\n  end\n\n  def constraint_class : AVD::Constraint.class\n    CONSTRAINT\n  end\nend\n```","summary":"<p>Extension of <code><a href=\"../../../Athena/Validator/Spec/ConstraintValidatorTestCase.html\">AVD::Spec::ConstraintValidatorTestCase</a></code> used for testing <code><a href=\"../../../Athena/Validator/Constraints/AbstractComparison.html\">AVD::Constraints::AbstractComparison</a></code> based constraints.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"error_code:String-instance-method","html_id":"error_code:String-instance-method","name":"error_code","doc":"The code for the current constraint.","summary":"<p>The code for the current constraint.</p>","abstract":true,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L79","def":{"name":"error_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}},{"id":"invalid_comparisons:Tuple-instance-method","html_id":"invalid_comparisons:Tuple-instance-method","name":"invalid_comparisons","doc":"A `Tuple` of tuples representing invalid comparisons.","summary":"<p>A <code>Tuple</code> of tuples representing invalid comparisons.</p>","abstract":true,"args":[],"args_string":" : Tuple","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L76","def":{"name":"invalid_comparisons","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Tuple","visibility":"Public","body":""}},{"id":"test_invalid_comparisons(actual,expected:T):NilforallT-instance-method","html_id":"test_invalid_comparisons(actual,expected:T):NilforallT-instance-method","name":"test_invalid_comparisons","doc":null,"summary":null,"abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":""},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"T"}],"args_string":"(actual, expected : T) : Nil forall T","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L88","def":{"name":"test_invalid_comparisons","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":""},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"self.validator.validate(actual, self.new_constraint(value: expected, message: \"my_message\"))\n(((self.build_violation(\"my_message\", self.error_code, actual)).add_parameter(\"{{ compared_value }}\", expected)).add_parameter(\"{{ compared_value_type }}\", T)).assert_violation\n"}},{"id":"test_valid_comparisons(actual,expected):Nil-instance-method","html_id":"test_valid_comparisons(actual,expected):Nil-instance-method","name":"test_valid_comparisons","doc":null,"summary":null,"abstract":false,"args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":""},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":""}],"args_string":"(actual, expected) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L82","def":{"name":"test_valid_comparisons","args":[{"name":"actual","doc":null,"default_value":"","external_name":"actual","restriction":""},{"name":"expected","doc":null,"default_value":"","external_name":"expected","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"self.validator.validate(actual, self.new_constraint(value: expected))\nself.assert_no_violation\n"}},{"id":"valid_comparisons:Tuple-instance-method","html_id":"valid_comparisons:Tuple-instance-method","name":"valid_comparisons","doc":"A `Tuple` of tuples representing valid comparisons.","summary":"<p>A <code>Tuple</code> of tuples representing valid comparisons.</p>","abstract":true,"args":[],"args_string":" : Tuple","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L73","def":{"name":"valid_comparisons","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Tuple","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Spec/ConstraintValidatorTestCase","path":"Athena/Validator/Spec/ConstraintValidatorTestCase.html","kind":"struct","full_name":"Athena::Validator::Spec::ConstraintValidatorTestCase","name":"ConstraintValidatorTestCase","abstract":true,"superclass":{"html_id":"athena/Athena/Spec/TestCase","kind":"struct","full_name":"Athena::Spec::TestCase","name":"TestCase"},"ancestors":[{"html_id":"athena/Athena/Spec/TestCase","kind":"struct","full_name":"Athena::Spec::TestCase","name":"TestCase"},{"html_id":"athena/Athena/Spec/Methods","kind":"module","full_name":"Athena::Spec::Methods","name":"Methods"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/spec/constraint_validator_test_case.cr","line_number":56,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec/constraint_validator_test_case.cr#L56"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Validator/Spec/ComparisonConstraintValidatorTestCase","kind":"struct","full_name":"Athena::Validator::Spec::ComparisonConstraintValidatorTestCase","name":"ComparisonConstraintValidatorTestCase"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Spec","kind":"module","full_name":"Athena::Validator::Spec","name":"Spec"},"doc":"Test case designed to make testing `AVD::ConstraintValidatorInterface` easier.\n\n### Example\n\nUsing the spec from `AVD::Constraints::NotNil`:\n\n```\n# Makes for a bit less typing when needing to reference the constraint.\nprivate alias CONSTRAINT = AVD::Constraints::NotNil\n\n# Define our test case inheriting from the abstract ConstraintValidatorTestCase.\nstruct NotNilValidatorTest < AVD::Spec::ConstraintValidatorTestCase\n  @[DataProvider(\"valid_values\")]\n  def test_valid_values(value : _) : Nil\n    # Validate the value against a new instance of the constraint.\n    self.validator.validate value, self.new_constraint\n\n    # Assert no violations were added to the context.\n    self.assert_no_violation\n  end\n\n  # Use data providers to reduce duplication.\n  def valid_values : NamedTuple\n    {\n      string:       {\"\"},\n      bool_false:   {false},\n      bool_true:    {true},\n      zero:         {0},\n      null_pointer: {Pointer(Void).null},\n    }\n  end\n\n  def test_nil_is_invalid\n    # Validate an invalid value against a new instance of the constraint with a custom message.\n    self.validator.validate nil, self.new_constraint message: \"my_message\"\n\n    # Asssert a violation with the expected message, code, and value parameter is added to the context.\n    self\n      .build_violation(\"my_message\", CONSTRAINT::IS_NULL_ERROR, nil)\n      .assert_violation\n  end\n\n  # Implement some abstract defs to return the validator and constraint class.\n  private def create_validator : AVD::ConstraintValidatorInterface\n    CONSTRAINT::Validator.new\n  end\n\n  private def constraint_class : AVD::Constraint.class\n    CONSTRAINT\n  end\nend\n```\n\nThis type is an extension of `ASPEC::TestCase`, see that type for more information on this testing approach.\nThis approach also allows using `ASPEC::TestCase::DataProvider`s for reducing duplication withing your test.","summary":"<p>Test case designed to make testing <code><a href=\"../../../Athena/Validator/ConstraintValidatorInterface.html\">AVD::ConstraintValidatorInterface</a></code> easier.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec/constraint_validator_test_case.cr#L153","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"assert_no_violation(*,file:String=__FILE__,line:Int32=__LINE__):Nil-instance-method","html_id":"assert_no_violation(*,file:String=__FILE__,line:Int32=__LINE__):Nil-instance-method","name":"assert_no_violation","doc":"Asserts that no violations were added to the context.","summary":"<p>Asserts that no violations were added to the context.</p>","abstract":false,"args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"file","doc":null,"default_value":"__FILE__","external_name":"file","restriction":"String"},{"name":"line","doc":null,"default_value":"__LINE__","external_name":"line","restriction":"Int32"}],"args_string":"(*, file : String = __FILE__, line : Int32 = __LINE__) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec/constraint_validator_test_case.cr#L181","def":{"name":"assert_no_violation","args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"file","doc":null,"default_value":"__FILE__","external_name":"file","restriction":"String"},{"name":"line","doc":null,"default_value":"__LINE__","external_name":"line","restriction":"Int32"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if (violation_count = self.context.violations.size).zero?\nelse\n  fail(\"0 violations expected but got #{violation_count}.\", file, line)\nend"}},{"id":"assert_violation(message:String,code:String,value:_):Nil-instance-method","html_id":"assert_violation(message:String,code:String,value:_):Nil-instance-method","name":"assert_violation","doc":"Asserts a violation with the provided *message*, *code*, and *value* parameter was added to the context.","summary":"<p>Asserts a violation with the provided <em>message</em>, <em>code</em>, and <em>value</em> parameter was added to the context.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"args_string":"(message : String, code : String, value : _) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec/constraint_validator_test_case.cr#L198","def":{"name":"assert_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"(self.build_violation(message, code, value)).assert_violation"}},{"id":"assert_violation(message:String,code:String):Nil-instance-method","html_id":"assert_violation(message:String,code:String):Nil-instance-method","name":"assert_violation","doc":"Asserts a violation with the provided provided *message*, and *code* was added to the context.","summary":"<p>Asserts a violation with the provided provided <em>message</em>, and <em>code</em> was added to the context.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"}],"args_string":"(message : String, code : String) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec/constraint_validator_test_case.cr#L193","def":{"name":"assert_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"(self.build_violation(message, code)).assert_violation"}},{"id":"assert_violation(message:String):Nil-instance-method","html_id":"assert_violation(message:String):Nil-instance-method","name":"assert_violation","doc":"Asserts a violation with the provided *message* was added to the context.","summary":"<p>Asserts a violation with the provided <em>message</em> was added to the context.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"args_string":"(message : String) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec/constraint_validator_test_case.cr#L188","def":{"name":"assert_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"(self.build_violation(message)).assert_violation"}},{"id":"build_violation(message:String,code:String,value:_):AVD::Spec::ConstraintValidatorTestCase::Assertion-instance-method","html_id":"build_violation(message:String,code:String,value:_):AVD::Spec::ConstraintValidatorTestCase::Assertion-instance-method","name":"build_violation","doc":"Returns an `AVD::Spec::ConstraintValidatorTestCase::Assertion` with the provided *message*, *code*, and *value* parameter preset.","summary":"<p>Returns an <code><a href=\"../../../Athena/Validator/Spec/ConstraintValidatorTestCase/Assertion.html\">AVD::Spec::ConstraintValidatorTestCase::Assertion</a></code> with the provided <em>message</em>, <em>code</em>, and <em>value</em> parameter preset.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"args_string":"(message : String, code : String, value : _) : AVD::Spec::ConstraintValidatorTestCase::Assertion","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec/constraint_validator_test_case.cr#L213","def":{"name":"build_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Spec::ConstraintValidatorTestCase::Assertion","visibility":"Public","body":"((self.build_violation(message)).code(code)).add_parameter(\"{{ value }}\", value)"}},{"id":"build_violation(message:String,code:String):AVD::Spec::ConstraintValidatorTestCase::Assertion-instance-method","html_id":"build_violation(message:String,code:String):AVD::Spec::ConstraintValidatorTestCase::Assertion-instance-method","name":"build_violation","doc":"Returns an `AVD::Spec::ConstraintValidatorTestCase::Assertion` with the provided *message*, and *code* preset.","summary":"<p>Returns an <code><a href=\"../../../Athena/Validator/Spec/ConstraintValidatorTestCase/Assertion.html\">AVD::Spec::ConstraintValidatorTestCase::Assertion</a></code> with the provided <em>message</em>, and <em>code</em> preset.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"}],"args_string":"(message : String, code : String) : AVD::Spec::ConstraintValidatorTestCase::Assertion","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec/constraint_validator_test_case.cr#L208","def":{"name":"build_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Spec::ConstraintValidatorTestCase::Assertion","visibility":"Public","body":"(self.build_violation(message)).code(code)"}},{"id":"build_violation(message:String):AVD::Spec::ConstraintValidatorTestCase::Assertion-instance-method","html_id":"build_violation(message:String):AVD::Spec::ConstraintValidatorTestCase::Assertion-instance-method","name":"build_violation","doc":"Returns an `AVD::Spec::ConstraintValidatorTestCase::Assertion` with the provided *message* preset.","summary":"<p>Returns an <code><a href=\"../../../Athena/Validator/Spec/ConstraintValidatorTestCase/Assertion.html\">AVD::Spec::ConstraintValidatorTestCase::Assertion</a></code> with the provided <em>message</em> preset.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"args_string":"(message : String) : AVD::Spec::ConstraintValidatorTestCase::Assertion","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec/constraint_validator_test_case.cr#L203","def":{"name":"build_violation","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Spec::ConstraintValidatorTestCase::Assertion","visibility":"Public","body":"Assertion.new(self.context, message, @constraint)"}},{"id":"constraint_class:AVD::Constraint.class-instance-method","html_id":"constraint_class:AVD::Constraint.class-instance-method","name":"constraint_class","doc":"Returns the class of the constraint being tested.","summary":"<p>Returns the class of the constraint being tested.</p>","abstract":true,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">Constraint</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec/constraint_validator_test_case.cr#L173","def":{"name":"constraint_class","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Constraint.class","visibility":"Public","body":""}},{"id":"context:AVD::ExecutionContext(String)-instance-method","html_id":"context:AVD::ExecutionContext(String)-instance-method","name":"context","doc":"Returns a reference to the context used for the current test.","summary":"<p>Returns a reference to the context used for the current test.</p>","abstract":false,"args":[],"args_string":" : AVD::ExecutionContext(String)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec/constraint_validator_test_case.cr#L224","def":{"name":"context","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ExecutionContext(String)","visibility":"Public","body":"@context.not_nil!"}},{"id":"create_validator:AVD::ConstraintValidatorInterface-instance-method","html_id":"create_validator:AVD::ConstraintValidatorInterface-instance-method","name":"create_validator","doc":"Returns a new validator instance for the constraint being tested.","summary":"<p>Returns a new validator instance for the constraint being tested.</p>","abstract":true,"args":[],"args_string":" : AVD::ConstraintValidatorInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec/constraint_validator_test_case.cr#L170","def":{"name":"create_validator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidatorInterface","visibility":"Public","body":""}},{"id":"new_constraint(**args):AVD::Constraint-instance-method","html_id":"new_constraint(**args):AVD::Constraint-instance-method","name":"new_constraint","doc":"Returns a new constraint instance based on `#constraint_class` and the provided *args*.","summary":"<p>Returns a new constraint instance based on <code><a href=\"../../../Athena/Validator/Spec/ConstraintValidatorTestCase.html#constraint_class:AVD::Constraint.class-instance-method\">#constraint_class</a></code> and the provided <em>args</em>.</p>","abstract":false,"args":[],"args_string":"(**args) : AVD::Constraint","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec/constraint_validator_test_case.cr#L176","def":{"name":"new_constraint","args":[],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Constraint","visibility":"Public","body":"self.constraint_class.new(**args)"}},{"id":"validator:AVD::ConstraintValidatorInterface-instance-method","html_id":"validator:AVD::ConstraintValidatorInterface-instance-method","name":"validator","doc":"Returns the validator instance returned via `#create_validator`.","summary":"<p>Returns the validator instance returned via <code><a href=\"../../../Athena/Validator/Spec/ConstraintValidatorTestCase.html#create_validator:AVD::ConstraintValidatorInterface-instance-method\">#create_validator</a></code>.</p>","abstract":false,"args":[],"args_string":" : AVD::ConstraintValidatorInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec/constraint_validator_test_case.cr#L229","def":{"name":"validator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidatorInterface","visibility":"Public","body":"@validator.not_nil!"}},{"id":"value=(value):Nil-instance-method","html_id":"value=(value):Nil-instance-method","name":"value=","doc":"Overrides the value/node currently being validated.","summary":"<p>Overrides the value/node currently being validated.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec/constraint_validator_test_case.cr#L218","def":{"name":"value=","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@value = value\nself.context.set_node(@value, @object, @metadata, @property_path)\n"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Spec/ConstraintValidatorTestCase/Assertion","path":"Athena/Validator/Spec/ConstraintValidatorTestCase/Assertion.html","kind":"struct","full_name":"Athena::Validator::Spec::ConstraintValidatorTestCase::Assertion","name":"Assertion","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/spec/constraint_validator_test_case.cr","line_number":60,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec/constraint_validator_test_case.cr#L60"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Spec/ConstraintValidatorTestCase","kind":"struct","full_name":"Athena::Validator::Spec::ConstraintValidatorTestCase","name":"ConstraintValidatorTestCase"},"doc":"Used to assert that a violation added via the `AVD::ConstraintValidatorInterface` was built as expected.\n\nNOTE: This type should not be instantiated directly, use `AVD::Spec::ConstraintValidatorTestCase#build_violation` instead.","summary":"<p>Used to assert that a violation added via the <code><a href=\"../../../../Athena/Validator/ConstraintValidatorInterface.html\">AVD::ConstraintValidatorInterface</a></code> was built as expected.</p>","class_methods":[],"constructors":[{"id":"new(context:AVD::ExecutionContextInterface,message:String,constraint:AVD::Constraint)-class-method","html_id":"new(context:AVD::ExecutionContextInterface,message:String,constraint:AVD::Constraint)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"AVD::ExecutionContextInterface"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint"}],"args_string":"(context : AVD::ExecutionContextInterface, message : String, constraint : AVD::Constraint)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec/constraint_validator_test_case.cr#L60","def":{"name":"new","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"AVD::ExecutionContextInterface"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(context, message, constraint)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_parameter(key:String,value:_):self-instance-method","html_id":"add_parameter(key:String,value:_):self-instance-method","name":"add_parameter","doc":"Adds the provided *key* *value* pair to the expected violations' `AVD::Violation::ConstraintViolationInterface#parameters`.\n\nReturns `self` for chaining.","summary":"<p>Adds the provided <em>key</em> <em>value</em> pair to the expected violations' <code><a href=\"../../../../Athena/Validator/Violation/ConstraintViolationInterface.html#parameters:Hash(String,String)-instance-method\">AVD::Violation::ConstraintViolationInterface#parameters</a></code>.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"args_string":"(key : String, value : _) : <span class=\"k\">self</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec/constraint_validator_test_case.cr#L78","def":{"name":"add_parameter","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"@parameters[key] = value.to_s\nself\n"}},{"id":"assert_violation(*,file:String=__FILE__,line:Int32=__LINE__):Nil-instance-method","html_id":"assert_violation(*,file:String=__FILE__,line:Int32=__LINE__):Nil-instance-method","name":"assert_violation","doc":"Asserts that the violation added to the context equals the violation built via `self`.","summary":"<p>Asserts that the violation added to the context equals the violation built via <code>self</code>.</p>","abstract":false,"args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"file","doc":null,"default_value":"__FILE__","external_name":"file","restriction":"String"},{"name":"line","doc":null,"default_value":"__LINE__","external_name":"line","restriction":"Int32"}],"args_string":"(*, file : String = __FILE__, line : Int32 = __LINE__) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec/constraint_validator_test_case.cr#L115","def":{"name":"assert_violation","args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"file","doc":null,"default_value":"__FILE__","external_name":"file","restriction":"String"},{"name":"line","doc":null,"default_value":"__LINE__","external_name":"line","restriction":"Int32"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"expected_violations = [self.get_violation] of AVD::Violation::ConstraintViolationInterface\nviolations = @context.violations\nviolations.size.should(eq(1))\nexpected_violations.each_with_index do |violation, idx|\n  violation.should(eq(violations[idx]), file: file, line: line)\nend\n"}},{"id":"at_path(property_path:String):self-instance-method","html_id":"at_path(property_path:String):self-instance-method","name":"at_path","doc":"Sets the `AVD::Violation::ConstraintViolationInterface#property_path` on the expected violation.\n\nReturns `self` for chaining.","summary":"<p>Sets the <code><a href=\"../../../../Athena/Validator/Violation/ConstraintViolationInterface.html#property_path:String-instance-method\">AVD::Violation::ConstraintViolationInterface#property_path</a></code> on the expected violation.</p>","abstract":false,"args":[{"name":"property_path","doc":null,"default_value":"","external_name":"property_path","restriction":"String"}],"args_string":"(property_path : String) : <span class=\"k\">self</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec/constraint_validator_test_case.cr#L70","def":{"name":"at_path","args":[{"name":"property_path","doc":null,"default_value":"","external_name":"property_path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"@property_path = property_path\nself\n"}},{"id":"cause(cause:String?):self-instance-method","html_id":"cause(cause:String?):self-instance-method","name":"cause","doc":"Sets the `AVD::Violation::ConstraintViolationInterface#cause` on the expected violation.\n\nReturns `self` for chaining.","summary":"<p>Sets the <code><a href=\"../../../../Athena/Validator/Violation/ConstraintViolationInterface.html#cause:String?-instance-method\">AVD::Violation::ConstraintViolationInterface#cause</a></code> on the expected violation.</p>","abstract":false,"args":[{"name":"cause","doc":null,"default_value":"","external_name":"cause","restriction":"String | ::Nil"}],"args_string":"(cause : String?) : <span class=\"k\">self</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec/constraint_validator_test_case.cr#L110","def":{"name":"cause","args":[{"name":"cause","doc":null,"default_value":"","external_name":"cause","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"@cause = cause\nself\n"}},{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec/constraint_validator_test_case.cr#L60","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@context.clone, @message.clone, @constraint.clone)"}},{"id":"code(code:String?):self-instance-method","html_id":"code(code:String?):self-instance-method","name":"code","doc":"Sets the `AVD::Violation::ConstraintViolationInterface#code` on the expected violation.\n\nReturns `self` for chaining.","summary":"<p>Sets the <code><a href=\"../../../../Athena/Validator/Violation/ConstraintViolationInterface.html#code:String?-instance-method\">AVD::Violation::ConstraintViolationInterface#code</a></code> on the expected violation.</p>","abstract":false,"args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String | ::Nil"}],"args_string":"(code : String?) : <span class=\"k\">self</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec/constraint_validator_test_case.cr#L103","def":{"name":"code","args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"@code = code\nself\n"}},{"id":"constraint:AVD::Constraint-instance-method","html_id":"constraint:AVD::Constraint-instance-method","name":"constraint","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : AVD::Constraint","source_link":null,"def":{"name":"constraint","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Constraint","visibility":"Public","body":"@constraint"}},{"id":"context:AVD::ExecutionContextInterface-instance-method","html_id":"context:AVD::ExecutionContextInterface-instance-method","name":"context","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : AVD::ExecutionContextInterface","source_link":null,"def":{"name":"context","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ExecutionContextInterface","visibility":"Public","body":"@context"}},{"id":"copy_with(context_context=@context,message_message=@message,constraint_constraint=@constraint)-instance-method","html_id":"copy_with(context_context=@context,message_message=@message,constraint_constraint=@constraint)-instance-method","name":"copy_with","doc":null,"summary":null,"abstract":false,"args":[{"name":"_context","doc":null,"default_value":"@context","external_name":"context","restriction":""},{"name":"_message","doc":null,"default_value":"@message","external_name":"message","restriction":""},{"name":"_constraint","doc":null,"default_value":"@constraint","external_name":"constraint","restriction":""}],"args_string":"(context _context = @context, message _message = @message, constraint _constraint = @constraint)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec/constraint_validator_test_case.cr#L60","def":{"name":"copy_with","args":[{"name":"_context","doc":null,"default_value":"@context","external_name":"context","restriction":""},{"name":"_message","doc":null,"default_value":"@message","external_name":"message","restriction":""},{"name":"_constraint","doc":null,"default_value":"@constraint","external_name":"constraint","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(_context, _message, _constraint)"}},{"id":"invalid_value(value:_):self-instance-method","html_id":"invalid_value(value:_):self-instance-method","name":"invalid_value","doc":"Sets the `AVD::Violation::ConstraintViolationInterface#invalid_value` on the expected violation.\n\nReturns `self` for chaining.","summary":"<p>Sets the <code><a href=\"../../../../Athena/Validator/Violation/ConstraintViolationInterface.html#invalid_value-instance-method\">AVD::Violation::ConstraintViolationInterface#invalid_value</a></code> on the expected violation.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"args_string":"(value : _) : <span class=\"k\">self</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec/constraint_validator_test_case.cr#L87","def":{"name":"invalid_value","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"@invalid_value = AVD::ValueContainer.new(value)\nself\n"}},{"id":"message:String-instance-method","html_id":"message:String-instance-method","name":"message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@message"}},{"id":"plural(plural:Int32):self-instance-method","html_id":"plural(plural:Int32):self-instance-method","name":"plural","doc":"Sets the `AVD::Violation::ConstraintViolationInterface#plural` on the expected violation.\n\nReturns `self` for chaining.","summary":"<p>Sets the <code><a href=\"../../../../Athena/Validator/Violation/ConstraintViolationInterface.html#plural:Int32?-instance-method\">AVD::Violation::ConstraintViolationInterface#plural</a></code> on the expected violation.</p>","abstract":false,"args":[{"name":"plural","doc":null,"default_value":"","external_name":"plural","restriction":"Int32"}],"args_string":"(plural : Int32) : <span class=\"k\">self</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec/constraint_validator_test_case.cr#L96","def":{"name":"plural","args":[{"name":"plural","doc":null,"default_value":"","external_name":"plural","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"@plural = plural\nself\n"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Spec/EntityGroupSequenceProvider","path":"Athena/Validator/Spec/EntityGroupSequenceProvider.html","kind":"struct","full_name":"Athena::Validator::Spec::EntityGroupSequenceProvider","name":"EntityGroupSequenceProvider","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraints/GroupSequence/Provider","kind":"module","full_name":"Athena::Validator::Constraints::GroupSequence::Provider","name":"Provider"},{"html_id":"athena/Athena/Validator/Validatable","kind":"module","full_name":"Athena::Validator::Validatable","name":"Validatable"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/spec.cr","line_number":224,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L224"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Validator/Constraints/GroupSequence/Provider","kind":"module","full_name":"Athena::Validator::Constraints::GroupSequence::Provider","name":"Provider"},{"html_id":"athena/Athena/Validator/Validatable","kind":"module","full_name":"Athena::Validator::Validatable","name":"Validatable"}],"extended_modules":[{"html_id":"athena/Athena/Validator/Validatable/Class","kind":"module","full_name":"Athena::Validator::Validatable::Class","name":"Class"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Spec","kind":"module","full_name":"Athena::Validator::Spec","name":"Spec"},"doc":"An `AVD::Validatable` entity using an `AVD::Constraints::GroupSequence` based group sequence.","summary":"<p>An <code><a href=\"../../../Athena/Validator/Validatable.html\">AVD::Validatable</a></code> entity using an <code><a href=\"../../../Athena/Validator/Constraints/GroupSequence.html\">AVD::Constraints::GroupSequence</a></code> based group sequence.</p>","class_methods":[{"id":"validation_class_metadata-class-method","html_id":"validation_class_metadata-class-method","name":"validation_class_metadata","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"validation_class_metadata","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @@validation_class_metadata).nil?\n  @@validation_class_metadata = (AVD::Metadata::ClassMetadata(self).build)\nelse\n  value\nend"}}],"constructors":[{"id":"new(sequence:AVD::Constraints::GroupSequence)-class-method","html_id":"new(sequence:AVD::Constraints::GroupSequence)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"sequence","doc":null,"default_value":"","external_name":"sequence","restriction":"AVD::Constraints::GroupSequence"}],"args_string":"(sequence : AVD::Constraints::GroupSequence)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L224","def":{"name":"new","args":[{"name":"sequence","doc":null,"default_value":"","external_name":"sequence","restriction":"AVD::Constraints::GroupSequence"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(sequence)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L224","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@sequence.clone)"}},{"id":"copy_with(sequence_sequence=@sequence)-instance-method","html_id":"copy_with(sequence_sequence=@sequence)-instance-method","name":"copy_with","doc":null,"summary":null,"abstract":false,"args":[{"name":"_sequence","doc":null,"default_value":"@sequence","external_name":"sequence","restriction":""}],"args_string":"(sequence _sequence = @sequence)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L224","def":{"name":"copy_with","args":[{"name":"_sequence","doc":null,"default_value":"@sequence","external_name":"sequence","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(_sequence)"}},{"id":"group_sequence:Array(String|Array(String))|AVD::Constraints::GroupSequence-instance-method","html_id":"group_sequence:Array(String|Array(String))|AVD::Constraints::GroupSequence-instance-method","name":"group_sequence","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String | Array(String)) | AVD::Constraints::GroupSequence","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L227","def":{"name":"group_sequence","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String | Array(String)) | AVD::Constraints::GroupSequence","visibility":"Public","body":"@sequence || Array(String | Array(String)).new"}},{"id":"sequence:AVD::Constraints::GroupSequence-instance-method","html_id":"sequence:AVD::Constraints::GroupSequence-instance-method","name":"sequence","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : AVD::Constraints::GroupSequence","source_link":null,"def":{"name":"sequence","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Constraints::GroupSequence","visibility":"Public","body":"@sequence"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Spec/EntitySequenceProvider","path":"Athena/Validator/Spec/EntitySequenceProvider.html","kind":"struct","full_name":"Athena::Validator::Spec::EntitySequenceProvider","name":"EntitySequenceProvider","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraints/GroupSequence/Provider","kind":"module","full_name":"Athena::Validator::Constraints::GroupSequence::Provider","name":"Provider"},{"html_id":"athena/Athena/Validator/Validatable","kind":"module","full_name":"Athena::Validator::Validatable","name":"Validatable"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/spec.cr","line_number":214,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L214"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Validator/Constraints/GroupSequence/Provider","kind":"module","full_name":"Athena::Validator::Constraints::GroupSequence::Provider","name":"Provider"},{"html_id":"athena/Athena/Validator/Validatable","kind":"module","full_name":"Athena::Validator::Validatable","name":"Validatable"}],"extended_modules":[{"html_id":"athena/Athena/Validator/Validatable/Class","kind":"module","full_name":"Athena::Validator::Validatable::Class","name":"Class"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Spec","kind":"module","full_name":"Athena::Validator::Spec","name":"Spec"},"doc":"An `AVD::Validatable` entity using an `Array` based group sequence.","summary":"<p>An <code><a href=\"../../../Athena/Validator/Validatable.html\">AVD::Validatable</a></code> entity using an <code>Array</code> based group sequence.</p>","class_methods":[{"id":"validation_class_metadata-class-method","html_id":"validation_class_metadata-class-method","name":"validation_class_metadata","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"validation_class_metadata","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @@validation_class_metadata).nil?\n  @@validation_class_metadata = (AVD::Metadata::ClassMetadata(self).build)\nelse\n  value\nend"}}],"constructors":[{"id":"new(sequence:Array(String|Array(String)))-class-method","html_id":"new(sequence:Array(String|Array(String)))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"sequence","doc":null,"default_value":"","external_name":"sequence","restriction":"Array(String | Array(String))"}],"args_string":"(sequence : Array(String | Array(String)))","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L214","def":{"name":"new","args":[{"name":"sequence","doc":null,"default_value":"","external_name":"sequence","restriction":"Array(String | Array(String))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(sequence)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L214","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@sequence.clone)"}},{"id":"copy_with(sequence_sequence=@sequence)-instance-method","html_id":"copy_with(sequence_sequence=@sequence)-instance-method","name":"copy_with","doc":null,"summary":null,"abstract":false,"args":[{"name":"_sequence","doc":null,"default_value":"@sequence","external_name":"sequence","restriction":""}],"args_string":"(sequence _sequence = @sequence)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L214","def":{"name":"copy_with","args":[{"name":"_sequence","doc":null,"default_value":"@sequence","external_name":"sequence","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(_sequence)"}},{"id":"group_sequence:Array(String|Array(String))|AVD::Constraints::GroupSequence-instance-method","html_id":"group_sequence:Array(String|Array(String))|AVD::Constraints::GroupSequence-instance-method","name":"group_sequence","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String | Array(String)) | AVD::Constraints::GroupSequence","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L217","def":{"name":"group_sequence","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String | Array(String)) | AVD::Constraints::GroupSequence","visibility":"Public","body":"@sequence || (AVD::Constraints::GroupSequence.new([] of String))"}},{"id":"sequence:Array(String|Array(String))-instance-method","html_id":"sequence:Array(String|Array(String))-instance-method","name":"sequence","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String | Array(String))","source_link":null,"def":{"name":"sequence","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String | Array(String))","visibility":"Public","body":"@sequence"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Spec/FailingConstraint","path":"Athena/Validator/Spec/FailingConstraint.html","kind":"class","full_name":"Athena::Validator::Spec::FailingConstraint","name":"FailingConstraint","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},"ancestors":[{"html_id":"athena/Athena/Validator/Constraint","kind":"class","full_name":"Athena::Validator::Constraint","name":"Constraint"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/spec.cr","line_number":197,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L197"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Spec","kind":"module","full_name":"Athena::Validator::Spec","name":"Spec"},"doc":"A constraint that always adds a violation.","summary":"<p>A constraint that always adds a violation.</p>","class_methods":[],"constructors":[{"id":"new(message:String=&quot;Failed&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","html_id":"new(message:String=&quot;Failed&quot;,groups:Array(String)|String|Nil=nil,payload:Hash(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"Failed\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(message : String = <span class=\"s\">&quot;Failed&quot;</span>, groups : Array(String) | String | Nil = <span class=\"n\">nil</span>, payload : Hash(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L198","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"\"Failed\"","external_name":"message","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | Nil"},{"name":"payload","doc":null,"default_value":"nil","external_name":"payload","restriction":"Hash(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, groups, payload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"validated_by:AVD::ConstraintValidator.class-instance-method","html_id":"validated_by:AVD::ConstraintValidator.class-instance-method","name":"validated_by","doc":"Returns the `AVD::ConstraintValidator.class` that should handle validating `self`.","summary":"<p>Returns the <code>AVD::ConstraintValidator.class</code> that should handle validating <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">ConstraintValidator</span>.<span class=\"k\">class</span>","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L197","def":{"name":"validated_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::ConstraintValidator.class","visibility":"Public","body":"Validator"}}],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Spec/FailingConstraint/Validator","path":"Athena/Validator/Spec/FailingConstraint/Validator.html","kind":"struct","full_name":"Athena::Validator::Spec::FailingConstraint::Validator","name":"Validator","abstract":false,"superclass":{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},"ancestors":[{"html_id":"athena/Athena/Validator/ConstraintValidator","kind":"struct","full_name":"Athena::Validator::ConstraintValidator","name":"ConstraintValidator"},{"html_id":"athena/Athena/Validator/ConstraintValidatorInterface","kind":"module","full_name":"Athena::Validator::ConstraintValidatorInterface","name":"ConstraintValidatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/spec.cr","line_number":206,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L206"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Spec/FailingConstraint","kind":"class","full_name":"Athena::Validator::Spec::FailingConstraint","name":"FailingConstraint"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"validate(value:_,constraint:FailingConstraint):Nil-instance-method","html_id":"validate(value:_,constraint:FailingConstraint):Nil-instance-method","name":"validate","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"FailingConstraint"}],"args_string":"(value : _, constraint : FailingConstraint) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L207","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"FailingConstraint"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"self.context.add_violation(constraint.message)"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Spec/MockContextualValidator","path":"Athena/Validator/Spec/MockContextualValidator.html","kind":"class","full_name":"Athena::Validator::Spec::MockContextualValidator","name":"MockContextualValidator","abstract":false,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Athena/Validator/Validator/ContextualValidatorInterface","kind":"module","full_name":"Athena::Validator::Validator::ContextualValidatorInterface","name":"ContextualValidatorInterface"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/spec.cr","line_number":103,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L103"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Validator/Validator/ContextualValidatorInterface","kind":"module","full_name":"Athena::Validator::Validator::ContextualValidatorInterface","name":"ContextualValidatorInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Spec","kind":"module","full_name":"Athena::Validator::Spec","name":"Spec"},"doc":"A spec implementation of `AVD::Validator::ContextualValidatorInterface`.\n\nAllows settings the violations that should be returned.\nDefaults to no violations.","summary":"<p>A spec implementation of <code><a href=\"../../../Athena/Validator/Validator/ContextualValidatorInterface.html\">AVD::Validator::ContextualValidatorInterface</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(violations:AVD::Violation::ConstraintViolationListInterface=AVD::Violation::ConstraintViolationList.new)-class-method","html_id":"new(violations:AVD::Violation::ConstraintViolationListInterface=AVD::Violation::ConstraintViolationList.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"violations","doc":null,"default_value":"AVD::Violation::ConstraintViolationList.new","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationListInterface"}],"args_string":"(violations : AVD::Violation::ConstraintViolationListInterface = <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">Violation</span><span class=\"t\">::</span><span class=\"t\">ConstraintViolationList</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L108","def":{"name":"new","args":[{"name":"violations","doc":null,"default_value":"AVD::Violation::ConstraintViolationList.new","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationListInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(violations)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"at_path(path:String):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"at_path(path:String):AVD::Validator::ContextualValidatorInterface-instance-method","name":"at_path","doc":"Appends the provided *path* to the current `AVD::ExecutionContextInterface#property_path`.","summary":"<p>Appends the provided <em>path</em> to the current <code><a href=\"../../../Athena/Validator/ExecutionContextInterface.html#property_path:String-instance-method\">AVD::ExecutionContextInterface#property_path</a></code>.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"args_string":"(path : String) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L111","def":{"name":"at_path","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":"self"}},{"id":"validate(value:_,constraints:Array(AVD::Constraint)|AVD::Constraint|Nil=nil,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"validate(value:_,constraints:Array(AVD::Constraint)|AVD::Constraint|Nil=nil,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","name":"validate","doc":"Validates the provided *value*, optionally against the provided *constraints*, optionally using the provided *groups*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates the provided <em>value</em>, optionally against the provided <em>constraints</em>, optionally using the provided <em>groups</em>.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraints","doc":null,"default_value":"nil","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint | Nil"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(value : _, constraints : Array(AVD::Constraint) | AVD::Constraint | Nil = <span class=\"n\">nil</span>, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L116","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraints","doc":null,"default_value":"nil","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint | Nil"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":"self"}},{"id":"validate_property(object:AVD::Validatable,property_name:String,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"validate_property(object:AVD::Validatable,property_name:String,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","name":"validate_property","doc":"Validates a property of the provided *object* against the constraints defined for that property, optionally using the provided *groups*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates a property of the provided <em>object</em> against the constraints defined for that property, optionally using the provided <em>groups</em>.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(object : AVD::Validatable, property_name : String, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L121","def":{"name":"validate_property","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":"self"}},{"id":"validate_property_value(object:AVD::Validatable,property_name:String,value:_,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"validate_property_value(object:AVD::Validatable,property_name:String,value:_,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","name":"validate_property_value","doc":"Validates a value against the constraints defined on the property of the provided *object*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates a value against the constraints defined on the property of the provided <em>object</em>.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(object : AVD::Validatable, property_name : String, value : _, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L126","def":{"name":"validate_property_value","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":"self"}},{"id":"violations:AVD::Violation::ConstraintViolationListInterface-instance-method","html_id":"violations:AVD::Violation::ConstraintViolationListInterface-instance-method","name":"violations","doc":"Returns any violations that have been generated so far in the context of `self`.","summary":"<p>Returns any violations that have been generated so far in the context of <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : AVD::Violation::ConstraintViolationListInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L131","def":{"name":"violations","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationListInterface","visibility":"Public","body":"@violations"}},{"id":"violations=(violations:AVD::Violation::ConstraintViolationListInterface)-instance-method","html_id":"violations=(violations:AVD::Violation::ConstraintViolationListInterface)-instance-method","name":"violations=","doc":null,"summary":null,"abstract":false,"args":[{"name":"violations","doc":null,"default_value":"","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationListInterface"}],"args_string":"(violations : AVD::Violation::ConstraintViolationListInterface)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L106","def":{"name":"violations=","args":[{"name":"violations","doc":null,"default_value":"","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationListInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@violations = violations"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Spec/MockMetadataFactory","path":"Athena/Validator/Spec/MockMetadataFactory.html","kind":"struct","full_name":"Athena::Validator::Spec::MockMetadataFactory(T1, T2, T3, T4, T5)","name":"MockMetadataFactory","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Validator/Metadata/MetadataFactoryInterface","kind":"module","full_name":"Athena::Validator::Metadata::MetadataFactoryInterface","name":"MetadataFactoryInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/spec.cr","line_number":174,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L174"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Validator/Metadata/MetadataFactoryInterface","kind":"module","full_name":"Athena::Validator::Metadata::MetadataFactoryInterface","name":"MetadataFactoryInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Spec","kind":"module","full_name":"Athena::Validator::Spec","name":"Spec"},"doc":"A spec implementation of `AVD::Metadata::MetadataFactoryInterface`, supporting a fixed number of additional metadatas","summary":"<p>A spec implementation of <code><a href=\"../../../Athena/Validator/Metadata/MetadataFactoryInterface.html\">AVD::Metadata::MetadataFactoryInterface</a></code>, supporting a fixed number of additional metadatas</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L174","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"add_metadata(klass:AVD::Validatable::Class,metadata:AVD::Metadata::ClassMetadata):Nil-instance-method","html_id":"add_metadata(klass:AVD::Validatable::Class,metadata:AVD::Metadata::ClassMetadata):Nil-instance-method","name":"add_metadata","doc":null,"summary":null,"abstract":false,"args":[{"name":"klass","doc":null,"default_value":"","external_name":"klass","restriction":"AVD::Validatable::Class"},{"name":"metadata","doc":null,"default_value":"","external_name":"metadata","restriction":"AVD::Metadata::ClassMetadata"}],"args_string":"(klass : AVD::Validatable::Class, metadata : AVD::Metadata::ClassMetadata) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L191","def":{"name":"add_metadata","args":[{"name":"klass","doc":null,"default_value":"","external_name":"klass","restriction":"AVD::Validatable::Class"},{"name":"metadata","doc":null,"default_value":"","external_name":"metadata","restriction":"AVD::Metadata::ClassMetadata"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@metadatas[klass] = metadata"}},{"id":"metadata(object:AVD::Validatable):AVD::Metadata::ClassMetadata-instance-method","html_id":"metadata(object:AVD::Validatable):AVD::Metadata::ClassMetadata-instance-method","name":"metadata","doc":"Returns an `AVD::Metadata::ClassMetadata` instance for the related `AVD::Validatable` *object*.","summary":"<p>Returns an <code><a href=\"../../../Athena/Validator/Metadata/ClassMetadata.html\">AVD::Metadata::ClassMetadata</a></code> instance for the related <code><a href=\"../../../Athena/Validator/Validatable.html\">AVD::Validatable</a></code> <em>object</em>.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"}],"args_string":"(object : AVD::Validatable) : AVD::Metadata::ClassMetadata","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L183","def":{"name":"metadata","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Metadata::ClassMetadata","visibility":"Public","body":"if metadata = @metadatas[object.class]?\n  return metadata\nend\nobject.class.validation_class_metadata\n"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Spec/MockValidator","path":"Athena/Validator/Spec/MockValidator.html","kind":"class","full_name":"Athena::Validator::Spec::MockValidator","name":"MockValidator","abstract":false,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Athena/Validator/Validator/ValidatorInterface","kind":"module","full_name":"Athena::Validator::Validator::ValidatorInterface","name":"ValidatorInterface"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/spec.cr","line_number":140,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L140"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Validator/Validator/ValidatorInterface","kind":"module","full_name":"Athena::Validator::Validator::ValidatorInterface","name":"ValidatorInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Spec","kind":"module","full_name":"Athena::Validator::Spec","name":"Spec"},"doc":"A spec implementation of `AVD::Validator::ValidatorInterface`.\n\nAllows settings the violations that should be returned.\nDefaults to no violations.","summary":"<p>A spec implementation of <code><a href=\"../../../Athena/Validator/Validator/ValidatorInterface.html\">AVD::Validator::ValidatorInterface</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(violations:AVD::Violation::ConstraintViolationListInterface=AVD::Violation::ConstraintViolationList.new)-class-method","html_id":"new(violations:AVD::Violation::ConstraintViolationListInterface=AVD::Violation::ConstraintViolationList.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"violations","doc":null,"default_value":"AVD::Violation::ConstraintViolationList.new","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationListInterface"}],"args_string":"(violations : AVD::Violation::ConstraintViolationListInterface = <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">Violation</span><span class=\"t\">::</span><span class=\"t\">ConstraintViolationList</span>.<span class=\"k\">new</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L145","def":{"name":"new","args":[{"name":"violations","doc":null,"default_value":"AVD::Violation::ConstraintViolationList.new","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationListInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(violations)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"in_context(context:AVD::ExecutionContextInterface):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"in_context(context:AVD::ExecutionContextInterface):AVD::Validator::ContextualValidatorInterface-instance-method","name":"in_context","doc":"Returns a validator in the provided *context*.\n\nViolations generated by the returned validator are added to the provided *context*.","summary":"<p>Returns a validator in the provided <em>context</em>.</p>","abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"AVD::ExecutionContextInterface"}],"args_string":"(context : AVD::ExecutionContextInterface) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L168","def":{"name":"in_context","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"AVD::ExecutionContextInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":"MockContextualValidator.new(@violations)"}},{"id":"start_context(root=nil):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"start_context(root=nil):AVD::Validator::ContextualValidatorInterface-instance-method","name":"start_context","doc":"Creates a new `AVD::ExecutionContextInterface` and returns a new validator for that context.\n\nViolations generated by the returned validator can be accessed via `AVD::Validator::ContextualValidatorInterface#violations`.","summary":"<p>Creates a new <code><a href=\"../../../Athena/Validator/ExecutionContextInterface.html\">AVD::ExecutionContextInterface</a></code> and returns a new validator for that context.</p>","abstract":false,"args":[{"name":"root","doc":null,"default_value":"nil","external_name":"root","restriction":""}],"args_string":"(root = <span class=\"n\">nil</span>) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L163","def":{"name":"start_context","args":[{"name":"root","doc":null,"default_value":"nil","external_name":"root","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":"MockContextualValidator.new(@violations)"}},{"id":"validate(value:_,constraints:Array(AVD::Constraint)|AVD::Constraint|Nil=nil,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","html_id":"validate(value:_,constraints:Array(AVD::Constraint)|AVD::Constraint|Nil=nil,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","name":"validate","doc":"Validates the provided *value*, optionally against the provided *constraints*, optionally using the provided *groups*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates the provided <em>value</em>, optionally against the provided <em>constraints</em>, optionally using the provided <em>groups</em>.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraints","doc":null,"default_value":"nil","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint | Nil"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(value : _, constraints : Array(AVD::Constraint) | AVD::Constraint | Nil = <span class=\"n\">nil</span>, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Violation::ConstraintViolationListInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L148","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraints","doc":null,"default_value":"nil","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint | Nil"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationListInterface","visibility":"Public","body":"@violations"}},{"id":"validate_property(object:AVD::Validatable,property_name:String,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","html_id":"validate_property(object:AVD::Validatable,property_name:String,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","name":"validate_property","doc":"Validates a property of the provided *object* against the constraints defined for that property, optionally using the provided *groups*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates a property of the provided <em>object</em> against the constraints defined for that property, optionally using the provided <em>groups</em>.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(object : AVD::Validatable, property_name : String, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Violation::ConstraintViolationListInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L153","def":{"name":"validate_property","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationListInterface","visibility":"Public","body":"@violations"}},{"id":"validate_property_value(object:AVD::Validatable,property_name:String,value:_,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","html_id":"validate_property_value(object:AVD::Validatable,property_name:String,value:_,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","name":"validate_property_value","doc":"Validates a value against the constraints defined on the property of the provided *object*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates a value against the constraints defined on the property of the provided <em>object</em>.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(object : AVD::Validatable, property_name : String, value : _, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Violation::ConstraintViolationListInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L158","def":{"name":"validate_property_value","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationListInterface","visibility":"Public","body":"@violations"}},{"id":"violations=(violations:AVD::Violation::ConstraintViolationListInterface)-instance-method","html_id":"violations=(violations:AVD::Violation::ConstraintViolationListInterface)-instance-method","name":"violations=","doc":null,"summary":null,"abstract":false,"args":[{"name":"violations","doc":null,"default_value":"","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationListInterface"}],"args_string":"(violations : AVD::Violation::ConstraintViolationListInterface)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/spec.cr#L143","def":{"name":"violations=","args":[{"name":"violations","doc":null,"default_value":"","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationListInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@violations = violations"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Validatable","path":"Athena/Validator/Validatable.html","kind":"module","full_name":"Athena::Validator::Validatable","name":"Validatable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-validator/src/validatable.cr","line_number":17,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/validatable.cr#L17"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Validator/Spec/EntityGroupSequenceProvider","kind":"struct","full_name":"Athena::Validator::Spec::EntityGroupSequenceProvider","name":"EntityGroupSequenceProvider"},{"html_id":"athena/Athena/Validator/Spec/EntitySequenceProvider","kind":"struct","full_name":"Athena::Validator::Spec::EntitySequenceProvider","name":"EntitySequenceProvider"}],"namespace":{"html_id":"athena/Athena/Validator","kind":"module","full_name":"Athena::Validator","name":"Validator"},"doc":"When included, denotes that a type (class or struct) can be validated via `Athena::Validator`.\n\n### Example\n\n```\nclass Example\n  include AVD::Validatable\n\n  def initialize(@name : String); end\n\n  @[Assert::NotBlank]\n  property name : String\nend\n\nAVD.validator.validate Example.new(\"Jim\")\n```","summary":"<p>When included, denotes that a type (class or struct) can be validated via <code><a href=\"../../Athena/Validator.html\">Athena::Validator</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Validator","path":"Athena/Validator/Validator.html","kind":"module","full_name":"Athena::Validator::Validator","name":"Validator","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-validator/src/athena-validator.cr","line_number":409,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/athena-validator.cr#L409"},{"filename":"lib/athena-validator/src/validator/validator_interface.cr","line_number":1,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/validator/validator_interface.cr#L1"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator","kind":"module","full_name":"Athena::Validator","name":"Validator"},"doc":"Contains types related to the validator itself.","summary":"<p>Contains types related to the validator itself.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Validator/ContextualValidatorInterface","path":"Athena/Validator/Validator/ContextualValidatorInterface.html","kind":"module","full_name":"Athena::Validator::Validator::ContextualValidatorInterface","name":"ContextualValidatorInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-validator/src/validator/contextual_validator_interface.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/validator/contextual_validator_interface.cr#L2"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Validator/Spec/MockContextualValidator","kind":"class","full_name":"Athena::Validator::Spec::MockContextualValidator","name":"MockContextualValidator"},{"html_id":"athena/Athena/Validator/Validator/RecursiveContextualValidator","kind":"class","full_name":"Athena::Validator::Validator::RecursiveContextualValidator","name":"RecursiveContextualValidator"}],"namespace":{"html_id":"athena/Athena/Validator/Validator","kind":"module","full_name":"Athena::Validator::Validator","name":"Validator"},"doc":"A validator that validates in a specific `AVD::ExecutionContextInterface` instance.","summary":"<p>A validator that validates in a specific <code><a href=\"../../../Athena/Validator/ExecutionContextInterface.html\">AVD::ExecutionContextInterface</a></code> instance.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"at_path(path:String):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"at_path(path:String):AVD::Validator::ContextualValidatorInterface-instance-method","name":"at_path","doc":"Appends the provided *path* to the current `AVD::ExecutionContextInterface#property_path`.","summary":"<p>Appends the provided <em>path</em> to the current <code><a href=\"../../../Athena/Validator/ExecutionContextInterface.html#property_path:String-instance-method\">AVD::ExecutionContextInterface#property_path</a></code>.</p>","abstract":true,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"args_string":"(path : String) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/validator/contextual_validator_interface.cr#L4","def":{"name":"at_path","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":""}},{"id":"validate(value:_,constraints:Array(AVD::Constraint)|AVD::Constraint|Nil=nil,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"validate(value:_,constraints:Array(AVD::Constraint)|AVD::Constraint|Nil=nil,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","name":"validate","doc":"Validates the provided *value*, optionally against the provided *constraints*, optionally using the provided *groups*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates the provided <em>value</em>, optionally against the provided <em>constraints</em>, optionally using the provided <em>groups</em>.</p>","abstract":true,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraints","doc":null,"default_value":"nil","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint | Nil"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(value : _, constraints : Array(AVD::Constraint) | AVD::Constraint | Nil = <span class=\"n\">nil</span>, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/validator/contextual_validator_interface.cr#L8","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraints","doc":null,"default_value":"nil","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint | Nil"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":""}},{"id":"validate_property(object:AVD::Validatable,property_name:String,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"validate_property(object:AVD::Validatable,property_name:String,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","name":"validate_property","doc":"Validates a property of the provided *object* against the constraints defined for that property, optionally using the provided *groups*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates a property of the provided <em>object</em> against the constraints defined for that property, optionally using the provided <em>groups</em>.</p>","abstract":true,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(object : AVD::Validatable, property_name : String, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/validator/contextual_validator_interface.cr#L12","def":{"name":"validate_property","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":""}},{"id":"validate_property_value(object:AVD::Validatable,property_name:String,value:_,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"validate_property_value(object:AVD::Validatable,property_name:String,value:_,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","name":"validate_property_value","doc":"Validates a value against the constraints defined on the property of the provided *object*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates a value against the constraints defined on the property of the provided <em>object</em>.</p>","abstract":true,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(object : AVD::Validatable, property_name : String, value : _, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/validator/contextual_validator_interface.cr#L16","def":{"name":"validate_property_value","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":""}},{"id":"violations:AVD::Violation::ConstraintViolationListInterface-instance-method","html_id":"violations:AVD::Violation::ConstraintViolationListInterface-instance-method","name":"violations","doc":"Returns any violations that have been generated so far in the context of `self`.","summary":"<p>Returns any violations that have been generated so far in the context of <code>self</code>.</p>","abstract":true,"args":[],"args_string":" : AVD::Violation::ConstraintViolationListInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/validator/contextual_validator_interface.cr#L19","def":{"name":"violations","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationListInterface","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Validator/RecursiveContextualValidator","path":"Athena/Validator/Validator/RecursiveContextualValidator.html","kind":"class","full_name":"Athena::Validator::Validator::RecursiveContextualValidator","name":"RecursiveContextualValidator","abstract":false,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Athena/Validator/Validator/ContextualValidatorInterface","kind":"module","full_name":"Athena::Validator::Validator::ContextualValidatorInterface","name":"ContextualValidatorInterface"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/validator/recursive_contextual_validator.cr","line_number":4,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/validator/recursive_contextual_validator.cr#L4"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Validator/Validator/ContextualValidatorInterface","kind":"module","full_name":"Athena::Validator::Validator::ContextualValidatorInterface","name":"ContextualValidatorInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Validator","kind":"module","full_name":"Athena::Validator::Validator","name":"Validator"},"doc":"A recursive implementation of `AVD::Validator::ContextualValidatorInterface`.\n\nSee `Athena::Validator.validator`.","summary":"<p>A recursive implementation of <code><a href=\"../../../Athena/Validator/Validator/ContextualValidatorInterface.html\">AVD::Validator::ContextualValidatorInterface</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(context:AVD::ExecutionContextInterface,constraint_validator_factory:AVD::ConstraintValidatorFactoryInterface,metadata_factory:AVD::Metadata::MetadataFactoryInterface)-class-method","html_id":"new(context:AVD::ExecutionContextInterface,constraint_validator_factory:AVD::ConstraintValidatorFactoryInterface,metadata_factory:AVD::Metadata::MetadataFactoryInterface)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"AVD::ExecutionContextInterface"},{"name":"constraint_validator_factory","doc":null,"default_value":"","external_name":"constraint_validator_factory","restriction":"AVD::ConstraintValidatorFactoryInterface"},{"name":"metadata_factory","doc":null,"default_value":"","external_name":"metadata_factory","restriction":"AVD::Metadata::MetadataFactoryInterface"}],"args_string":"(context : AVD::ExecutionContextInterface, constraint_validator_factory : AVD::ConstraintValidatorFactoryInterface, metadata_factory : AVD::Metadata::MetadataFactoryInterface)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/validator/recursive_contextual_validator.cr#L12","def":{"name":"new","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"AVD::ExecutionContextInterface"},{"name":"constraint_validator_factory","doc":null,"default_value":"","external_name":"constraint_validator_factory","restriction":"AVD::ConstraintValidatorFactoryInterface"},{"name":"metadata_factory","doc":null,"default_value":"","external_name":"metadata_factory","restriction":"AVD::Metadata::MetadataFactoryInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(context, constraint_validator_factory, metadata_factory)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"at_path(path:String):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"at_path(path:String):AVD::Validator::ContextualValidatorInterface-instance-method","name":"at_path","doc":"Appends the provided *path* to the current `AVD::ExecutionContextInterface#property_path`.","summary":"<p>Appends the provided <em>path</em> to the current <code><a href=\"../../../Athena/Validator/ExecutionContextInterface.html#property_path:String-instance-method\">AVD::ExecutionContextInterface#property_path</a></code>.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"args_string":"(path : String) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/validator/recursive_contextual_validator.cr#L22","def":{"name":"at_path","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":"@default_property_path = @context.property_path(path)\nself\n"}},{"id":"validate(value:_,constraints:Array(AVD::Constraint)|AVD::Constraint|Nil=nil,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"validate(value:_,constraints:Array(AVD::Constraint)|AVD::Constraint|Nil=nil,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","name":"validate","doc":"Validates the provided *value*, optionally against the provided *constraints*, optionally using the provided *groups*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates the provided <em>value</em>, optionally against the provided <em>constraints</em>, optionally using the provided <em>groups</em>.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraints","doc":null,"default_value":"nil","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint | Nil"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(value : _, constraints : Array(AVD::Constraint) | AVD::Constraint | Nil = <span class=\"n\">nil</span>, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/validator/recursive_contextual_validator.cr#L29","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraints","doc":null,"default_value":"nil","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint | Nil"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":"groups = self.normalize_groups(groups)\nprevious_value = @context.value\nprevious_object = @context.object\nprevious_metadata = @context.metadata\nprevious_path = @context.property_path\nprevious_group = @context.group\nprevious_constraint = @context.is_a?(AVD::ExecutionContext) ? @context.constraint : nil\nif constraints.nil?\nelse\n  constraints = constraints.is_a?(Array) ? constraints : [constraints]\n  metadata = AVD::Metadata::Metadata.new\n  metadata.add_constraints(constraints)\n  self.validate_generic_node(value, previous_object, metadata, @default_property_path, groups, nil, @context)\n  @context.set_node(previous_value, previous_object, previous_metadata, previous_path)\n  @context.group = previous_group\n  if previous_constraint.nil?\n  else\n    @context.constraint = previous_constraint\n  end\n  return self\nend\ncase value\nwhen AVD::Validatable\n  self.validate_object(value, @default_property_path, groups, @context)\n  @context.set_node(previous_value, previous_object, previous_metadata, previous_path)\n  @context.group = previous_group\n  self\nwhen Iterable, Hash\n  self.validate_each_object_in(value, @default_property_path, groups, @context)\n  @context.set_node(previous_value, previous_object, previous_metadata, previous_path)\n  @context.group = previous_group\n  self\nelse\n  raise(ArgumentError.new(\"Could not validate values of type '#{value.class}' automatically.  Please provide a constraint.\"))\nend\n"}},{"id":"validate_property(object:AVD::Validatable,property_name:String,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"validate_property(object:AVD::Validatable,property_name:String,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","name":"validate_property","doc":"Validates a property of the provided *object* against the constraints defined for that property, optionally using the provided *groups*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates a property of the provided <em>object</em> against the constraints defined for that property, optionally using the provided <em>groups</em>.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(object : AVD::Validatable, property_name : String, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/validator/recursive_contextual_validator.cr#L97","def":{"name":"validate_property","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":"groups = self.normalize_groups(groups)\nclass_metadata = @metadata_factory.metadata(object)\nproperty_metadatas = class_metadata.property_metadata(property_name)\nproperty_path = AVD::PropertyPath.append(@default_property_path, property_name)\nprevious_value = @context.value\nprevious_object = @context.object\nprevious_metadata = @context.metadata\nprevious_path = @context.property_path\nprevious_group = @context.group\nproperty_metadatas.each do |property_metadata|\n  property_value = property_metadata.value(object)\n  self.validate_generic_node(property_value, object, property_metadata, property_path, groups, nil, @context)\nend\n@context.set_node(previous_value, previous_object, previous_metadata, previous_path)\n@context.group = previous_group\nself\n"}},{"id":"validate_property_value(object:AVD::Validatable,property_name:String,value:_,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"validate_property_value(object:AVD::Validatable,property_name:String,value:_,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Validator::ContextualValidatorInterface-instance-method","name":"validate_property_value","doc":"Validates a value against the constraints defined on the property of the provided *object*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates a value against the constraints defined on the property of the provided <em>object</em>.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(object : AVD::Validatable, property_name : String, value : _, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/validator/recursive_contextual_validator.cr#L132","def":{"name":"validate_property_value","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":"groups = self.normalize_groups(groups)\nclass_metadata = @metadata_factory.metadata(object)\nproperty_metadatas = class_metadata.property_metadata(property_name)\nproperty_path = AVD::PropertyPath.append(@default_property_path, property_name)\nprevious_value = @context.value\nprevious_object = @context.object\nprevious_metadata = @context.metadata\nprevious_path = @context.property_path\nprevious_group = @context.group\nproperty_metadatas.each do |property_metadata|\n  self.validate_generic_node(value, object, property_metadata, property_path, groups, nil, @context)\nend\n@context.set_node(previous_value, previous_object, previous_metadata, previous_path)\n@context.group = previous_group\nself\n"}},{"id":"violations:AVD::Violation::ConstraintViolationListInterface-instance-method","html_id":"violations:AVD::Violation::ConstraintViolationListInterface-instance-method","name":"violations","doc":"Returns any violations that have been generated so far in the context of `self`.","summary":"<p>Returns any violations that have been generated so far in the context of <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : AVD::Violation::ConstraintViolationListInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/validator/recursive_contextual_validator.cr#L165","def":{"name":"violations","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationListInterface","visibility":"Public","body":"@context.violations"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Validator/RecursiveValidator","path":"Athena/Validator/Validator/RecursiveValidator.html","kind":"class","full_name":"Athena::Validator::Validator::RecursiveValidator","name":"RecursiveValidator","abstract":false,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Athena/Validator/Validator/ValidatorInterface","kind":"module","full_name":"Athena::Validator::Validator::ValidatorInterface","name":"ValidatorInterface"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/validator/recursive_validator.cr","line_number":6,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/validator/recursive_validator.cr#L6"},{"filename":"src/ext/validator.cr","line_number":6,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/src/ext/validator.cr#L6"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Validator/Validator/ValidatorInterface","kind":"module","full_name":"Athena::Validator::Validator::ValidatorInterface","name":"ValidatorInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Validator","kind":"module","full_name":"Athena::Validator::Validator","name":"Validator"},"doc":"A recursive implementation of `AVD::Validator::ValidatorInterface`.\n\nSee `Athena::Validator.validator`.","summary":"<p>A recursive implementation of <code><a href=\"../../../Athena/Validator/Validator/ValidatorInterface.html\">AVD::Validator::ValidatorInterface</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(validator_factory:AVD::ConstraintValidatorFactoryInterface?=nil,metadata_factory:AVD::Metadata::MetadataFactoryInterface?=nil)-class-method","html_id":"new(validator_factory:AVD::ConstraintValidatorFactoryInterface?=nil,metadata_factory:AVD::Metadata::MetadataFactoryInterface?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"validator_factory","doc":null,"default_value":"nil","external_name":"validator_factory","restriction":"AVD::ConstraintValidatorFactoryInterface | ::Nil"},{"name":"metadata_factory","doc":null,"default_value":"nil","external_name":"metadata_factory","restriction":"AVD::Metadata::MetadataFactoryInterface | ::Nil"}],"args_string":"(validator_factory : AVD::ConstraintValidatorFactoryInterface? = <span class=\"n\">nil</span>, metadata_factory : AVD::Metadata::MetadataFactoryInterface? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/validator/recursive_validator.cr#L12","def":{"name":"new","args":[{"name":"validator_factory","doc":null,"default_value":"nil","external_name":"validator_factory","restriction":"AVD::ConstraintValidatorFactoryInterface | ::Nil"},{"name":"metadata_factory","doc":null,"default_value":"nil","external_name":"metadata_factory","restriction":"AVD::Metadata::MetadataFactoryInterface | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(validator_factory, metadata_factory)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"in_context(context:AVD::ExecutionContextInterface):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"in_context(context:AVD::ExecutionContextInterface):AVD::Validator::ContextualValidatorInterface-instance-method","name":"in_context","doc":"Returns a validator in the provided *context*.\n\nViolations generated by the returned validator are added to the provided *context*.","summary":"<p>Returns a validator in the provided <em>context</em>.</p>","abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"AVD::ExecutionContextInterface"}],"args_string":"(context : AVD::ExecutionContextInterface) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/validator/recursive_validator.cr#L38","def":{"name":"in_context","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"AVD::ExecutionContextInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":"AVD::Validator::RecursiveContextualValidator.new(context, @validator_factory, @metadata_factory)"}},{"id":"start_context(root=nil):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"start_context(root=nil):AVD::Validator::ContextualValidatorInterface-instance-method","name":"start_context","doc":"Creates a new `AVD::ExecutionContextInterface` and returns a new validator for that context.\n\nViolations generated by the returned validator can be accessed via `AVD::Validator::ContextualValidatorInterface#violations`.","summary":"<p>Creates a new <code><a href=\"../../../Athena/Validator/ExecutionContextInterface.html\">AVD::ExecutionContextInterface</a></code> and returns a new validator for that context.</p>","abstract":false,"args":[{"name":"root","doc":null,"default_value":"nil","external_name":"root","restriction":""}],"args_string":"(root = <span class=\"n\">nil</span>) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/validator/recursive_validator.cr#L33","def":{"name":"start_context","args":[{"name":"root","doc":null,"default_value":"nil","external_name":"root","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":"AVD::Validator::RecursiveContextualValidator.new(create_context(root), @validator_factory, @metadata_factory)"}},{"id":"validate(value:_,constraints:Array(AVD::Constraint)|AVD::Constraint|Nil=nil,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","html_id":"validate(value:_,constraints:Array(AVD::Constraint)|AVD::Constraint|Nil=nil,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","name":"validate","doc":"Validates the provided *value*, optionally against the provided *constraints*, optionally using the provided *groups*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates the provided <em>value</em>, optionally against the provided <em>constraints</em>, optionally using the provided <em>groups</em>.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraints","doc":null,"default_value":"nil","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint | Nil"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(value : _, constraints : Array(AVD::Constraint) | AVD::Constraint | Nil = <span class=\"n\">nil</span>, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Violation::ConstraintViolationListInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/validator/recursive_validator.cr#L18","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraints","doc":null,"default_value":"nil","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint | Nil"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationListInterface","visibility":"Public","body":"((start_context(value)).validate(value, constraints, groups)).violations"}},{"id":"validate_property(object:AVD::Validatable,property_name:String,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","html_id":"validate_property(object:AVD::Validatable,property_name:String,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","name":"validate_property","doc":"Validates a property of the provided *object* against the constraints defined for that property, optionally using the provided *groups*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates a property of the provided <em>object</em> against the constraints defined for that property, optionally using the provided <em>groups</em>.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(object : AVD::Validatable, property_name : String, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Violation::ConstraintViolationListInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/validator/recursive_validator.cr#L23","def":{"name":"validate_property","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationListInterface","visibility":"Public","body":"((start_context(object)).validate_property(object, property_name, groups)).violations"}},{"id":"validate_property_value(object:AVD::Validatable,property_name:String,value:_,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","html_id":"validate_property_value(object:AVD::Validatable,property_name:String,value:_,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","name":"validate_property_value","doc":"Validates a value against the constraints defined on the property of the provided *object*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates a value against the constraints defined on the property of the provided <em>object</em>.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(object : AVD::Validatable, property_name : String, value : _, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Violation::ConstraintViolationListInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/validator/recursive_validator.cr#L28","def":{"name":"validate_property_value","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationListInterface","visibility":"Public","body":"((start_context(object)).validate_property_value(object, property_name, value, groups)).violations"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Validator/ValidatorInterface","path":"Athena/Validator/Validator/ValidatorInterface.html","kind":"module","full_name":"Athena::Validator::Validator::ValidatorInterface","name":"ValidatorInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-validator/src/validator/validator_interface.cr","line_number":1,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/validator/validator_interface.cr#L1"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Validator/Spec/MockValidator","kind":"class","full_name":"Athena::Validator::Spec::MockValidator","name":"MockValidator"},{"html_id":"athena/Athena/Validator/Validator/RecursiveValidator","kind":"class","full_name":"Athena::Validator::Validator::RecursiveValidator","name":"RecursiveValidator"}],"namespace":{"html_id":"athena/Athena/Validator/Validator","kind":"module","full_name":"Athena::Validator::Validator","name":"Validator"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"in_context(context:AVD::ExecutionContextInterface):AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"in_context(context:AVD::ExecutionContextInterface):AVD::Validator::ContextualValidatorInterface-instance-method","name":"in_context","doc":"Returns a validator in the provided *context*.\n\nViolations generated by the returned validator are added to the provided *context*.","summary":"<p>Returns a validator in the provided <em>context</em>.</p>","abstract":true,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"AVD::ExecutionContextInterface"}],"args_string":"(context : AVD::ExecutionContextInterface) : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/validator/validator_interface.cr#L22","def":{"name":"in_context","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"AVD::ExecutionContextInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":""}},{"id":"start_context:AVD::Validator::ContextualValidatorInterface-instance-method","html_id":"start_context:AVD::Validator::ContextualValidatorInterface-instance-method","name":"start_context","doc":"Creates a new `AVD::ExecutionContextInterface` and returns a new validator for that context.\n\nViolations generated by the returned validator can be accessed via `AVD::Validator::ContextualValidatorInterface#violations`.","summary":"<p>Creates a new <code><a href=\"../../../Athena/Validator/ExecutionContextInterface.html\">AVD::ExecutionContextInterface</a></code> and returns a new validator for that context.</p>","abstract":true,"args":[],"args_string":" : AVD::Validator::ContextualValidatorInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/validator/validator_interface.cr#L17","def":{"name":"start_context","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Validator::ContextualValidatorInterface","visibility":"Public","body":""}},{"id":"validate(value:_,constraints:Array(AVD::Constraint)|AVD::Constraint|Nil=nil,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","html_id":"validate(value:_,constraints:Array(AVD::Constraint)|AVD::Constraint|Nil=nil,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","name":"validate","doc":"Validates the provided *value*, optionally against the provided *constraints*, optionally using the provided *groups*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates the provided <em>value</em>, optionally against the provided <em>constraints</em>, optionally using the provided <em>groups</em>.</p>","abstract":true,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraints","doc":null,"default_value":"nil","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint | Nil"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(value : _, constraints : Array(AVD::Constraint) | AVD::Constraint | Nil = <span class=\"n\">nil</span>, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Violation::ConstraintViolationListInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/validator/validator_interface.cr#L4","def":{"name":"validate","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"constraints","doc":null,"default_value":"nil","external_name":"constraints","restriction":"Array(AVD::Constraint) | AVD::Constraint | Nil"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationListInterface","visibility":"Public","body":""}},{"id":"validate_property(object:AVD::Validatable,property_name:String,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","html_id":"validate_property(object:AVD::Validatable,property_name:String,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","name":"validate_property","doc":"Validates a property of the provided *object* against the constraints defined for that property, optionally using the provided *groups*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates a property of the provided <em>object</em> against the constraints defined for that property, optionally using the provided <em>groups</em>.</p>","abstract":true,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(object : AVD::Validatable, property_name : String, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Violation::ConstraintViolationListInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/validator/validator_interface.cr#L8","def":{"name":"validate_property","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationListInterface","visibility":"Public","body":""}},{"id":"validate_property_value(object:AVD::Validatable,property_name:String,value:_,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","html_id":"validate_property_value(object:AVD::Validatable,property_name:String,value:_,groups:Array(String)|String|AVD::Constraints::GroupSequence|Nil=nil):AVD::Violation::ConstraintViolationListInterface-instance-method","name":"validate_property_value","doc":"Validates a value against the constraints defined on the property of the provided *object*.\n`AVD::Constraint::DEFAULT_GROUP` is assumed if no *groups* are provided.","summary":"<p>Validates a value against the constraints defined on the property of the provided <em>object</em>.</p>","abstract":true,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"args_string":"(object : AVD::Validatable, property_name : String, value : _, groups : Array(String) | String | AVD::Constraints::GroupSequence | Nil = <span class=\"n\">nil</span>) : AVD::Violation::ConstraintViolationListInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/validator/validator_interface.cr#L12","def":{"name":"validate_property_value","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"AVD::Validatable"},{"name":"property_name","doc":null,"default_value":"","external_name":"property_name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"groups","doc":null,"default_value":"nil","external_name":"groups","restriction":"Array(String) | String | AVD::Constraints::GroupSequence | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationListInterface","visibility":"Public","body":""}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Validator/Violation","path":"Athena/Validator/Violation.html","kind":"module","full_name":"Athena::Validator::Violation","name":"Violation","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-validator/src/athena-validator.cr","line_number":412,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/athena-validator.cr#L412"},{"filename":"lib/athena-validator/src/violation/constraint_violation_interface.cr","line_number":6,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_interface.cr#L6"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator","kind":"module","full_name":"Athena::Validator","name":"Validator"},"doc":"Contains types related to constraint violations.","summary":"<p>Contains types related to constraint violations.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Validator/Violation/ConstraintViolation","path":"Athena/Validator/Violation/ConstraintViolation.html","kind":"struct","full_name":"Athena::Validator::Violation::ConstraintViolation(Root)","name":"ConstraintViolation","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Validator/Violation/ConstraintViolationInterface","kind":"module","full_name":"Athena::Validator::Violation::ConstraintViolationInterface","name":"ConstraintViolationInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/violation/constraint_violation.cr","line_number":4,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation.cr#L4"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Validator/Violation/ConstraintViolationInterface","kind":"module","full_name":"Athena::Validator::Violation::ConstraintViolationInterface","name":"ConstraintViolationInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Violation","kind":"module","full_name":"Athena::Validator::Violation","name":"Violation"},"doc":"Basic implementation of `AVD::Violation::ConstraintViolationInterface`.","summary":"<p>Basic implementation of <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html\">AVD::Violation::ConstraintViolationInterface</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(message:String,message_template:String?,parameters:Hash(String,String),root:Root,property_path:String,invalid_value_container:AVD::Container,plural:Int32?=nil,code:String?=nil,constraint:AVD::Constraint?=nil,cause:String?=nil)-class-method","html_id":"new(message:String,message_template:String?,parameters:Hash(String,String),root:Root,property_path:String,invalid_value_container:AVD::Container,plural:Int32?=nil,code:String?=nil,constraint:AVD::Constraint?=nil,cause:String?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"message_template","doc":null,"default_value":"","external_name":"message_template","restriction":"String | ::Nil"},{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":"Hash(String, String)"},{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"Root"},{"name":"property_path","doc":null,"default_value":"","external_name":"property_path","restriction":"String"},{"name":"invalid_value_container","doc":null,"default_value":"","external_name":"invalid_value_container","restriction":"AVD::Container"},{"name":"plural","doc":null,"default_value":"nil","external_name":"plural","restriction":"Int32 | ::Nil"},{"name":"code","doc":null,"default_value":"nil","external_name":"code","restriction":"String | ::Nil"},{"name":"constraint","doc":null,"default_value":"nil","external_name":"constraint","restriction":"AVD::Constraint | ::Nil"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"String | ::Nil"}],"args_string":"(message : String, message_template : String?, parameters : Hash(String, String), root : Root, property_path : String, invalid_value_container : AVD::Container, plural : Int32? = <span class=\"n\">nil</span>, code : String? = <span class=\"n\">nil</span>, constraint : AVD::Constraint? = <span class=\"n\">nil</span>, cause : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation.cr#L36","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"message_template","doc":null,"default_value":"","external_name":"message_template","restriction":"String | ::Nil"},{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":"Hash(String, String)"},{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"Root"},{"name":"property_path","doc":null,"default_value":"","external_name":"property_path","restriction":"String"},{"name":"invalid_value_container","doc":null,"default_value":"","external_name":"invalid_value_container","restriction":"AVD::Container"},{"name":"plural","doc":null,"default_value":"nil","external_name":"plural","restriction":"Int32 | ::Nil"},{"name":"code","doc":null,"default_value":"nil","external_name":"code","restriction":"String | ::Nil"},{"name":"constraint","doc":null,"default_value":"nil","external_name":"constraint","restriction":"AVD::Constraint | ::Nil"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = ConstraintViolation(Root).allocate\n_.initialize(message, message_template, parameters, root, property_path, invalid_value_container, plural, code, constraint, cause)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"==(other:self):Bool-instance-method","html_id":"==(other:self):Bool-instance-method","name":"==","doc":"Returns `true` if *other* is the same as `self`, otherwise `false`.","summary":"<p>Returns <code>true</code> if <em>other</em> is the same as <code>self</code>, otherwise <code>false</code>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : <span class=\"k\">self</span>) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation.cr#L86","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(((((((((@message == other.message) && (@message_template == other.message_template)) && (@parameters == other.parameters)) && (@root == other.root)) && (@property_path == other.property_path)) && (@invalid_value_container == other.invalid_value_container)) && (@plural == other.plural)) && (@code == other.code)) && (@constraint == other.constraint?)) && (@cause == other.cause)"}},{"id":"cause:String?-instance-method","html_id":"cause:String?-instance-method","name":"cause","doc":"Returns the cause of the violation.","summary":"<p>Returns the cause of the violation.</p>","abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation.cr#L10","def":{"name":"cause","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@cause"}},{"id":"code:String?-instance-method","html_id":"code:String?-instance-method","name":"code","doc":"Returns a unique machine readable error code representing `self.`\nAll constraints of a specific \"type\" should have the same code.","summary":"<p>Returns a unique machine readable error code representing <code>self.</code> All constraints of a specific \"type\" should have the same code.</p>","abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation.cr#L13","def":{"name":"code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@code"}},{"id":"constraint:AVD::Constraint-instance-method","html_id":"constraint:AVD::Constraint-instance-method","name":"constraint","doc":"Returns the `AVD::Constraint` whose validation caused the violation, if any.","summary":"<p>Returns the <code><a href=\"../../../Athena/Validator/Constraint.html\">AVD::Constraint</a></code> whose validation caused the violation, if any.</p>","abstract":false,"args":[],"args_string":" : AVD::Constraint","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation.cr#L16","def":{"name":"constraint","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Constraint","visibility":"Public","body":"if (value = @constraint).nil?\n  ::raise(NilAssertionError.new(\"Athena::Validator::Violation::ConstraintViolation(Root)#constraint cannot be nil\"))\nelse\n  value\nend"}},{"id":"constraint?:AVD::Constraint?-instance-method","html_id":"constraint?:AVD::Constraint?-instance-method","name":"constraint?","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[],"args_string":" : AVD::Constraint?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation.cr#L16","def":{"name":"constraint?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Constraint | ::Nil","visibility":"Public","body":"@constraint"}},{"id":"invalid_value-instance-method","html_id":"invalid_value-instance-method","name":"invalid_value","doc":"Returns the value that caused the violation.","summary":"<p>Returns the value that caused the violation.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation.cr#L51","def":{"name":"invalid_value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@invalid_value_container.value"}},{"id":"message:String-instance-method","html_id":"message:String-instance-method","name":"message","doc":"Returns the violation message.","summary":"<p>Returns the violation message.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation.cr#L19","def":{"name":"message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@message"}},{"id":"message_template:String?-instance-method","html_id":"message_template:String?-instance-method","name":"message_template","doc":"Returns the raw violation message.\n\nThe message template contains placeholders for the parameters returned via `#parameters`.","summary":"<p>Returns the raw violation message.</p>","abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation.cr#L22","def":{"name":"message_template","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@message_template"}},{"id":"parameters:Hash(String,String)-instance-method","html_id":"parameters:Hash(String,String)-instance-method","name":"parameters","doc":"Returns the parameters used to render the `#message_template`.","summary":"<p>Returns the parameters used to render the <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolation.html#message_template:String?-instance-method\">#message_template</a></code>.</p>","abstract":false,"args":[],"args_string":" : Hash(String, String)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation.cr#L25","def":{"name":"parameters","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String)","visibility":"Public","body":"@parameters"}},{"id":"plural:Int32?-instance-method","html_id":"plural:Int32?-instance-method","name":"plural","doc":"Returns a number used to pluralize the violation message.\n\nThe returned value is used to determine the right plurlaization form.","summary":"<p>Returns a number used to pluralize the violation message.</p>","abstract":false,"args":[],"args_string":" : Int32?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation.cr#L28","def":{"name":"plural","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32 | ::Nil","visibility":"Public","body":"@plural"}},{"id":"property_path:String-instance-method","html_id":"property_path:String-instance-method","name":"property_path","doc":"Returns the path from the root element to the violation.","summary":"<p>Returns the path from the root element to the violation.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation.cr#L31","def":{"name":"property_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@property_path"}},{"id":"root:Root-instance-method","html_id":"root:Root-instance-method","name":"root","doc":"Returns the element originally passed to the validator.","summary":"<p>Returns the element originally passed to the validator.</p>","abstract":false,"args":[],"args_string":" : Root","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation.cr#L34","def":{"name":"root","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Root","visibility":"Public","body":"@root"}},{"id":"to_json(builder:JSON::Builder):Nil-instance-method","html_id":"to_json(builder:JSON::Builder):Nil-instance-method","name":"to_json","doc":"Returns a `JSON` representation of `self`.","summary":"<p>Returns a <code>JSON</code> representation of <code>self</code>.</p>","abstract":false,"args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"JSON::Builder"}],"args_string":"(builder : JSON::Builder) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation.cr#L56","def":{"name":"to_json","args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"builder.object do\n  builder.field(\"property\", @property_path)\n  builder.field(\"message\", @message)\n  if (  code = @code)\n    builder.field(\"code\", code)\n  end\nend"}},{"id":"to_s(io:IO):Nil-instance-method","html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Returns a string representation of `self`.","summary":"<p>Returns a string representation of <code>self</code>.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation.cr#L68","def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"klass = case @root\nwhen Hash\n  \"Hash\"\nwhen AVD::Validatable\n  \"Object(#{@root.class})\"\nelse\n  @root.to_s\nend\nif ((!@property_path.blank?) && (!(@property_path.starts_with?('[')))) && (!klass.blank?)\n  klass = klass + '.'\nend\nif (c = code) && (!c.blank?)\n  code = \" (code: #{c})\"\nend\nio.puts(\"#{klass}#{@property_path}:\\n\\t#{@message}#{code}\")\n"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Violation/ConstraintViolationBuilder","path":"Athena/Validator/Violation/ConstraintViolationBuilder.html","kind":"class","full_name":"Athena::Validator::Violation::ConstraintViolationBuilder(Root)","name":"ConstraintViolationBuilder","abstract":false,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Athena/Validator/Violation/ConstraintViolationBuilderInterface","kind":"module","full_name":"Athena::Validator::Violation::ConstraintViolationBuilderInterface","name":"ConstraintViolationBuilderInterface"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/violation/constraint_violation_builder.cr","line_number":4,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_builder.cr#L4"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Validator/Violation/ConstraintViolationBuilderInterface","kind":"module","full_name":"Athena::Validator::Violation::ConstraintViolationBuilderInterface","name":"ConstraintViolationBuilderInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Violation","kind":"module","full_name":"Athena::Validator::Violation","name":"Violation"},"doc":"Basic implementation of `AVD::Violation::ConstraintViolationBuilderInterface`.","summary":"<p>Basic implementation of <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationBuilderInterface.html\">AVD::Violation::ConstraintViolationBuilderInterface</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(violations:AVD::Violation::ConstraintViolationListInterface,constraint:AVD::Constraint?,message:String,parameters:Hash(String,String),root:Root,property_path:String,invalid_value:AVD::Container)-class-method","html_id":"new(violations:AVD::Violation::ConstraintViolationListInterface,constraint:AVD::Constraint?,message:String,parameters:Hash(String,String),root:Root,property_path:String,invalid_value:AVD::Container)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"violations","doc":null,"default_value":"","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationListInterface"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint | ::Nil"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":"Hash(String, String)"},{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"Root"},{"name":"property_path","doc":null,"default_value":"","external_name":"property_path","restriction":"String"},{"name":"invalid_value","doc":null,"default_value":"","external_name":"invalid_value","restriction":"AVD::Container"}],"args_string":"(violations : AVD::Violation::ConstraintViolationListInterface, constraint : AVD::Constraint?, message : String, parameters : Hash(String, String), root : Root, property_path : String, invalid_value : AVD::Container)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_builder.cr#L10","def":{"name":"new","args":[{"name":"violations","doc":null,"default_value":"","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationListInterface"},{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint | ::Nil"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":"Hash(String, String)"},{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"Root"},{"name":"property_path","doc":null,"default_value":"","external_name":"property_path","restriction":"String"},{"name":"invalid_value","doc":null,"default_value":"","external_name":"invalid_value","restriction":"AVD::Container"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = ConstraintViolationBuilder(Root).allocate\n_.initialize(violations, constraint, message, parameters, root, property_path, invalid_value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add:Nil-instance-method","html_id":"add:Nil-instance-method","name":"add","doc":"Adds the violation to the current `AVD::ExecutionContextInterface`.","summary":"<p>Adds the violation to the current <code><a href=\"../../../Athena/Validator/ExecutionContextInterface.html\">AVD::ExecutionContextInterface</a></code>.</p>","abstract":false,"args":[],"args_string":" : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_builder.cr#L22","def":{"name":"add","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"translated_message = if (!(count = @plural).nil?) && (@message.includes?('|'))\n  parts = @message.split('|')\n  count == 1 ? parts.first : parts[1]\nelse\n  @message\nend\nrendered_message = translated_message.gsub(/(?:{{ \\w+ }})+/, @parameters)\n@violations.add(AVD::Violation::ConstraintViolation(Root).new(rendered_message, @message, @parameters, @root, @property_path, @invalid_value, @plural, @code, @constraint, @cause))\n"}},{"id":"add_parameter(key:String,value:_):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"add_parameter(key:String,value:_):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"add_parameter","doc":"Adds a parameter with the provided *key* and *value* to the violations' `AVD::Violation::ConstraintViolationInterface#parameters`.\nThe provided *value* is stringified via `#to_s` before being added to the parameters.\n\nReturns `self` for chaining.","summary":"<p>Adds a parameter with the provided <em>key</em> and <em>value</em> to the violations' <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#parameters:Hash(String,String)-instance-method\">AVD::Violation::ConstraintViolationInterface#parameters</a></code>.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"args_string":"(key : String, value : _) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_builder.cr#L49","def":{"name":"add_parameter","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":"@parameters[key] = value.to_s\nself\n"}},{"id":"at_path(path:String):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"at_path(path:String):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"at_path","doc":"Sets the `AVD::Violation::ConstraintViolationInterface#property_path`.\n\nReturns `self` for chaining.","summary":"<p>Sets the <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#property_path:String-instance-method\">AVD::Violation::ConstraintViolationInterface#property_path</a></code>.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"args_string":"(path : String) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_builder.cr#L56","def":{"name":"at_path","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":"@property_path = AVD::PropertyPath.append(@property_path, path)\nself\n"}},{"id":"cause(cause:String?):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"cause(cause:String?):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"cause","doc":"Sets the `AVD::Violation::ConstraintViolationInterface#cause`\n\nReturns `self` for chaining.","summary":"<p>Sets the <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#cause:String?-instance-method\">AVD::Violation::ConstraintViolationInterface#cause</a></code></p>","abstract":false,"args":[{"name":"cause","doc":null,"default_value":"","external_name":"cause","restriction":"String | ::Nil"}],"args_string":"(cause : String?) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_builder.cr#L63","def":{"name":"cause","args":[{"name":"cause","doc":null,"default_value":"","external_name":"cause","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":"@cause = cause\nself\n"}},{"id":"code(code:String?):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"code(code:String?):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"code","doc":"Sets the `AVD::Violation::ConstraintViolationInterface#code`\n\nReturns `self` for chaining.","summary":"<p>Sets the <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#code:String?-instance-method\">AVD::Violation::ConstraintViolationInterface#code</a></code></p>","abstract":false,"args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String | ::Nil"}],"args_string":"(code : String?) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_builder.cr#L68","def":{"name":"code","args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":"@code = code\nself\n"}},{"id":"constraint(constraint:AVD::Constraint?):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"constraint(constraint:AVD::Constraint?):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"constraint","doc":"Sets the `AVD::Violation::ConstraintViolationInterface#constraint`\n\nReturns `self` for chaining.","summary":"<p>Sets the <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#constraint:AVD::Constraint?-instance-method\">AVD::Violation::ConstraintViolationInterface#constraint</a></code></p>","abstract":false,"args":[{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint | ::Nil"}],"args_string":"(constraint : AVD::Constraint?) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_builder.cr#L73","def":{"name":"constraint","args":[{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":"@constraint = constraint\nself\n"}},{"id":"invalid_value(value:_):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"invalid_value(value:_):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"invalid_value","doc":"Sets the `AVD::Violation::ConstraintViolationInterface#invalid_value`\n\nReturns `self` for chaining.","summary":"<p>Sets the <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#invalid_value-instance-method\">AVD::Violation::ConstraintViolationInterface#invalid_value</a></code></p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"args_string":"(value : _) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_builder.cr#L78","def":{"name":"invalid_value","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":"@invalid_value = AVD::ValueContainer.new(value)\nself\n"}},{"id":"plural(plural:Int32):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"plural(plural:Int32):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"plural","doc":"Sets `AVD::Violation::ConstraintViolationInterface#plural`\n\nReturns `self` for chaining.","summary":"<p>Sets <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#plural:Int32?-instance-method\">AVD::Violation::ConstraintViolationInterface#plural</a></code></p>","abstract":false,"args":[{"name":"plural","doc":null,"default_value":"","external_name":"plural","restriction":"Int32"}],"args_string":"(plural : Int32) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_builder.cr#L85","def":{"name":"plural","args":[{"name":"plural","doc":null,"default_value":"","external_name":"plural","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":"@plural = plural\nself\n"}},{"id":"set_parameters(parameters:Hash(String,String)):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"set_parameters(parameters:Hash(String,String)):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"set_parameters","doc":"Overrides the entire `AVD::Violation::ConstraintViolationInterface#parameters` hash with the provided *parameters*.\n\nReturns `self` for chaining.","summary":"<p>Overrides the entire <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#parameters:Hash(String,String)-instance-method\">AVD::Violation::ConstraintViolationInterface#parameters</a></code> hash with the provided <em>parameters</em>.</p>","abstract":false,"args":[{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":"Hash(String, String)"}],"args_string":"(parameters : Hash(String, String)) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_builder.cr#L90","def":{"name":"set_parameters","args":[{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":"@parameters = parameters\nself\n"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Violation/ConstraintViolationBuilderInterface","path":"Athena/Validator/Violation/ConstraintViolationBuilderInterface.html","kind":"module","full_name":"Athena::Validator::Violation::ConstraintViolationBuilderInterface","name":"ConstraintViolationBuilderInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-validator/src/violation/constraint_violation_builder_interface.cr","line_number":4,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_builder_interface.cr#L4"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Validator/Violation/ConstraintViolationBuilder","kind":"class","full_name":"Athena::Validator::Violation::ConstraintViolationBuilder(Root)","name":"ConstraintViolationBuilder"}],"namespace":{"html_id":"athena/Athena/Validator/Violation","kind":"module","full_name":"Athena::Validator::Violation","name":"Violation"},"doc":"A [Builder Pattern](https://en.wikipedia.org/wiki/Builder_pattern) type for building `AVD::Violation::ConstraintViolationInterface`s.\n\nAllows using the methods defined on `self` to construct the desired violation before adding it to the context.","summary":"<p>A <a href=\"https://en.wikipedia.org/wiki/Builder_pattern\" target=\"_blank\">Builder Pattern</a> type for building <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html\">AVD::Violation::ConstraintViolationInterface</a></code>s.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"add:Nil-instance-method","html_id":"add:Nil-instance-method","name":"add","doc":"Adds the violation to the current `AVD::ExecutionContextInterface`.","summary":"<p>Adds the violation to the current <code><a href=\"../../../Athena/Validator/ExecutionContextInterface.html\">AVD::ExecutionContextInterface</a></code>.</p>","abstract":true,"args":[],"args_string":" : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_builder_interface.cr#L6","def":{"name":"add","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"add_parameter(key:String,value:_):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"add_parameter(key:String,value:_):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"add_parameter","doc":"Adds a parameter with the provided *key* and *value* to the violations' `AVD::Violation::ConstraintViolationInterface#parameters`.\nThe provided *value* is stringified via `#to_s` before being added to the parameters.\n\nReturns `self` for chaining.","summary":"<p>Adds a parameter with the provided <em>key</em> and <em>value</em> to the violations' <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#parameters:Hash(String,String)-instance-method\">AVD::Violation::ConstraintViolationInterface#parameters</a></code>.</p>","abstract":true,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"args_string":"(key : String, value : _) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_builder_interface.cr#L12","def":{"name":"add_parameter","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":""}},{"id":"at_path(path:String):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"at_path(path:String):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"at_path","doc":"Sets the `AVD::Violation::ConstraintViolationInterface#property_path`.\n\nReturns `self` for chaining.","summary":"<p>Sets the <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#property_path:String-instance-method\">AVD::Violation::ConstraintViolationInterface#property_path</a></code>.</p>","abstract":true,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"args_string":"(path : String) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_builder_interface.cr#L17","def":{"name":"at_path","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":""}},{"id":"cause(cause:String?):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"cause(cause:String?):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"cause","doc":"Sets the `AVD::Violation::ConstraintViolationInterface#cause`\n\nReturns `self` for chaining.","summary":"<p>Sets the <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#cause:String?-instance-method\">AVD::Violation::ConstraintViolationInterface#cause</a></code></p>","abstract":true,"args":[{"name":"cause","doc":null,"default_value":"","external_name":"cause","restriction":"String | ::Nil"}],"args_string":"(cause : String?) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_builder_interface.cr#L22","def":{"name":"cause","args":[{"name":"cause","doc":null,"default_value":"","external_name":"cause","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":""}},{"id":"code(code:String?):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"code(code:String?):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"code","doc":"Sets the `AVD::Violation::ConstraintViolationInterface#code`\n\nReturns `self` for chaining.","summary":"<p>Sets the <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#code:String?-instance-method\">AVD::Violation::ConstraintViolationInterface#code</a></code></p>","abstract":true,"args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String | ::Nil"}],"args_string":"(code : String?) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_builder_interface.cr#L27","def":{"name":"code","args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":""}},{"id":"constraint(constraint:AVD::Constraint?):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"constraint(constraint:AVD::Constraint?):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"constraint","doc":"Sets the `AVD::Violation::ConstraintViolationInterface#constraint`\n\nReturns `self` for chaining.","summary":"<p>Sets the <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#constraint:AVD::Constraint?-instance-method\">AVD::Violation::ConstraintViolationInterface#constraint</a></code></p>","abstract":true,"args":[{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint | ::Nil"}],"args_string":"(constraint : AVD::Constraint?) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_builder_interface.cr#L32","def":{"name":"constraint","args":[{"name":"constraint","doc":null,"default_value":"","external_name":"constraint","restriction":"AVD::Constraint | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":""}},{"id":"invalid_value(value:_):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"invalid_value(value:_):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"invalid_value","doc":"Sets the `AVD::Violation::ConstraintViolationInterface#invalid_value`\n\nReturns `self` for chaining.","summary":"<p>Sets the <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#invalid_value-instance-method\">AVD::Violation::ConstraintViolationInterface#invalid_value</a></code></p>","abstract":true,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"args_string":"(value : _) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_builder_interface.cr#L37","def":{"name":"invalid_value","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":""}},{"id":"plural(number:Int32):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"plural(number:Int32):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"plural","doc":"Sets `AVD::Violation::ConstraintViolationInterface#plural`\n\nReturns `self` for chaining.","summary":"<p>Sets <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#plural:Int32?-instance-method\">AVD::Violation::ConstraintViolationInterface#plural</a></code></p>","abstract":true,"args":[{"name":"number","doc":null,"default_value":"","external_name":"number","restriction":"Int32"}],"args_string":"(number : Int32) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_builder_interface.cr#L42","def":{"name":"plural","args":[{"name":"number","doc":null,"default_value":"","external_name":"number","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":""}},{"id":"set_parameters(parameters:Hash(String,String)):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","html_id":"set_parameters(parameters:Hash(String,String)):AVD::Violation::ConstraintViolationBuilderInterface-instance-method","name":"set_parameters","doc":"Overrides the entire `AVD::Violation::ConstraintViolationInterface#parameters` hash with the provided *parameters*.\n\nReturns `self` for chaining.","summary":"<p>Overrides the entire <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#parameters:Hash(String,String)-instance-method\">AVD::Violation::ConstraintViolationInterface#parameters</a></code> hash with the provided <em>parameters</em>.</p>","abstract":true,"args":[{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":"Hash(String, String)"}],"args_string":"(parameters : Hash(String, String)) : AVD::Violation::ConstraintViolationBuilderInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_builder_interface.cr#L47","def":{"name":"set_parameters","args":[{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationBuilderInterface","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Violation/ConstraintViolationInterface","path":"Athena/Validator/Violation/ConstraintViolationInterface.html","kind":"module","full_name":"Athena::Validator::Violation::ConstraintViolationInterface","name":"ConstraintViolationInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-validator/src/violation/constraint_violation_interface.cr","line_number":6,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_interface.cr#L6"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Validator/Violation/ConstraintViolation","kind":"struct","full_name":"Athena::Validator::Violation::ConstraintViolation(Root)","name":"ConstraintViolation"}],"namespace":{"html_id":"athena/Athena/Validator/Violation","kind":"module","full_name":"Athena::Validator::Violation","name":"Violation"},"doc":"Represents a violation of a constraint during validation.\n\nEach failed constraint that fails during validation; one or more violations are created.\nThe violations store the violation message, the path to the failing element,\nand the root element originally passed to the validator.","summary":"<p>Represents a violation of a constraint during validation.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"cause:String?-instance-method","html_id":"cause:String?-instance-method","name":"cause","doc":"Returns the cause of the violation.","summary":"<p>Returns the cause of the violation.</p>","abstract":true,"args":[],"args_string":" : String?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_interface.cr#L8","def":{"name":"cause","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":""}},{"id":"code:String?-instance-method","html_id":"code:String?-instance-method","name":"code","doc":"Returns a unique machine readable error code representing `self.`\nAll constraints of a specific \"type\" should have the same code.","summary":"<p>Returns a unique machine readable error code representing <code>self.</code> All constraints of a specific \"type\" should have the same code.</p>","abstract":true,"args":[],"args_string":" : String?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_interface.cr#L12","def":{"name":"code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":""}},{"id":"constraint:AVD::Constraint?-instance-method","html_id":"constraint:AVD::Constraint?-instance-method","name":"constraint","doc":"Returns the `AVD::Constraint` whose validation caused the violation, if any.","summary":"<p>Returns the <code><a href=\"../../../Athena/Validator/Constraint.html\">AVD::Constraint</a></code> whose validation caused the violation, if any.</p>","abstract":true,"args":[],"args_string":" : AVD::Constraint?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_interface.cr#L15","def":{"name":"constraint","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Constraint | ::Nil","visibility":"Public","body":""}},{"id":"invalid_value-instance-method","html_id":"invalid_value-instance-method","name":"invalid_value","doc":"Returns the value that caused the violation.","summary":"<p>Returns the value that caused the violation.</p>","abstract":true,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_interface.cr#L18","def":{"name":"invalid_value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"message:String-instance-method","html_id":"message:String-instance-method","name":"message","doc":"Returns the violation message.","summary":"<p>Returns the violation message.</p>","abstract":true,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_interface.cr#L21","def":{"name":"message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}},{"id":"message_template:String?-instance-method","html_id":"message_template:String?-instance-method","name":"message_template","doc":"Returns the raw violation message.\n\nThe message template contains placeholders for the parameters returned via `#parameters`.","summary":"<p>Returns the raw violation message.</p>","abstract":true,"args":[],"args_string":" : String?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_interface.cr#L26","def":{"name":"message_template","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":""}},{"id":"parameters:Hash(String,String)-instance-method","html_id":"parameters:Hash(String,String)-instance-method","name":"parameters","doc":"Returns the parameters used to render the `#message_template`.","summary":"<p>Returns the parameters used to render the <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html#message_template:String?-instance-method\">#message_template</a></code>.</p>","abstract":true,"args":[],"args_string":" : Hash(String, String)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_interface.cr#L29","def":{"name":"parameters","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String)","visibility":"Public","body":""}},{"id":"plural:Int32?-instance-method","html_id":"plural:Int32?-instance-method","name":"plural","doc":"Returns a number used to pluralize the violation message.\n\nThe returned value is used to determine the right plurlaization form.","summary":"<p>Returns a number used to pluralize the violation message.</p>","abstract":true,"args":[],"args_string":" : Int32?","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_interface.cr#L34","def":{"name":"plural","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32 | ::Nil","visibility":"Public","body":""}},{"id":"property_path:String-instance-method","html_id":"property_path:String-instance-method","name":"property_path","doc":"Returns the path from the root element to the violation.","summary":"<p>Returns the path from the root element to the violation.</p>","abstract":true,"args":[],"args_string":" : String","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_interface.cr#L37","def":{"name":"property_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}},{"id":"root-instance-method","html_id":"root-instance-method","name":"root","doc":"Returns the element originally passed to the validator.","summary":"<p>Returns the element originally passed to the validator.</p>","abstract":true,"args":[],"args_string":"","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_interface.cr#L40","def":{"name":"root","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"to_json(builder:JSON::Builder):Nil-instance-method","html_id":"to_json(builder:JSON::Builder):Nil-instance-method","name":"to_json","doc":"Returns a `JSON` representation of `self`.","summary":"<p>Returns a <code>JSON</code> representation of <code>self</code>.</p>","abstract":true,"args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"JSON::Builder"}],"args_string":"(builder : JSON::Builder) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_interface.cr#L43","def":{"name":"to_json","args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"to_s(io:IO):Nil-instance-method","html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Returns a string representation of `self`.","summary":"<p>Returns a string representation of <code>self</code>.</p>","abstract":true,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_interface.cr#L46","def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Violation/ConstraintViolationList","path":"Athena/Validator/Violation/ConstraintViolationList.html","kind":"struct","full_name":"Athena::Validator::Violation::ConstraintViolationList","name":"ConstraintViolationList","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"},{"html_id":"athena/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"athena/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"athena/Athena/Validator/Violation/ConstraintViolationListInterface","kind":"module","full_name":"Athena::Validator::Violation::ConstraintViolationListInterface","name":"ConstraintViolationListInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"lib/athena-validator/src/violation/constraint_violation_list.cr","line_number":4,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_list.cr#L4"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Validator/Violation/ConstraintViolationListInterface","kind":"module","full_name":"Athena::Validator::Violation::ConstraintViolationListInterface","name":"ConstraintViolationListInterface"},{"html_id":"athena/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Validator/Violation","kind":"module","full_name":"Athena::Validator::Violation","name":"Violation"},"doc":"Basic implementation of `AVD::Violation::ConstraintViolationListInterface`.","summary":"<p>Basic implementation of <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationListInterface.html\">AVD::Violation::ConstraintViolationListInterface</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(violations:Array(AVD::Violation::ConstraintViolationInterface)=[]ofAVD::Violation::ConstraintViolationInterface)-class-method","html_id":"new(violations:Array(AVD::Violation::ConstraintViolationInterface)=[]ofAVD::Violation::ConstraintViolationInterface)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"violations","doc":null,"default_value":"[] of AVD::Violation::ConstraintViolationInterface","external_name":"violations","restriction":"Array(AVD::Violation::ConstraintViolationInterface)"}],"args_string":"(violations : Array(AVD::Violation::ConstraintViolationInterface) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">AVD</span><span class=\"t\">::</span><span class=\"t\">Violation</span><span class=\"t\">::</span><span class=\"t\">ConstraintViolationInterface</span>)","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_list.cr#L10","def":{"name":"new","args":[{"name":"violations","doc":null,"default_value":"[] of AVD::Violation::ConstraintViolationInterface","external_name":"violations","restriction":"Array(AVD::Violation::ConstraintViolationInterface)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(violations)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add(violation:AVD::Violation::ConstraintViolationInterface):Nil-instance-method","html_id":"add(violation:AVD::Violation::ConstraintViolationInterface):Nil-instance-method","name":"add","doc":"Adds the provided *violation* to `self`.","summary":"<p>Adds the provided <em>violation</em> to <code>self</code>.</p>","abstract":false,"args":[{"name":"violation","doc":null,"default_value":"","external_name":"violation","restriction":"AVD::Violation::ConstraintViolationInterface"}],"args_string":"(violation : AVD::Violation::ConstraintViolationInterface) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_list.cr#L22","def":{"name":"add","args":[{"name":"violation","doc":null,"default_value":"","external_name":"violation","restriction":"AVD::Violation::ConstraintViolationInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@violations << violation"}},{"id":"add(violations:AVD::Violation::ConstraintViolationListInterface):Nil-instance-method","html_id":"add(violations:AVD::Violation::ConstraintViolationListInterface):Nil-instance-method","name":"add","doc":"Adds each of the provided *violations* to `self`.","summary":"<p>Adds each of the provided <em>violations</em> to <code>self</code>.</p>","abstract":false,"args":[{"name":"violations","doc":null,"default_value":"","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationListInterface"}],"args_string":"(violations : AVD::Violation::ConstraintViolationListInterface) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_list.cr#L27","def":{"name":"add","args":[{"name":"violations","doc":null,"default_value":"","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationListInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@violations.concat(violations)"}},{"id":"find_by_code(error_code:String):AVD::Violation::ConstraintViolationListInterface-instance-method","html_id":"find_by_code(error_code:String):AVD::Violation::ConstraintViolationListInterface-instance-method","name":"find_by_code","doc":"Returns a new `AVD::Violation::ConstraintViolationInterface` that conists only of violations with the provided *error_code*.","summary":"<p>Returns a new <code><a href=\"../../../Athena/Validator/Violation/ConstraintViolationInterface.html\">AVD::Violation::ConstraintViolationInterface</a></code> that conists only of violations with the provided <em>error_code</em>.</p>","abstract":false,"args":[{"name":"error_code","doc":null,"default_value":"","external_name":"error_code","restriction":"String"}],"args_string":"(error_code : String) : AVD::Violation::ConstraintViolationListInterface","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_list.cr#L17","def":{"name":"find_by_code","args":[{"name":"error_code","doc":null,"default_value":"","external_name":"error_code","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AVD::Violation::ConstraintViolationListInterface","visibility":"Public","body":"self.class.new(@violations.select do |__arg0|\n  __arg0.code == error_code\nend)"}},{"id":"has?(index:Int):Bool-instance-method","html_id":"has?(index:Int):Bool-instance-method","name":"has?","doc":"Returns `true` if a violation exists at the provided *index*, otherwise `false`.","summary":"<p>Returns <code>true</code> if a violation exists at the provided <em>index</em>, otherwise <code>false</code>.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_list.cr#L32","def":{"name":"has?","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"!@violations[index]?.nil?"}},{"id":"remove(index:Int):Nil-instance-method","html_id":"remove(index:Int):Nil-instance-method","name":"remove","doc":"Returns the violation at the provided *index*.","summary":"<p>Returns the violation at the provided <em>index</em>.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_list.cr#L37","def":{"name":"remove","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@violations.delete_at(index)"}},{"id":"set(index:Int,violation:AVD::Violation::ConstraintViolationInterface):Nil-instance-method","html_id":"set(index:Int,violation:AVD::Violation::ConstraintViolationInterface):Nil-instance-method","name":"set","doc":"Sets the provided *violation* at the provided *index*.","summary":"<p>Sets the provided <em>violation</em> at the provided <em>index</em>.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"},{"name":"violation","doc":null,"default_value":"","external_name":"violation","restriction":"AVD::Violation::ConstraintViolationInterface"}],"args_string":"(index : Int, violation : AVD::Violation::ConstraintViolationInterface) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_list.cr#L42","def":{"name":"set","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"},{"name":"violation","doc":null,"default_value":"","external_name":"violation","restriction":"AVD::Violation::ConstraintViolationInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@violations[index] = violation"}},{"id":"size:Int-instance-method","html_id":"size:Int-instance-method","name":"size","doc":"Returns the number of elements in this container.","summary":"<p>Returns the number of elements in this container.</p>","abstract":false,"args":[],"args_string":" : Int","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_list.cr#L47","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int","visibility":"Public","body":"@violations.size"}},{"id":"to_json(builder:JSON::Builder):Nil-instance-method","html_id":"to_json(builder:JSON::Builder):Nil-instance-method","name":"to_json","doc":"Returns a `JSON` representation of `self`.","summary":"<p>Returns a <code>JSON</code> representation of <code>self</code>.</p>","abstract":false,"args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"JSON::Builder"}],"args_string":"(builder : JSON::Builder) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_list.cr#L52","def":{"name":"to_json","args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"builder.array do\n  @violations.each do |violation|\n    violation.to_json(builder)\n  end\nend"}},{"id":"to_s(io:IO):Nil-instance-method","html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Returns a string representation of `self`.","summary":"<p>Returns a string representation of <code>self</code>.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_list.cr#L61","def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@violations.each do |violation|\n  violation.to_s(io)\nend"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Validator/Violation/ConstraintViolationListInterface","path":"Athena/Validator/Violation/ConstraintViolationListInterface.html","kind":"module","full_name":"Athena::Validator::Violation::ConstraintViolationListInterface","name":"ConstraintViolationListInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-validator/src/violation/constraint_violation_list_interface.cr","line_number":2,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_list_interface.cr#L2"}],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Validator/Violation/ConstraintViolationList","kind":"struct","full_name":"Athena::Validator::Violation::ConstraintViolationList","name":"ConstraintViolationList"}],"namespace":{"html_id":"athena/Athena/Validator/Violation","kind":"module","full_name":"Athena::Validator::Violation","name":"Violation"},"doc":"A wrapper type around an `Array(AVD::ConstraintViolationInterface)`.","summary":"<p>A wrapper type around an <code>Array(AVD::ConstraintViolationInterface)</code>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"add(violation:AVD::Violation::ConstraintViolationInterface):Nil-instance-method","html_id":"add(violation:AVD::Violation::ConstraintViolationInterface):Nil-instance-method","name":"add","doc":"Adds the provided *violation* to `self`.","summary":"<p>Adds the provided <em>violation</em> to <code>self</code>.</p>","abstract":true,"args":[{"name":"violation","doc":null,"default_value":"","external_name":"violation","restriction":"AVD::Violation::ConstraintViolationInterface"}],"args_string":"(violation : AVD::Violation::ConstraintViolationInterface) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_list_interface.cr#L4","def":{"name":"add","args":[{"name":"violation","doc":null,"default_value":"","external_name":"violation","restriction":"AVD::Violation::ConstraintViolationInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"add(violations:AVD::Violation::ConstraintViolationListInterface):Nil-instance-method","html_id":"add(violations:AVD::Violation::ConstraintViolationListInterface):Nil-instance-method","name":"add","doc":"Adds each of the provided *violations* to `self`.","summary":"<p>Adds each of the provided <em>violations</em> to <code>self</code>.</p>","abstract":true,"args":[{"name":"violations","doc":null,"default_value":"","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationListInterface"}],"args_string":"(violations : AVD::Violation::ConstraintViolationListInterface) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_list_interface.cr#L7","def":{"name":"add","args":[{"name":"violations","doc":null,"default_value":"","external_name":"violations","restriction":"AVD::Violation::ConstraintViolationListInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"has?(index:Int):Bool-instance-method","html_id":"has?(index:Int):Bool-instance-method","name":"has?","doc":"Returns `true` if a violation exists at the provided *index*, otherwise `false`.","summary":"<p>Returns <code>true</code> if a violation exists at the provided <em>index</em>, otherwise <code>false</code>.</p>","abstract":true,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : Bool","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_list_interface.cr#L10","def":{"name":"has?","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":""}},{"id":"remove(index:Int):Nil-instance-method","html_id":"remove(index:Int):Nil-instance-method","name":"remove","doc":"Returns the violation at the provided *index*.","summary":"<p>Returns the violation at the provided <em>index</em>.</p>","abstract":true,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_list_interface.cr#L19","def":{"name":"remove","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"set(index:Int,violation:AVD::Violation::ConstraintViolationInterface):Nil-instance-method","html_id":"set(index:Int,violation:AVD::Violation::ConstraintViolationInterface):Nil-instance-method","name":"set","doc":"Sets the provided *violation* at the provided *index*.","summary":"<p>Sets the provided <em>violation</em> at the provided <em>index</em>.</p>","abstract":true,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"},{"name":"violation","doc":null,"default_value":"","external_name":"violation","restriction":"AVD::Violation::ConstraintViolationInterface"}],"args_string":"(index : Int, violation : AVD::Violation::ConstraintViolationInterface) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_list_interface.cr#L13","def":{"name":"set","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"},{"name":"violation","doc":null,"default_value":"","external_name":"violation","restriction":"AVD::Violation::ConstraintViolationInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"size:Int-instance-method","html_id":"size:Int-instance-method","name":"size","doc":"Returns the number of violations in `self`.","summary":"<p>Returns the number of violations in <code>self</code>.</p>","abstract":true,"args":[],"args_string":" : Int","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_list_interface.cr#L16","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int","visibility":"Public","body":""}},{"id":"to_json(builder:JSON::Builder):Nil-instance-method","html_id":"to_json(builder:JSON::Builder):Nil-instance-method","name":"to_json","doc":"Returns a `JSON` representation of `self`.","summary":"<p>Returns a <code>JSON</code> representation of <code>self</code>.</p>","abstract":true,"args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"JSON::Builder"}],"args_string":"(builder : JSON::Builder) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_list_interface.cr#L22","def":{"name":"to_json","args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"to_s(io:IO):Nil-instance-method","html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Returns a string representation of `self`.","summary":"<p>Returns a string representation of <code>self</code>.</p>","abstract":true,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","source_link":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/violation/constraint_violation_list_interface.cr#L25","def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}}],"macros":[],"types":[]}]}]}]},{"html_id":"athena/AVD","path":"AVD.html","kind":"alias","full_name":"AVD","name":"AVD","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"lib/athena-validator/src/athena-validator.cr","line_number":22,"url":"https://github.com/athena-framework/athena/blob/002eda34099e6c2baefdcf25e4e0af30e1a40dea/lib/athena-validator/src/athena-validator.cr#L22"}],"repository_name":"athena","program":false,"enum":false,"alias":true,"aliased":"Athena::Validator","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Convenience alias to make referencing `Athena::Validator` types easier.","summary":"<p>Convenience alias to make referencing <code><a href=\"Athena/Validator.html\">Athena::Validator</a></code> types easier.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}})